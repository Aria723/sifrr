/*! Sifrr.Fetch v0.0.4 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr */
var e=class{constructor(e,s){this._options=s,this._url=e}get response(){const e=this;return window.fetch(this.url,this.options).then(s=>{const t=s.headers.get("content-type"),r=t&&t.includes("application/json");if(s.ok&&"function"==typeof e._options.onProgress){const t=s.headers.get("content-length"),r=parseInt(t,10);if(r&&s.body&&ReadableStream){const t=s.body.getReader();let o=0;s=new Response(new ReadableStream({start:s=>(function n(){return t.read().then(({done:t,value:i})=>{if(!t)return o+=i.byteLength,e._options.onProgress(o/r*100),s.enqueue(i),n();e._options.onProgress(100),s.close()})})()}))}else e._options.onProgress(100)}else if(!s.ok){"function"==typeof e._options.onProgress&&e._options.onProgress(100);let t=Error(s.statusText);throw t.response=s,t}return{response:s,isJson:r}}).then(({response:e,isJson:s})=>s?e.json():e)}get url(){const e=this._options.params;return e&&Object.keys(e).length>0?this._url+"?"+Object.keys(e).map(s=>encodeURIComponent(s)+"="+encodeURIComponent(e[s])).join("&"):this._url}get options(){const e=Object.assign({redirect:"follow"},this._options);return e.headers=Object.assign({accept:"application/json"},this._options.headers||{}),e.body&&e.body.constructor==={}.constructor&&(e.headers["content-type"]=e.headers["content-type"]||"application/json",e.body=JSON.stringify(e.body)),e}};var s=class{constructor(e,s,t=(()=>Promise.reject(Error("No fallback provided for websocket failure.")))){this.url=e,this.protocol=s,this._fallback=!window.WebSocket,this.fallback=t,this.id=1,this._requests={},this._openSocket()}send(e,s){return e.constructor==={}.constructor?this.sendJSON(e,s):this.sendRaw(e,this.id++)}sendJSON(e,s="JSON"){const t={};return t.sifrrQueryType=s,t.sifrrQueryId=this.id++,t.data=e,this.sendRaw(JSON.stringify(t),t.sifrrQueryId,e)}async sendRaw(e,s,t=e){return this._fallback?this.fallback(t):await this._openSocket()?(this.ws.send(e),new Promise(e=>{this._requests[s]={res:t=>{delete this._requests[s],e(t)},original:t}})):this.fallback(t)}_openSocket(){if(this.ws){if(this.ws.readyState===this.ws.OPEN)return Promise.resolve(!0);if(this.ws.readyState!==this.ws.CONNECTING)return this.ws=null,this._openSocket()}else this.ws=new window.WebSocket(this.url,this.protocol),this.ws.onopen=this.onopen.bind(this),this.ws.onerror=this.onerror.bind(this),this.ws.onclose=this.onclose.bind(this),this.ws.onmessage=this._onmessage.bind(this);const e=this;return new Promise(s=>{window.requestAnimationFrame(function t(){e.ws.readyState===e.ws.CONNECTING?window.requestAnimationFrame(t):e.ws.readyState!==e.ws.OPEN?(window.console.error(`Failed to open socket on ${e.url}`),s(!1)):s(!0)})})}onerror(){this._fallback=!!this.fallback;for(let e in this._requests){const s=this._requests[e];this.fallback(s.data).then(e=>s.res(e))}}onopen(){}onclose(){}close(){this.ws.close()}_onmessage(e){const s=JSON.parse(e.data);s.sifrrQueryId&&this._requests[s.sifrrQueryId].res(s.data),delete this._requests[s.sifrrQueryId],this.onmessage(e)}onmessage(){}};class t{static get(e,s){return this.request(e,s,"GET")}static post(e,s){return this.request(e,s,"POST")}static put(e,s){return this.request(e,s,"PUT")}static delete(e,s){return this.request(e,s,"DELETE")}static graphql(e,s){const{query:t,variables:r={}}=s;return delete s.query,delete s.variables,s.headers=s.headers||{},s.headers["Content-Type"]="application/json",s.headers.Accept="application/json",s.body={query:t,variables:r},this.request(e,s,"POST")}static socket(e,t,r){return new s(e,t,r?e=>{const s={},t=r.method.toLowerCase();return s.headers=s.headers||{},s.headers["content-type"]=s.headers["content-type"]||"application/json","post"===t?s.body=e:s.query=e,this[t](r.url,s)}:void 0)}static file(e,s={}){return s.headers=s.headers||{},s.headers.accept=s.headers.accept||"*/*",this.request(e,s,"GET")}static request(s,t,r){const{url:o,options:n}=this.afterUse(s,t,r);return new e(o,n).response}static use(e){t._middlewares.push(e)}static afterUse(e,s={},r){return s.method=(s.method||r).toUpperCase(),t._middlewares.forEach(t=>{const r=t(e,s);e=r.url,s=r.options}),{url:e,options:s}}}t._middlewares=[],t.WebSocket=s;export default t;
/*! (c) @aadityataparia */
