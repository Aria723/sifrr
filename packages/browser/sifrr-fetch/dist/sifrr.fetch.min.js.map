{"version":3,"file":"sifrr.fetch.min.js","sources":["../src/request.js","../src/sifrr.fetch.js"],"sourcesContent":["class Request {\n  constructor(type, url, options = {}) {\n    this.type = type;\n    this._options = options;\n    this._url = url;\n  }\n\n  get response() {\n    return window.fetch(this.url, this.options).then(resp => {\n      let contentType = resp.headers.get('content-type');\n      if (resp.ok) {\n        if(contentType && contentType.includes('application/json')) {\n          resp = resp.json();\n        }\n        return resp;\n      } else {\n        let error = Error(resp.statusText);\n        error.response = resp;\n        throw error;\n      }\n    });\n  }\n\n  get url() {\n    const params = this._options.params;\n    if (params && Object.keys(params).length > 0) {\n      return this._url + '?' + Object.keys(params).map(k =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n    } else {\n      return this._url;\n    }\n  }\n\n  get options() {\n    const options = Object.assign({\n      method: this.type,\n      mode: 'cors',\n      redirect: 'follow',\n      cache: 'no-cache'\n    }, this._options);\n    options.headers = Object.assign({\n      accept: 'application/json'\n    }, this._options.headers || {});\n    if (typeof options.body === 'object') {\n      options.body = JSON.stringify(options.body);\n    }\n    return options;\n  }\n}\n\nmodule.exports = Request;\n","const Request = require('./request');\n\nclass SifrrFetch {\n  static get(url, options = {}) {\n    return new Request('GET', url, options).response;\n  }\n\n  static post(url, options = {}) {\n    return new Request('POST', url, options).response;\n  }\n\n  static put(url, options = {}) {\n    return new Request('PUT', url, options).response;\n  }\n\n  static delete(url, options = {}) {\n    return new Request('DELETE', url, options).response;\n  }\n\n  static graphql(url, options = {}) {\n    const { query, variables = {} } = options;\n    delete options.query;\n    delete options.variables;\n    options.headers = options.headers || {};\n    options.headers['Content-Type'] = 'application/json';\n    options.headers['Accept'] = 'application/json';\n    options.body = {\n      query,\n      variables\n    };\n    return new Request('POST', url, options).response;\n  }\n\n  static file(url, options = {}) {\n    options.headers = options.headers || {};\n    options.headers.accept = options.headers.accept || '*/*';\n    return new Request('GET', url, options).response;\n  }\n}\n\nmodule.exports = SifrrFetch;\n"],"names":["constructor","type","url","options","_options","_url","window","fetch","this","then","resp","contentType","headers","get","ok","includes","json","error","Error","statusText","response","params","Object","keys","length","map","k","encodeURIComponent","join","assign","method","mode","redirect","cache","accept","body","JSON","stringify","Request","query","variables"],"mappings":";6MAmDA,MAnDA,MACEA,YAAYC,EAAMC,EAAKC,EAAU,SAC1BF,KAAOA,OACPG,SAAWD,OACXE,KAAOH,wBAILI,OAAOC,MAAMC,KAAKN,IAAKM,KAAKL,SAASM,KAAKC,QAC3CC,EAAcD,EAAKE,QAAQC,IAAI,mBAC/BH,EAAKI,UACJH,GAAeA,EAAYI,SAAS,sBACrCL,EAAOA,EAAKM,QAEPN,EACF,KACDO,EAAQC,MAAMR,EAAKS,kBACvBF,EAAMG,SAAWV,EACXO,qBAMJI,EAASb,KAAKJ,SAASiB,cACzBA,GAAUC,OAAOC,KAAKF,GAAQG,OAAS,EAClChB,KAAKH,KAAO,IAAMiB,OAAOC,KAAKF,GAAQI,IAAIC,GAC/CC,mBAAmBD,GAAK,IAAMC,mBAAmBN,EAAOK,KACxDE,KAAK,KAEApB,KAAKH,yBAKRF,EAAUmB,OAAOO,OAAO,CAC5BC,OAAQtB,KAAKP,KACb8B,KAAM,OACNC,SAAU,SACVC,MAAO,YACNzB,KAAKJ,iBACRD,EAAQS,QAAUU,OAAOO,OAAO,CAC9BK,OAAQ,oBACP1B,KAAKJ,SAASQ,SAAW,IACA,iBAAjBT,EAAQgC,OACjBhC,EAAQgC,KAAOC,KAAKC,UAAUlC,EAAQgC,OAEjChC,WC7CX,iBACaD,EAAKC,EAAU,WACjB,IAAImC,EAAQ,MAAOpC,EAAKC,GAASiB,qBAG9BlB,EAAKC,EAAU,WAClB,IAAImC,EAAQ,OAAQpC,EAAKC,GAASiB,oBAGhClB,EAAKC,EAAU,WACjB,IAAImC,EAAQ,MAAOpC,EAAKC,GAASiB,uBAG5BlB,EAAKC,EAAU,WACpB,IAAImC,EAAQ,SAAUpC,EAAKC,GAASiB,wBAG9BlB,EAAKC,EAAU,UACtBoC,MAAEA,EAAFC,UAASA,EAAY,IAAOrC,gBAC3BA,EAAQoC,aACRpC,EAAQqC,UACfrC,EAAQS,QAAUT,EAAQS,SAAW,GACrCT,EAAQS,QAAQ,gBAAkB,mBAClCT,EAAQS,QAAR,OAA4B,mBAC5BT,EAAQgC,KAAO,CACbI,MAAAA,EACAC,UAAAA,GAEK,IAAIF,EAAQ,OAAQpC,EAAKC,GAASiB,qBAG/BlB,EAAKC,EAAU,WACzBA,EAAQS,QAAUT,EAAQS,SAAW,GACrCT,EAAQS,QAAQsB,OAAS/B,EAAQS,QAAQsB,QAAU,MAC5C,IAAII,EAAQ,MAAOpC,EAAKC,GAASiB"}