{"version":3,"file":"sifrr.fetch.min.js","sources":["../src/request.js","../src/websocket.js","../src/sifrr.fetch.js"],"sourcesContent":["class Request {\n  constructor(url, options = {}) {\n    this._options = options;\n    this._url = url;\n  }\n\n  get response() {\n    const me = this;\n    return window.fetch(this.url, this.options).then(resp => {\n      const contentType = resp.headers.get('content-type');\n      const isJson = contentType && contentType.includes('application/json');\n      if (resp.ok && typeof me._options.onProgress === 'function') {\n        const contentLength = resp.headers.get('content-length');\n        const total = parseInt(contentLength,10);\n        if (!total || !resp.body) {\n          me._options.onProgress(100);\n        } else {\n          const reader = resp.body.getReader();\n          let loaded = 0;\n          resp = new Response(new ReadableStream({\n            start(controller) {\n              function read() {\n                return reader.read().then(({ done, value }) => {\n                  if (done) {\n                    me._options.onProgress(100);\n                    controller.close();\n                  } else {\n                    loaded += value.byteLength;\n                    me._options.onProgress(loaded / total * 100);\n                    controller.enqueue(value);\n                    return read();\n                  }\n                });\n              }\n              return read();\n            }\n          }));\n        }\n      } else if (!resp.ok) {\n        if (typeof me._options.onProgress === 'function') me._options.onProgress(100);\n        let error = Error(resp.statusText);\n        error.response = resp;\n        throw error;\n      }\n      return {\n        response: resp,\n        isJson\n      };\n    }).then(({ response, isJson }) => {\n      if(isJson) return response.json();\n      return response;\n    });\n  }\n\n  get url() {\n    const params = this._options.params;\n    if (params && Object.keys(params).length > 0) {\n      return this._url + '?' + Object.keys(params).map(k =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n    } else {\n      return this._url;\n    }\n  }\n\n  get options() {\n    const options = Object.assign({\n      mode: 'cors',\n      redirect: 'follow',\n      cache: 'no-cache'\n    }, this._options);\n    options.headers = Object.assign({\n      accept: 'application/json'\n    }, this._options.headers || {});\n    if (typeof options.body === 'object') {\n      options.body = JSON.stringify(options.body);\n    }\n    return options;\n  }\n}\n\nmodule.exports = Request;\n","class WebSocket {\n  constructor(url, protocol, fallback) {\n    this.url = url;\n    this.protocol = protocol;\n    this._fallback = !window.WebSocket;\n    this.fallback = fallback;\n    this.id = 1;\n    this._requests = {};\n    this._openSocket();\n  }\n\n  async send(message) {\n    if (this._fallback) return this.fallback(message);\n    const id = this.id;\n    this.id++;\n    await this._openSocket();\n    message.sifrrQueryId = id;\n    this.ws.send(JSON.stringify(message));\n    const ret = new Promise((res) => {\n      this._requests[id] = {\n        res: (v) => {\n          delete this._requests[id];\n          res(v);\n        },\n        message\n      };\n    });\n    return ret;\n  }\n\n  _openSocket() {\n    if (!this.ws || this.ws.readyState === this.ws.CLOSED || this.ws.readyState === this.ws.CLOSING) {\n      this.ws = new window.WebSocket(this.url, this.protocol);\n      this.ws.onopen = this.onopen.bind(this);\n      this.ws.onerror = this.onerror.bind(this);\n      this.ws.onclose = this.onclose.bind(this);\n      this.ws.onmessage = this.onmessage.bind(this);\n      const me = this;\n      return new Promise(res => {\n        function waiting() {\n          if (me.ws.readyState !== me.ws.OPEN) {\n            window.requestAnimationFrame(waiting);\n          } else {\n            res();\n          }\n        }\n        window.requestAnimationFrame(waiting);\n      });\n    }\n    return Promise.resolve(true);\n  }\n\n  onerror() {\n    this._fallback = !!this.fallback;\n    for (let r in this._requests) {\n      const req = this._requests[r];\n      this.fallback(req.message).then(result => req.res(result));\n    }\n  }\n\n  onopen() {}\n\n  onclose() {}\n\n  onmessage(event) {\n    const data = JSON.parse(event.data);\n    if (data.sifrrQueryId) this._requests[data.sifrrQueryId].res(data.result);\n    delete this._requests[data.sifrrQueryId];\n  }\n}\n\nmodule.exports = WebSocket;\n","const Request = require('./request');\nconst WebSocket = require('./websocket');\n\nclass SifrrFetch {\n  static get(purl, poptions) {\n    return this.request(purl, poptions, 'GET');\n  }\n\n  static post(purl, poptions) {\n    return this.request(purl, poptions, 'POST');\n  }\n\n  static put(purl, poptions) {\n    return this.request(purl, poptions, 'PUT');\n  }\n\n  static delete(purl, poptions) {\n    return this.request(purl, poptions, 'DELETE');\n  }\n\n  static graphql(purl, poptions) {\n    const { query, variables = {} } = poptions;\n    delete poptions.query;\n    delete poptions.variables;\n    poptions.headers = poptions.headers || {};\n    poptions.headers['Content-Type'] = 'application/json';\n    poptions.headers['Accept'] = 'application/json';\n    poptions.body = {\n      query,\n      variables\n    };\n    return this.request(purl, poptions, 'POST');\n  }\n\n  static socket(url, protocol, fallback) {\n    return new WebSocket(url, protocol, fallback ? (message) => {\n      const options = { method: fallback.method.toUpperCase() };\n      if (options.method === 'POST') options.body = message;\n      else options.query = message;\n      return this.request(fallback.url, options);\n    } : false);\n  }\n\n  static file(purl, poptions) {\n    poptions.headers = poptions.headers || {};\n    poptions.headers.accept = poptions.headers.accept || '*/*';\n    return this.request(purl, poptions, 'GET');\n  }\n\n  static request(purl, poptions, method) {\n    const { url, options } = this.afterUse(purl, poptions, method);\n    return new Request(url, options).response;\n  }\n\n  static use(fxn) {\n    SifrrFetch._middlewares.push(fxn);\n  }\n\n  static afterUse(url, options = {}, method) {\n    options.method = options.method || method;\n    SifrrFetch._middlewares.forEach((fxn) => {\n      const res = fxn(url, options);\n      url = res.url;\n      options = res.options;\n    });\n    return { url, options };\n  }\n}\n\nSifrrFetch._middlewares = [];\nSifrrFetch.WebSocket = WebSocket;\n\nmodule.exports = SifrrFetch;\n"],"names":["constructor","url","options","_options","_url","me","this","window","fetch","then","resp","contentType","headers","get","isJson","includes","ok","onProgress","contentLength","total","parseInt","body","reader","getReader","loaded","Response","ReadableStream","start","controller","read","done","value","byteLength","enqueue","close","error","Error","statusText","response","json","params","Object","keys","length","map","k","encodeURIComponent","join","assign","mode","redirect","cache","accept","JSON","stringify","protocol","fallback","_fallback","WebSocket","id","_requests","_openSocket","message","sifrrQueryId","ws","send","Promise","res","v","readyState","CLOSED","CLOSING","onopen","bind","onerror","onclose","onmessage","requestAnimationFrame","waiting","OPEN","resolve","r","req","result","event","data","parse","SifrrFetch","purl","poptions","request","query","variables","method","toUpperCase","afterUse","Request","fxn","_middlewares","push","forEach"],"mappings":"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"}