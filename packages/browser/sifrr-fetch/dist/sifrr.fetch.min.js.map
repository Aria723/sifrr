{"version":3,"file":"sifrr.fetch.min.js","sources":["../src/request.js","../src/sifrr.fetch.js"],"sourcesContent":["class Request {\n  constructor(url, options = {}) {\n    this._options = options;\n    this._url = url;\n  }\n\n  get response() {\n    return window.fetch(this.url, this.options).then(resp => {\n      let contentType = resp.headers.get('content-type');\n      if (resp.ok) {\n        if(contentType && contentType.includes('application/json')) {\n          resp = resp.json();\n        }\n        return resp;\n      } else {\n        let error = Error(resp.statusText);\n        error.response = resp;\n        throw error;\n      }\n    });\n  }\n\n  get url() {\n    const params = this._options.params;\n    if (params && Object.keys(params).length > 0) {\n      return this._url + '?' + Object.keys(params).map(k =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n    } else {\n      return this._url;\n    }\n  }\n\n  get options() {\n    const options = Object.assign({\n      mode: 'cors',\n      redirect: 'follow',\n      cache: 'no-cache'\n    }, this._options);\n    options.headers = Object.assign({\n      accept: 'application/json'\n    }, this._options.headers || {});\n    if (typeof options.body === 'object') {\n      options.body = JSON.stringify(options.body);\n    }\n    return options;\n  }\n}\n\nmodule.exports = Request;\n","const Request = require('./request');\n\nclass SifrrFetch {\n  static get(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'GET');\n    return new Request(url, options).response;\n  }\n\n  static post(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'POST');\n    return new Request(url, options).response;\n  }\n\n  static put(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'PUT');\n    return new Request(url, options).response;\n  }\n\n  static delete(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'DELETE');\n    return new Request(url, options).response;\n  }\n\n  static graphql(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'POST');\n    const { query, variables = {} } = options;\n    delete options.query;\n    delete options.variables;\n    options.headers = options.headers || {};\n    options.headers['Content-Type'] = 'application/json';\n    options.headers['Accept'] = 'application/json';\n    options.body = {\n      query,\n      variables\n    };\n    return new Request(url, options).response;\n  }\n\n  static file(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'GET');\n    options.headers = options.headers || {};\n    options.headers.accept = options.headers.accept || '*/*';\n    return new Request(url, options).response;\n  }\n\n  static use(fxn) {\n    SifrrFetch._middlewares.push(fxn);\n  }\n\n  static afterUse(url, options = {}, method) {\n    options.method = method;\n    SifrrFetch._middlewares.forEach((fxn) => {\n      const res = fxn(url, options);\n      url = res.url;\n      options = res.options;\n    });\n    return { url, options };\n  }\n}\n\nSifrrFetch._middlewares = [];\n\nmodule.exports = SifrrFetch;\n"],"names":["constructor","url","options","_options","_url","window","fetch","this","then","resp","contentType","headers","get","ok","includes","json","error","Error","statusText","response","params","Object","keys","length","map","k","encodeURIComponent","join","assign","mode","redirect","cache","accept","body","JSON","stringify","SifrrFetch","purl","poptions","afterUse","Request","query","variables","fxn","_middlewares","push","method","forEach","res"],"mappings":";6MAiDA,MAjDA,MACEA,YAAYC,EAAKC,EAAU,SACpBC,SAAWD,OACXE,KAAOH,wBAILI,OAAOC,MAAMC,KAAKN,IAAKM,KAAKL,SAASM,KAAKC,QAC3CC,EAAcD,EAAKE,QAAQC,IAAI,mBAC/BH,EAAKI,UACJH,GAAeA,EAAYI,SAAS,sBACrCL,EAAOA,EAAKM,QAEPN,EACF,KACDO,EAAQC,MAAMR,EAAKS,kBACvBF,EAAMG,SAAWV,EACXO,qBAMJI,EAASb,KAAKJ,SAASiB,cACzBA,GAAUC,OAAOC,KAAKF,GAAQG,OAAS,EAClChB,KAAKH,KAAO,IAAMiB,OAAOC,KAAKF,GAAQI,IAAIC,GAC/CC,mBAAmBD,GAAK,IAAMC,mBAAmBN,EAAOK,KACxDE,KAAK,KAEApB,KAAKH,yBAKRF,EAAUmB,OAAOO,OAAO,CAC5BC,KAAM,OACNC,SAAU,SACVC,MAAO,YACNxB,KAAKJ,iBACRD,EAAQS,QAAUU,OAAOO,OAAO,CAC9BI,OAAQ,oBACPzB,KAAKJ,SAASQ,SAAW,IACA,iBAAjBT,EAAQ+B,OACjB/B,EAAQ+B,KAAOC,KAAKC,UAAUjC,EAAQ+B,OAEjC/B,IC3CX,MAAMkC,aACOC,EAAMC,SACTrC,IAAEA,EAAFC,QAAOA,GAAYK,KAAKgC,SAASF,EAAMC,EAAU,cAChD,IAAIE,EAAQvC,EAAKC,GAASiB,qBAGvBkB,EAAMC,SACVrC,IAAEA,EAAFC,QAAOA,GAAYK,KAAKgC,SAASF,EAAMC,EAAU,eAChD,IAAIE,EAAQvC,EAAKC,GAASiB,oBAGxBkB,EAAMC,SACTrC,IAAEA,EAAFC,QAAOA,GAAYK,KAAKgC,SAASF,EAAMC,EAAU,cAChD,IAAIE,EAAQvC,EAAKC,GAASiB,uBAGrBkB,EAAMC,SACZrC,IAAEA,EAAFC,QAAOA,GAAYK,KAAKgC,SAASF,EAAMC,EAAU,iBAChD,IAAIE,EAAQvC,EAAKC,GAASiB,wBAGpBkB,EAAMC,SACbrC,IAAEA,EAAFC,QAAOA,GAAYK,KAAKgC,SAASF,EAAMC,EAAU,SACjDG,MAAEA,EAAFC,UAASA,EAAY,IAAOxC,gBAC3BA,EAAQuC,aACRvC,EAAQwC,UACfxC,EAAQS,QAAUT,EAAQS,SAAW,GACrCT,EAAQS,QAAQ,gBAAkB,mBAClCT,EAAQS,QAAR,OAA4B,mBAC5BT,EAAQ+B,KAAO,CACbQ,MAAAA,EACAC,UAAAA,GAEK,IAAIF,EAAQvC,EAAKC,GAASiB,qBAGvBkB,EAAMC,SACVrC,IAAEA,EAAFC,QAAOA,GAAYK,KAAKgC,SAASF,EAAMC,EAAU,cACvDpC,EAAQS,QAAUT,EAAQS,SAAW,GACrCT,EAAQS,QAAQqB,OAAS9B,EAAQS,QAAQqB,QAAU,MAC5C,IAAIQ,EAAQvC,EAAKC,GAASiB,oBAGxBwB,GACTP,EAAWQ,aAAaC,KAAKF,mBAGf1C,EAAKC,EAAU,GAAI4C,UACjC5C,EAAQ4C,OAASA,EACjBV,EAAWQ,aAAaG,QAASJ,UACzBK,EAAML,EAAI1C,EAAKC,GACrBD,EAAM+C,EAAI/C,IACVC,EAAU8C,EAAI9C,UAET,CAAED,IAAAA,EAAKC,QAAAA,WAIlBkC,EAAWQ,aAAe,GAETR"}