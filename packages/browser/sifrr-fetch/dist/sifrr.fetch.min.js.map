{"version":3,"file":"sifrr.fetch.min.js","sources":["../src/request.js","../src/graphws.js","../src/sifrr.fetch.js"],"sourcesContent":["class Request {\n  constructor(url, options = {}) {\n    this._options = options;\n    this._url = url;\n  }\n\n  get response() {\n    const me = this;\n    return window.fetch(this.url, this.options).then(resp => {\n      const contentType = resp.headers.get('content-type');\n      const isJson = contentType && contentType.includes('application/json');\n      if (resp.ok) {\n        if (typeof me._options.onProgress === 'function') {\n          const contentLength = resp.headers.get('content-length');\n          const total = parseInt(contentLength,10);\n          if (!total || !resp.body) {\n            me._options.onProgress(100);\n          } else {\n            const reader = resp.body.getReader();\n            let loaded = 0;\n            resp = new Response(new ReadableStream({\n              start(controller) {\n                function read() {\n                  return reader.read().then(({ done, value }) => {\n                    if (done) {\n                      me._options.onProgress(100);\n                      controller.close();\n                    } else {\n                      loaded += value.byteLength;\n                      me._options.onProgress(loaded / total * 100);\n                      controller.enqueue(value);\n                      return read();\n                    }\n                  });\n                }\n                return read();\n              }\n            }));\n          }\n        }\n        return {\n          response: resp,\n          isJson\n        };\n      } else {\n        if (typeof me._options.onProgress === 'function') me._options.onProgress(100);\n        let error = Error(resp.statusText);\n        error.response = resp;\n        throw error;\n      }\n    }).then(({ response, isJson }) => {\n      if(isJson) return response.json();\n      return response;\n    });\n  }\n\n  get url() {\n    const params = this._options.params;\n    if (params && Object.keys(params).length > 0) {\n      return this._url + '?' + Object.keys(params).map(k =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n    } else {\n      return this._url;\n    }\n  }\n\n  get options() {\n    const options = Object.assign({\n      mode: 'cors',\n      redirect: 'follow',\n      cache: 'no-cache'\n    }, this._options);\n    options.headers = Object.assign({\n      accept: 'application/json'\n    }, this._options.headers || {});\n    if (typeof options.body === 'object') {\n      options.body = JSON.stringify(options.body);\n    }\n    return options;\n  }\n}\n\nmodule.exports = Request;\n","class GraphWS {\n  constructor(url, protocol, fallback) {\n    this.url = url;\n    this.protocol = protocol;\n    this.fallback = fallback;\n    this.id = 1;\n    this._resolvers = {};\n    this._openSocket();\n  }\n\n  async send(query, variables = {}) {\n    const id = this.id;\n    this.id++;\n    await this._openSocket();\n    const message = {\n      query: query,\n      variables: variables,\n      sifrrQueryId: id\n    };\n    this.ws.send(JSON.stringify(message));\n    const ret = new Promise((res) => {\n      this._resolvers[id] = (v) => {\n        delete this._resolvers[id];\n        res(v);\n      };\n    });\n    return ret;\n  }\n\n  _openSocket() {\n    if (!this.ws || this.ws.readyState === this.ws.CLOSED || this.ws.readyState === this.ws.CLOSING) {\n      this.ws = new window.WebSocket(this.url, this.protocol);\n      this.ws.onopen = this.onopen.bind(this);\n      this.ws.onerror = this.onerror.bind(this);\n      this.ws.onclose = this.onclose.bind(this);\n      this.ws.onmessage = this.onmessage.bind(this);\n      const me = this;\n      return new Promise(res => {\n        function waiting() {\n          if (me.ws.readyState !== me.ws.OPEN) {\n            window.requestAnimationFrame(waiting);\n          } else {\n            res();\n          }\n        }\n        window.requestAnimationFrame(waiting);\n      });\n    }\n    return Promise.resolve(true);\n  }\n\n  onerror(e) {\n    window.console.error(`Sifrr WebSocket(${this.url}) error:`, e);\n  }\n\n  onopen() {}\n\n  onclose() {}\n\n  onmessage(event) {\n    const data = JSON.parse(event.data);\n    if (data.sifrrQueryId) this._resolvers[data.sifrrQueryId](data.result);\n  }\n}\n\nmodule.exports = GraphWS;\n","const Request = require('./request');\nconst GraphWS = require('./graphws');\n\nclass SifrrFetch {\n  static get(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'GET');\n    return new Request(url, options).response;\n  }\n\n  static post(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'POST');\n    return new Request(url, options).response;\n  }\n\n  static put(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'PUT');\n    return new Request(url, options).response;\n  }\n\n  static delete(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'DELETE');\n    return new Request(url, options).response;\n  }\n\n  static graphql(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'POST');\n    const { query, variables = {} } = options;\n    delete options.query;\n    delete options.variables;\n    options.headers = options.headers || {};\n    options.headers['Content-Type'] = 'application/json';\n    options.headers['Accept'] = 'application/json';\n    options.body = {\n      query,\n      variables\n    };\n    return new Request(url, options).response;\n  }\n\n  static graphqlWS(url, protocol, fallback) {\n    return new GraphWS(url, protocol, fallback);\n  }\n\n  static file(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'GET');\n    options.headers = options.headers || {};\n    options.headers.accept = options.headers.accept || '*/*';\n    return new Request(url, options).response;\n  }\n\n  static use(fxn) {\n    SifrrFetch._middlewares.push(fxn);\n  }\n\n  static afterUse(url, options = {}, method) {\n    options.method = method;\n    SifrrFetch._middlewares.forEach((fxn) => {\n      const res = fxn(url, options);\n      url = res.url;\n      options = res.options;\n    });\n    return { url, options };\n  }\n}\n\nSifrrFetch._middlewares = [];\n\nmodule.exports = SifrrFetch;\n"],"names":["constructor","url","options","_options","_url","me","this","window","fetch","then","resp","contentType","headers","get","isJson","includes","ok","onProgress","contentLength","total","parseInt","body","reader","getReader","loaded","Response","ReadableStream","start","controller","read","done","value","byteLength","enqueue","close","response","error","Error","statusText","json","params","Object","keys","length","map","k","encodeURIComponent","join","assign","mode","redirect","cache","accept","JSON","stringify","protocol","fallback","id","_resolvers","_openSocket","query","variables","message","sifrrQueryId","ws","send","Promise","res","v","readyState","CLOSED","CLOSING","WebSocket","onopen","bind","onerror","onclose","onmessage","requestAnimationFrame","waiting","OPEN","resolve","e","console","event","data","parse","result","SifrrFetch","purl","poptions","afterUse","Request","GraphWS","fxn","_middlewares","push","method","forEach"],"mappings":"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"}