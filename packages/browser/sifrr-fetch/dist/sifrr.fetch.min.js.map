{"version":3,"file":"sifrr.fetch.min.js","sources":["../src/request.js","../src/websocket.js","../src/sifrr.fetch.js"],"sourcesContent":["class Request {\n  constructor(url, options = {}) {\n    this._options = options;\n    this._url = url;\n  }\n\n  get response() {\n    const me = this;\n    return window.fetch(this.url, this.options).then(resp => {\n      const contentType = resp.headers.get('content-type');\n      const isJson = contentType && (contentType.includes('application/json'));\n      if (resp.ok && typeof me._options.onProgress === 'function') {\n        const contentLength = resp.headers.get('content-length');\n        const total = parseInt(contentLength,10);\n        if (!total || !resp.body) {\n          me._options.onProgress(100);\n        } else {\n          const reader = resp.body.getReader();\n          let loaded = 0;\n          resp = new Response(new ReadableStream({\n            start(controller) {\n              function read() {\n                return reader.read().then(({ done, value }) => {\n                  if (done) {\n                    me._options.onProgress(100);\n                    controller.close();\n                  } else {\n                    loaded += value.byteLength;\n                    me._options.onProgress(loaded / total * 100);\n                    controller.enqueue(value);\n                    return read();\n                  }\n                });\n              }\n              return read();\n            }\n          }));\n        }\n      } else if (!resp.ok) {\n        if (typeof me._options.onProgress === 'function') me._options.onProgress(100);\n        let error = Error(resp.statusText);\n        error.response = resp;\n        throw error;\n      }\n      return {\n        response: resp,\n        isJson\n      };\n    }).then(({ response, isJson }) => {\n      if(isJson) return response.json();\n      return response;\n    });\n  }\n\n  get url() {\n    const params = this._options.params;\n    if (params && Object.keys(params).length > 0) {\n      return this._url + '?' + Object.keys(params).map(k =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n    } else {\n      return this._url;\n    }\n  }\n\n  get options() {\n    const options = Object.assign({\n      mode: 'cors',\n      redirect: 'follow',\n      cache: 'no-cache'\n    }, this._options);\n    options.headers = Object.assign({\n      accept: 'application/json'\n    }, this._options.headers || {});\n    if (typeof options.body === 'object') {\n      options.body = JSON.stringify(options.body);\n    }\n    return options;\n  }\n}\n\nmodule.exports = Request;\n","class WebSocket {\n  constructor(url, protocol, fallback = () => Promise.reject(Error('No fallback provided for websocket failure.'))) {\n    this.url = url;\n    this.protocol = protocol;\n    this._fallback = !window.WebSocket;\n    this.fallback = fallback;\n    this.id = 1;\n    this._requests = {};\n    this._openSocket();\n  }\n\n  async send(data, event = 'SIFRR') {\n    const id = this.id;\n    this.id++;\n    const message = {};\n    message.event = event;\n    message.sifrrQueryId = id;\n    if (this._fallback) return this.fallback(data);\n    const sock = await this._openSocket();\n    if (!sock) return this.fallback(data);\n    message.data = data;\n    this.ws.send(JSON.stringify(message));\n    const ret = new Promise((res) => {\n      this._requests[id] = {\n        res: (v) => {\n          delete this._requests[id];\n          res(v);\n        },\n        data\n      };\n    });\n    return ret;\n  }\n\n  _openSocket() {\n    if (!this.ws) {\n      this.ws = new window.WebSocket(this.url, this.protocol);\n      this.ws.onopen = this.onopen.bind(this);\n      this.ws.onerror = this.onerror.bind(this);\n      this.ws.onclose = this.onclose.bind(this);\n      this.ws.onmessage = this.onmessage.bind(this);\n    } else if (this.ws.readyState === this.ws.OPEN) {\n      return Promise.resolve(true);\n    }\n    const me = this;\n    return new Promise(res => {\n      function waiting() {\n        if (me.ws.readyState === me.ws.CONNECTING) {\n          window.requestAnimationFrame(waiting);\n        } else if (me.ws.readyState !== me.ws.OPEN) {\n          window.console.error(`Failed to open socket on ${me.url}`);\n          res(false);\n        } else {\n          res(true);\n        }\n      }\n      window.requestAnimationFrame(waiting);\n    });\n  }\n\n  onerror() {\n    this._fallback = !!this.fallback;\n    for (let r in this._requests) {\n      const req = this._requests[r];\n      this.fallback(req.data).then(result => req.res(result));\n    }\n  }\n\n  onopen() {}\n\n  onclose() {}\n\n  onmessage(event) {\n    const data = JSON.parse(event.data);\n    if (data.sifrrQueryId) this._requests[data.sifrrQueryId].res(data.data);\n    delete this._requests[data.sifrrQueryId];\n  }\n}\n\nmodule.exports = WebSocket;\n","const Request = require('./request');\nconst WebSocket = require('./websocket');\n\nclass SifrrFetch {\n  static get(purl, poptions) {\n    return this.request(purl, poptions, 'GET');\n  }\n\n  static post(purl, poptions) {\n    return this.request(purl, poptions, 'POST');\n  }\n\n  static put(purl, poptions) {\n    return this.request(purl, poptions, 'PUT');\n  }\n\n  static delete(purl, poptions) {\n    return this.request(purl, poptions, 'DELETE');\n  }\n\n  static graphql(purl, poptions) {\n    const { query, variables = {} } = poptions;\n    delete poptions.query;\n    delete poptions.variables;\n    poptions.headers = poptions.headers || {};\n    poptions.headers['Content-Type'] = 'application/json';\n    poptions.headers['Accept'] = 'application/json';\n    poptions.body = {\n      query,\n      variables\n    };\n    return this.request(purl, poptions, 'POST');\n  }\n\n  static socket(url, protocol, fallback) {\n    return new WebSocket(url, protocol, fallback ? (message) => {\n      const options = {}, method = fallback.method.toLowerCase();\n      options.headers = options.headers || {};\n      options.headers['content-type'] = options.headers['content-type'] || 'application/json';\n      if (method === 'post') options.body = message;\n      else options.query = message;\n      return this[method](fallback.url, options);\n    } : undefined);\n  }\n\n  static file(purl, poptions) {\n    poptions.headers = poptions.headers || {};\n    poptions.headers.accept = poptions.headers.accept || '*/*';\n    return this.request(purl, poptions, 'GET');\n  }\n\n  static request(purl, poptions, method) {\n    const { url, options } = this.afterUse(purl, poptions, method);\n    return new Request(url, options).response;\n  }\n\n  static use(fxn) {\n    SifrrFetch._middlewares.push(fxn);\n  }\n\n  static afterUse(url, options = {}, method) {\n    options.method = (options.method  || method).toUpperCase();\n    SifrrFetch._middlewares.forEach((fxn) => {\n      const res = fxn(url, options);\n      url = res.url;\n      options = res.options;\n    });\n    return { url, options };\n  }\n}\n\nSifrrFetch._middlewares = [];\nSifrrFetch.WebSocket = WebSocket;\n\nmodule.exports = SifrrFetch;\n"],"names":["constructor","url","options","_options","_url","me","this","window","fetch","then","resp","contentType","headers","get","isJson","includes","ok","onProgress","contentLength","total","parseInt","body","reader","getReader","loaded","Response","ReadableStream","start","controller","read","done","value","byteLength","enqueue","close","error","Error","statusText","response","json","params","Object","keys","length","map","k","encodeURIComponent","join","assign","mode","redirect","cache","accept","JSON","stringify","protocol","fallback","Promise","reject","_fallback","WebSocket","id","_requests","_openSocket","data","event","message","sifrrQueryId","ws","send","res","v","readyState","OPEN","resolve","onopen","bind","onerror","onclose","onmessage","requestAnimationFrame","waiting","CONNECTING","console","r","req","result","parse","SifrrFetch","purl","poptions","request","query","variables","method","toLowerCase","undefined","afterUse","Request","fxn","_middlewares","push","toUpperCase","forEach"],"mappings":"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"}