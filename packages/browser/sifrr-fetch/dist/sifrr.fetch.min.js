/*! Sifrr.Fetch v0.0.3 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):((e=e||self).Sifrr=e.Sifrr||{},e.Sifrr.Fetch=t())}(this,function(){"use strict";var e=class{constructor(e,t){this._options=t,this._url=e}get response(){const e=this;return window.fetch(this.url,this.options).then(t=>{const s=t.headers.get("content-type"),o=s&&s.includes("application/json");if(t.ok&&"function"==typeof e._options.onProgress){const s=t.headers.get("content-length"),o=parseInt(s,10);if(o&&t.body&&ReadableStream){const s=t.body.getReader();let r=0;t=new Response(new ReadableStream({start:t=>(function n(){return s.read().then(({done:s,value:i})=>{if(!s)return r+=i.byteLength,e._options.onProgress(r/o*100),t.enqueue(i),n();e._options.onProgress(100),t.close()})})()}))}else e._options.onProgress(100)}else if(!t.ok){"function"==typeof e._options.onProgress&&e._options.onProgress(100);let s=Error(t.statusText);throw s.response=t,s}return{response:t,isJson:o}}).then(({response:e,isJson:t})=>t?e.json():e)}get url(){const e=this._options.params;return e&&Object.keys(e).length>0?this._url+"?"+Object.keys(e).map(t=>encodeURIComponent(t)+"="+encodeURIComponent(e[t])).join("&"):this._url}get options(){const e=Object.assign({redirect:"follow"},this._options);return e.headers=Object.assign({accept:"application/json"},this._options.headers||{}),e.body&&e.body.constructor==={}.constructor&&(e.headers["content-type"]="application/json",e.body=JSON.stringify(e.body)),e}};var t=class{constructor(e,t,s=(()=>Promise.reject(Error("No fallback provided for websocket failure.")))){this.url=e,this.protocol=t,this._fallback=!window.WebSocket,this.fallback=s,this.id=1,this._requests={},this._openSocket()}send(e,t){return e.constructor==={}.constructor?this.sendJSON(e,t):this.sendRaw(e,this.id++)}sendJSON(e,t="JSON"){const s={};return s.sifrrQueryType=t,s.sifrrQueryId=this.id++,s.data=e,this.sendRaw(JSON.stringify(s),s.sifrrQueryId,e)}async sendRaw(e,t,s=e){return this._fallback?this.fallback(s):await this._openSocket()?(this.ws.send(e),new Promise(e=>{this._requests[t]={res:s=>{delete this._requests[t],e(s)},original:s}})):this.fallback(s)}_openSocket(){if(this.ws)return this.ws.readyState===this.ws.OPEN?Promise.resolve(!0):(this.ws=null,this._openSocket());this.ws=new window.WebSocket(this.url,this.protocol),this.ws.onopen=this.onopen.bind(this),this.ws.onerror=this.onerror.bind(this),this.ws.onclose=this.onclose.bind(this),this.ws.onmessage=this._onmessage.bind(this);const e=this;return new Promise(t=>{window.requestAnimationFrame(function s(){e.ws.readyState===e.ws.CONNECTING?window.requestAnimationFrame(s):e.ws.readyState!==e.ws.OPEN?(window.console.error(`Failed to open socket on ${e.url}`),t(!1)):t(!0)})})}onerror(){this._fallback=!!this.fallback;for(let e in this._requests){const t=this._requests[e];this.fallback(t.data).then(e=>t.res(e))}}onopen(){}onclose(){}close(){this.ws.close()}_onmessage(e){const t=JSON.parse(e.data);t.sifrrQueryId&&this._requests[t.sifrrQueryId].res(t.data),delete this._requests[t.sifrrQueryId],this.onmessage(e)}onmessage(){}};class s{static get(e,t){return this.request(e,t,"GET")}static post(e,t){return this.request(e,t,"POST")}static put(e,t){return this.request(e,t,"PUT")}static delete(e,t){return this.request(e,t,"DELETE")}static graphql(e,t={}){const{query:s,variables:o={}}=t;return delete t.query,delete t.variables,t.headers=t.headers||{},t.headers["Content-Type"]="application/json",t.headers.Accept="application/json",t.body={query:s,variables:o},this.request(e,t,"POST")}static socket(e,s,o){return new t(e,s,o?e=>{const t={},s=o.method.toLowerCase();return t.headers=t.headers||{},t.headers["content-type"]=t.headers["content-type"]||"application/json","post"===s?t.body=e:t.query=e,this[s](o.url,t)}:void 0)}static file(e,t={}){return t.headers=t.headers||{},t.headers.accept=t.headers.accept||"*/*",this.request(e,t,"GET")}static request(t,s={},o){const{url:r,options:n}=this.afterUse(t,s,o);return new e(r,n).response}static use(e){s._middlewares.push(e)}static afterUse(e,t={},o){return t.method=(t.method||o).toUpperCase(),s._middlewares.forEach(s=>{const o=s(e,t);e=o.url,t=o.options}),{url:e,options:t}}}return s._middlewares=[],s.WebSocket=t,s});
/*! (c) @aadityataparia */
