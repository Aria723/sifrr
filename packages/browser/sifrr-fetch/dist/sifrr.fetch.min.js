/*! Sifrr.Fetch v0.0.3 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):((e=e||self).Sifrr=e.Sifrr||{},e.Sifrr.Fetch=t())}(this,function(){"use strict";var e=class{constructor(e,t={}){this._options=t,this._url=e}get response(){const e=this;return window.fetch(this.url,this.options).then(t=>{const s=t.headers.get("content-type"),o=s&&s.includes("application/json");if(t.ok){if("function"==typeof e._options.onProgress){const s=t.headers.get("content-length"),o=parseInt(s,10);if(o&&t.body){const s=t.body.getReader();let n=0;t=new Response(new ReadableStream({start:t=>(function r(){return s.read().then(({done:s,value:i})=>{if(!s)return n+=i.byteLength,e._options.onProgress(n/o*100),t.enqueue(i),r();e._options.onProgress(100),t.close()})})()}))}else e._options.onProgress(100)}return{response:t,isJson:o}}{"function"==typeof e._options.onProgress&&e._options.onProgress(100);let s=Error(t.statusText);throw s.response=t,s}}).then(({response:e,isJson:t})=>t?e.json():e)}get url(){const e=this._options.params;return e&&Object.keys(e).length>0?this._url+"?"+Object.keys(e).map(t=>encodeURIComponent(t)+"="+encodeURIComponent(e[t])).join("&"):this._url}get options(){const e=Object.assign({mode:"cors",redirect:"follow",cache:"no-cache"},this._options);return e.headers=Object.assign({accept:"application/json"},this._options.headers||{}),"object"==typeof e.body&&(e.body=JSON.stringify(e.body)),e}};class t{static get(t,s){const{url:o,options:n}=this.afterUse(t,s,"GET");return new e(o,n).response}static post(t,s){const{url:o,options:n}=this.afterUse(t,s,"POST");return new e(o,n).response}static put(t,s){const{url:o,options:n}=this.afterUse(t,s,"PUT");return new e(o,n).response}static delete(t,s){const{url:o,options:n}=this.afterUse(t,s,"DELETE");return new e(o,n).response}static graphql(t,s){const{url:o,options:n}=this.afterUse(t,s,"POST"),{query:r,variables:i={}}=n;return delete n.query,delete n.variables,n.headers=n.headers||{},n.headers["Content-Type"]="application/json",n.headers.Accept="application/json",n.body={query:r,variables:i},new e(o,n).response}static file(t,s){const{url:o,options:n}=this.afterUse(t,s,"GET");return n.headers=n.headers||{},n.headers.accept=n.headers.accept||"*/*",new e(o,n).response}static use(e){t._middlewares.push(e)}static afterUse(e,s={},o){return s.method=o,t._middlewares.forEach(t=>{const o=t(e,s);e=o.url,s=o.options}),{url:e,options:s}}}return t._middlewares=[],t});
/*! (c) @aadityataparia */
//# sourceMappingURL=sifrr.fetch.min.js.map
