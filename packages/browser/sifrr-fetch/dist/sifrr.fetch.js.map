{"version":3,"file":"sifrr.fetch.js","sources":["../src/request.js","../src/websocket.js","../src/sifrr.fetch.js"],"sourcesContent":["const ObjConst = ({}).constructor;\n\nclass Request {\n  constructor(url, options) {\n    this._options = options;\n    this._url = url;\n  }\n\n  get response() {\n    const me = this;\n    return window.fetch(this.url, this.options).then(resp => {\n      const contentType = resp.headers.get('content-type');\n      const isJson = contentType && (contentType.includes('application/json'));\n      if (resp.ok && typeof me._options.onProgress === 'function') {\n        const contentLength = resp.headers.get('content-length');\n        const total = parseInt(contentLength,10);\n        if (!total || !resp.body || !ReadableStream) {\n          me._options.onProgress(100);\n        } else {\n          const reader = resp.body.getReader();\n          let loaded = 0;\n          resp = new Response(new ReadableStream({\n            start(controller) {\n              const start = performance.now();\n              function read() {\n                return reader.read().then(({ done, value }) => {\n                  if (done) {\n                    me._options.onProgress(100, 0);\n                    controller.close();\n                  } else {\n                    loaded += value.byteLength;\n                    me._options.onProgress(loaded / total * 100, loaded / (performance.now() - start));\n                    controller.enqueue(value);\n                    return read();\n                  }\n                });\n              }\n              return read();\n            }\n          }));\n        }\n      } else if (!resp.ok) {\n        if (typeof me._options.onProgress === 'function') me._options.onProgress(100);\n        let error = Error(resp.statusText);\n        error.response = resp;\n        throw error;\n      }\n      return {\n        response: resp,\n        isJson\n      };\n    }).then(({ response, isJson }) => {\n      if(isJson) return response.json();\n      return response;\n    });\n  }\n\n  get url() {\n    const params = this._options.params;\n    if (params && Object.keys(params).length > 0) {\n      return this._url + '?' + Object.keys(params).map(k =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n    } else {\n      return this._url;\n    }\n  }\n\n  get options() {\n    const options = Object.assign({\n      redirect: 'follow'\n    }, this._options);\n    options.headers = Object.assign({\n      accept: 'application/json'\n    }, this._options.headers || {});\n    if (options.body && options.body.constructor === ObjConst) {\n      options.headers['content-type'] = options.headers['content-type'] || 'application/json';\n      options.body = JSON.stringify(options.body);\n    }\n    return options;\n  }\n}\n\nmodule.exports = Request;\n","class WebSocket {\n  constructor(url, protocol, fallback = () => Promise.reject(Error('No fallback provided for websocket failure.'))) {\n    this.url = url;\n    this.protocol = protocol;\n    this._fallback = !window.WebSocket;\n    this.fallback = fallback;\n    this.id = 1;\n    this._requests = {};\n    this._openSocket();\n  }\n\n  send(data, type) {\n    if (data.constructor === ({}).constructor) {\n      return this.sendJSON(data, type);\n    } else {\n      return this.sendRaw(data, this.id++);\n    }\n  }\n\n  sendJSON(data, type = 'JSON') {\n    const message = {\n      data,\n      sifrrQueryType: type,\n      sifrrQueryId: this.id++\n    };\n    return this.sendRaw(JSON.stringify(message), message.sifrrQueryId, data);\n  }\n\n  sendRaw(message, id, original = message) {\n    if (this._fallback) return this.fallback(original);\n    return this._openSocket().then(ws => {\n      ws.send(message);\n      return new Promise((res) => {\n        this._requests[id] = {\n          res: (v) => {\n            delete this._requests[id];\n            res(v);\n          },\n          original\n        };\n      });\n    }).catch((e) => {\n      window.console.error(e);\n      return this.fallback(original);\n    });\n  }\n\n  _openSocket() {\n    if (!this.ws) {\n      this.ws = new window.WebSocket(this.url, this.protocol);\n      this.ws.onopen = this.onopen.bind(this);\n      this.ws.onerror = this.onerror.bind(this);\n      this.ws.onclose = this.onclose.bind(this);\n      this.ws.onmessage = this._onmessage.bind(this);\n    } else if (this.ws.readyState === this.ws.OPEN) {\n      return Promise.resolve(this.ws);\n    } else if (this.ws.readyState !== this.ws.CONNECTING) {\n      this.ws = null;\n      return this._openSocket();\n    }\n    const me = this;\n    return new Promise((res, rej) => {\n      function waiting() {\n        if (me.ws.readyState === me.ws.CONNECTING) {\n          window.requestAnimationFrame(waiting);\n        } else if (me.ws.readyState !== me.ws.OPEN) {\n          rej(Error(`Failed to open socket on ${me.url}`));\n        } else {\n          res(me.ws);\n        }\n      }\n      window.requestAnimationFrame(waiting);\n    });\n  }\n\n  onerror() {\n    this._fallback = !!this.fallback;\n    for (let r in this._requests) {\n      const req = this._requests[r];\n      this.fallback(req.data).then(result => req.res(result));\n    }\n  }\n\n  onopen() {}\n\n  onclose() {}\n\n  close() {\n    this.ws.close();\n  }\n\n  _onmessage(event) {\n    const data = JSON.parse(event.data);\n    if (data.sifrrQueryId) this._requests[data.sifrrQueryId].res(data.data);\n    delete this._requests[data.sifrrQueryId];\n    this.onmessage(event);\n  }\n\n  onmessage() {}\n}\n\nmodule.exports = WebSocket;\n","const Request = require('./request');\nconst WebSocket = require('./websocket');\n\nclass SifrrFetch {\n  static get(purl, poptions) {\n    return this.request(purl, poptions, 'GET');\n  }\n\n  static post(purl, poptions) {\n    return this.request(purl, poptions, 'POST');\n  }\n\n  static put(purl, poptions) {\n    return this.request(purl, poptions, 'PUT');\n  }\n\n  static delete(purl, poptions) {\n    return this.request(purl, poptions, 'DELETE');\n  }\n\n  static graphql(purl, poptions) {\n    const { query, variables = {} } = poptions;\n    delete poptions.query;\n    delete poptions.variables;\n    poptions.headers = poptions.headers || {};\n    poptions.headers['Content-Type'] = 'application/json';\n    poptions.headers['Accept'] = 'application/json';\n    poptions.body = {\n      query,\n      variables\n    };\n    return this.request(purl, poptions, 'POST');\n  }\n\n  static socket(url, protocol, fallback) {\n    return new WebSocket(url, protocol, fallback ? (message) => {\n      const options = fallback.options || {}, method = fallback.method.toLowerCase();\n      options.headers = options.headers || {};\n      options.headers['content-type'] = options.headers['content-type'] || 'application/json';\n      if (method === 'post') options.body = message;\n      else options.query = message;\n      return this[method](fallback.url, options);\n    } : undefined);\n  }\n\n  static file(purl, poptions = {}) {\n    poptions.headers = poptions.headers || {};\n    poptions.headers.accept = poptions.headers.accept || '*/*';\n    return this.request(purl, poptions, 'GET');\n  }\n\n  static request(purl, poptions, method) {\n    const { url, options } = this.afterUse(purl, poptions, method);\n    return new Request(url, options).response;\n  }\n\n  static use(fxn) {\n    SifrrFetch._middlewares.push(fxn);\n  }\n\n  static afterUse(url, options = {}, method) {\n    options.method = (options.method  || method).toUpperCase();\n    SifrrFetch._middlewares.forEach((fxn) => {\n      const res = fxn(url, options);\n      url = res.url;\n      options = res.options;\n    });\n    return { url, options };\n  }\n}\n\nSifrrFetch._middlewares = [];\nSifrrFetch.WebSocket = WebSocket;\n\nmodule.exports = SifrrFetch;\n"],"names":["ObjConst","constructor","Request","url","options","_options","_url","response","me","window","fetch","then","resp","contentType","headers","get","isJson","includes","ok","onProgress","contentLength","total","parseInt","body","ReadableStream","reader","getReader","loaded","Response","start","controller","performance","now","read","done","value","close","byteLength","enqueue","error","Error","statusText","json","params","Object","keys","length","map","k","encodeURIComponent","join","assign","redirect","accept","JSON","stringify","WebSocket","protocol","fallback","Promise","reject","_fallback","id","_requests","_openSocket","send","data","type","sendJSON","sendRaw","message","sifrrQueryType","sifrrQueryId","original","ws","res","v","catch","e","console","onopen","bind","onerror","onclose","onmessage","_onmessage","readyState","OPEN","resolve","CONNECTING","rej","waiting","requestAnimationFrame","r","req","result","event","parse","SifrrFetch","purl","poptions","request","post","put","delete","graphql","query","variables","socket","method","toLowerCase","undefined","file","afterUse","use","fxn","_middlewares","push","toUpperCase","forEach"],"mappings":"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"}