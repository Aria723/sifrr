{"version":3,"file":"sifrr.fetch.js","sources":["../src/request.js","../src/sifrr.fetch.js"],"sourcesContent":["class Request {\n  constructor(url, options = {}) {\n    this._options = options;\n    this._url = url;\n  }\n\n  get response() {\n    const me = this;\n    return window.fetch(this.url, this.options).then(resp => {\n      const contentType = resp.headers.get('content-type');\n      const isJson = contentType && contentType.includes('application/json');\n      if (resp.ok) {\n        if (typeof me._options.onProgress === 'function') {\n          const contentLength = resp.headers.get('content-length');\n          const total = parseInt(contentLength,10);\n          if (!total || !resp.body) {\n            window.console.log('no body');\n            me._options.onProgress(100);\n          } else {\n            const reader = resp.body.getReader();\n            let loaded = 0;\n            resp = new Response(new ReadableStream({\n              start(controller) {\n                function read() {\n                  return reader.read().then(({ done, value }) => {\n                    if (done) {\n                      me._options.onProgress(100);\n                      controller.close();\n                    } else {\n                      loaded += value.byteLength;\n                      me._options.onProgress(loaded / total * 100);\n                      controller.enqueue(value);\n                      return read();\n                    }\n                  });\n                }\n                return read();\n              }\n            }));\n          }\n        }\n        return {\n          response: resp,\n          isJson\n        };\n      } else {\n        let error = Error(resp.statusText);\n        error.response = resp;\n        throw error;\n      }\n    }).then(({ response, isJson }) => {\n      if(isJson) return response.json();\n      return response;\n    });\n  }\n\n  get url() {\n    const params = this._options.params;\n    if (params && Object.keys(params).length > 0) {\n      return this._url + '?' + Object.keys(params).map(k =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n    } else {\n      return this._url;\n    }\n  }\n\n  get options() {\n    const options = Object.assign({\n      mode: 'cors',\n      redirect: 'follow',\n      cache: 'no-cache'\n    }, this._options);\n    options.headers = Object.assign({\n      accept: 'application/json'\n    }, this._options.headers || {});\n    if (typeof options.body === 'object') {\n      options.body = JSON.stringify(options.body);\n    }\n    return options;\n  }\n}\n\nmodule.exports = Request;\n","const Request = require('./request');\n\nclass SifrrFetch {\n  static get(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'GET');\n    return new Request(url, options).response;\n  }\n\n  static post(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'POST');\n    return new Request(url, options).response;\n  }\n\n  static put(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'PUT');\n    return new Request(url, options).response;\n  }\n\n  static delete(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'DELETE');\n    return new Request(url, options).response;\n  }\n\n  static graphql(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'POST');\n    const { query, variables = {} } = options;\n    delete options.query;\n    delete options.variables;\n    options.headers = options.headers || {};\n    options.headers['Content-Type'] = 'application/json';\n    options.headers['Accept'] = 'application/json';\n    options.body = {\n      query,\n      variables\n    };\n    return new Request(url, options).response;\n  }\n\n  static file(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'GET');\n    options.headers = options.headers || {};\n    options.headers.accept = options.headers.accept || '*/*';\n    return new Request(url, options).response;\n  }\n\n  static use(fxn) {\n    SifrrFetch._middlewares.push(fxn);\n  }\n\n  static afterUse(url, options = {}, method) {\n    options.method = method;\n    SifrrFetch._middlewares.forEach((fxn) => {\n      const res = fxn(url, options);\n      url = res.url;\n      options = res.options;\n    });\n    return { url, options };\n  }\n}\n\nSifrrFetch._middlewares = [];\n\nmodule.exports = SifrrFetch;\n"],"names":["Request","constructor","url","options","_options","_url","response","me","window","fetch","then","resp","contentType","headers","get","isJson","includes","ok","onProgress","contentLength","total","parseInt","body","console","log","reader","getReader","loaded","Response","ReadableStream","start","controller","read","done","value","close","byteLength","enqueue","error","Error","statusText","json","params","Object","keys","length","map","k","encodeURIComponent","join","assign","mode","redirect","cache","accept","JSON","stringify","SifrrFetch","purl","poptions","afterUse","post","put","delete","graphql","query","variables","file","use","fxn","_middlewares","push","method","forEach","res"],"mappings":"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"}