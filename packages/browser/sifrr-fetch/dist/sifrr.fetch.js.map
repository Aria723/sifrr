{"version":3,"file":"sifrr.fetch.js","sources":["../src/request.js","../src/graphws.js","../src/sifrr.fetch.js"],"sourcesContent":["class Request {\n  constructor(url, options = {}) {\n    this._options = options;\n    this._url = url;\n  }\n\n  get response() {\n    const me = this;\n    return window.fetch(this.url, this.options).then(resp => {\n      const contentType = resp.headers.get('content-type');\n      const isJson = contentType && contentType.includes('application/json');\n      if (resp.ok) {\n        if (typeof me._options.onProgress === 'function') {\n          const contentLength = resp.headers.get('content-length');\n          const total = parseInt(contentLength,10);\n          if (!total || !resp.body) {\n            me._options.onProgress(100);\n          } else {\n            const reader = resp.body.getReader();\n            let loaded = 0;\n            resp = new Response(new ReadableStream({\n              start(controller) {\n                function read() {\n                  return reader.read().then(({ done, value }) => {\n                    if (done) {\n                      me._options.onProgress(100);\n                      controller.close();\n                    } else {\n                      loaded += value.byteLength;\n                      me._options.onProgress(loaded / total * 100);\n                      controller.enqueue(value);\n                      return read();\n                    }\n                  });\n                }\n                return read();\n              }\n            }));\n          }\n        }\n        return {\n          response: resp,\n          isJson\n        };\n      } else {\n        if (typeof me._options.onProgress === 'function') me._options.onProgress(100);\n        let error = Error(resp.statusText);\n        error.response = resp;\n        throw error;\n      }\n    }).then(({ response, isJson }) => {\n      if(isJson) return response.json();\n      return response;\n    });\n  }\n\n  get url() {\n    const params = this._options.params;\n    if (params && Object.keys(params).length > 0) {\n      return this._url + '?' + Object.keys(params).map(k =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n    } else {\n      return this._url;\n    }\n  }\n\n  get options() {\n    const options = Object.assign({\n      mode: 'cors',\n      redirect: 'follow',\n      cache: 'no-cache'\n    }, this._options);\n    options.headers = Object.assign({\n      accept: 'application/json'\n    }, this._options.headers || {});\n    if (typeof options.body === 'object') {\n      options.body = JSON.stringify(options.body);\n    }\n    return options;\n  }\n}\n\nmodule.exports = Request;\n","class GraphWS {\n  constructor(url, protocol, fallback) {\n    this.url = url;\n    this.protocol = protocol;\n    this.fallback = fallback;\n    this.id = 1;\n    this._resolvers = {};\n    this._openSocket();\n  }\n\n  async send(query, variables = {}) {\n    const id = this.id;\n    this.id++;\n    await this._openSocket();\n    const message = {\n      query: query,\n      variables: variables,\n      sifrrQueryId: id\n    };\n    this.ws.send(JSON.stringify(message));\n    const ret = new Promise((res) => {\n      this._resolvers[id] = (v) => {\n        delete this._resolvers[id];\n        res(v);\n      };\n    });\n    return ret;\n  }\n\n  _openSocket() {\n    if (!this.ws || this.ws.readyState === this.ws.CLOSED || this.ws.readyState === this.ws.CLOSING) {\n      this.ws = new window.WebSocket(this.url, this.protocol);\n      this.ws.onopen = this.onopen.bind(this);\n      this.ws.onerror = this.onerror.bind(this);\n      this.ws.onclose = this.onclose.bind(this);\n      this.ws.onmessage = this.onmessage.bind(this);\n      const me = this;\n      return new Promise(res => {\n        function waiting() {\n          if (me.ws.readyState !== me.ws.OPEN) {\n            window.requestAnimationFrame(waiting);\n          } else {\n            res();\n          }\n        }\n        window.requestAnimationFrame(waiting);\n      });\n    }\n    return Promise.resolve(true);\n  }\n\n  onerror(e) {\n    window.console.error(`Sifrr WebSocket(${this.url}) error:`, e);\n  }\n\n  onopen() {}\n\n  onclose() {}\n\n  onmessage(event) {\n    const data = JSON.parse(event.data);\n    if (data.sifrrQueryId) this._resolvers[data.sifrrQueryId](data.result);\n  }\n}\n\nmodule.exports = GraphWS;\n","const Request = require('./request');\nconst GraphWS = require('./graphws');\n\nclass SifrrFetch {\n  static get(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'GET');\n    return new Request(url, options).response;\n  }\n\n  static post(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'POST');\n    return new Request(url, options).response;\n  }\n\n  static put(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'PUT');\n    return new Request(url, options).response;\n  }\n\n  static delete(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'DELETE');\n    return new Request(url, options).response;\n  }\n\n  static graphql(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'POST');\n    const { query, variables = {} } = options;\n    delete options.query;\n    delete options.variables;\n    options.headers = options.headers || {};\n    options.headers['Content-Type'] = 'application/json';\n    options.headers['Accept'] = 'application/json';\n    options.body = {\n      query,\n      variables\n    };\n    return new Request(url, options).response;\n  }\n\n  static graphqlWS(url, protocol, fallback) {\n    return new GraphWS(url, protocol, fallback);\n  }\n\n  static file(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'GET');\n    options.headers = options.headers || {};\n    options.headers.accept = options.headers.accept || '*/*';\n    return new Request(url, options).response;\n  }\n\n  static use(fxn) {\n    SifrrFetch._middlewares.push(fxn);\n  }\n\n  static afterUse(url, options = {}, method) {\n    options.method = method;\n    SifrrFetch._middlewares.forEach((fxn) => {\n      const res = fxn(url, options);\n      url = res.url;\n      options = res.options;\n    });\n    return { url, options };\n  }\n}\n\nSifrrFetch._middlewares = [];\n\nmodule.exports = SifrrFetch;\n"],"names":["Request","constructor","url","options","_options","_url","response","me","window","fetch","then","resp","contentType","headers","get","isJson","includes","ok","onProgress","contentLength","total","parseInt","body","reader","getReader","loaded","Response","ReadableStream","start","controller","read","done","value","close","byteLength","enqueue","error","Error","statusText","json","params","Object","keys","length","map","k","encodeURIComponent","join","assign","mode","redirect","cache","accept","JSON","stringify","GraphWS","protocol","fallback","id","_resolvers","_openSocket","send","query","variables","message","sifrrQueryId","ws","ret","Promise","res","v","readyState","CLOSED","CLOSING","WebSocket","onopen","bind","onerror","onclose","onmessage","waiting","OPEN","requestAnimationFrame","resolve","e","console","event","data","parse","result","SifrrFetch","purl","poptions","afterUse","post","put","delete","graphql","graphqlWS","file","use","fxn","_middlewares","push","method","forEach"],"mappings":"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"}