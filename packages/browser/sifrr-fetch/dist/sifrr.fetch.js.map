{"version":3,"file":"sifrr.fetch.js","sources":["../src/request.js","../src/sifrr.fetch.js"],"sourcesContent":["class Request {\n  constructor(type, url, options = {}) {\n    this.type = type;\n    this._options = options;\n    this._url = url;\n  }\n\n  get response() {\n    return window.fetch(this.url, this.options).then(resp => {\n      let contentType = resp.headers.get('content-type');\n      if (resp.ok) {\n        if(contentType && contentType.includes('application/json')) {\n          resp = resp.json();\n        }\n        return resp;\n      } else {\n        let error = Error(resp.statusText);\n        error.response = resp;\n        throw error;\n      }\n    });\n  }\n\n  get url() {\n    const params = this._options.params;\n    if (params && Object.keys(params).length > 0) {\n      return this._url + '?' + Object.keys(params).map(k =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n    } else {\n      return this._url;\n    }\n  }\n\n  get options() {\n    const options = Object.assign({\n      method: this.type,\n      mode: 'cors',\n      redirect: 'follow',\n      cache: 'no-cache'\n    }, this._options);\n    options.headers = Object.assign({\n      accept: 'application/json'\n    }, this._options.headers || {});\n    if (typeof options.body === 'object') {\n      options.body = JSON.stringify(options.body);\n    }\n    return options;\n  }\n}\n\nmodule.exports = Request;\n","const Request = require('./request');\n\nclass SifrrFetch {\n  static get(url, options = {}) {\n    return new Request('GET', url, options).response;\n  }\n\n  static post(url, options = {}) {\n    return new Request('POST', url, options).response;\n  }\n\n  static put(url, options = {}) {\n    return new Request('PUT', url, options).response;\n  }\n\n  static delete(url, options = {}) {\n    return new Request('DELETE', url, options).response;\n  }\n\n  static graphql(url, options = {}) {\n    const { query, variables = {} } = options;\n    delete options.query;\n    delete options.variables;\n    options.headers = options.headers || {};\n    options.headers['Content-Type'] = 'application/json';\n    options.headers['Accept'] = 'application/json';\n    options.body = {\n      query,\n      variables\n    };\n    return new Request('POST', url, options).response;\n  }\n\n  static file(url, options = {}) {\n    options.headers = options.headers || {};\n    options.headers.accept = options.headers.accept || '*/*';\n    return new Request('GET', url, options).response;\n  }\n}\n\nmodule.exports = SifrrFetch;\n"],"names":["Request","constructor","type","url","options","_options","_url","response","window","fetch","then","resp","contentType","headers","get","ok","includes","json","error","Error","statusText","params","Object","keys","length","map","k","encodeURIComponent","join","assign","method","mode","redirect","cache","accept","body","JSON","stringify","SifrrFetch","post","put","delete","graphql","query","variables","file"],"mappings":"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"}