{"version":3,"file":"sifrr.fetch.js","sources":["../src/request.js","../src/graphws.js","../src/sifrr.fetch.js"],"sourcesContent":["class Request {\n  constructor(url, options = {}) {\n    this._options = options;\n    this._url = url;\n  }\n\n  get response() {\n    const me = this;\n    return window.fetch(this.url, this.options).then(resp => {\n      const contentType = resp.headers.get('content-type');\n      const isJson = contentType && contentType.includes('application/json');\n      if (resp.ok && typeof me._options.onProgress === 'function') {\n        const contentLength = resp.headers.get('content-length');\n        const total = parseInt(contentLength,10);\n        if (!total || !resp.body) {\n          me._options.onProgress(100);\n        } else {\n          const reader = resp.body.getReader();\n          let loaded = 0;\n          resp = new Response(new ReadableStream({\n            start(controller) {\n              function read() {\n                return reader.read().then(({ done, value }) => {\n                  if (done) {\n                    me._options.onProgress(100);\n                    controller.close();\n                  } else {\n                    loaded += value.byteLength;\n                    me._options.onProgress(loaded / total * 100);\n                    controller.enqueue(value);\n                    return read();\n                  }\n                });\n              }\n              return read();\n            }\n          }));\n        }\n      } else if (!resp.ok) {\n        if (typeof me._options.onProgress === 'function') me._options.onProgress(100);\n        let error = Error(resp.statusText);\n        error.response = resp;\n        throw error;\n      }\n      return {\n        response: resp,\n        isJson\n      };\n    }).then(({ response, isJson }) => {\n      if(isJson) return response.json();\n      return response;\n    });\n  }\n\n  get url() {\n    const params = this._options.params;\n    if (params && Object.keys(params).length > 0) {\n      return this._url + '?' + Object.keys(params).map(k =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n    } else {\n      return this._url;\n    }\n  }\n\n  get options() {\n    const options = Object.assign({\n      mode: 'cors',\n      redirect: 'follow',\n      cache: 'no-cache'\n    }, this._options);\n    options.headers = Object.assign({\n      accept: 'application/json'\n    }, this._options.headers || {});\n    if (typeof options.body === 'object') {\n      options.body = JSON.stringify(options.body);\n    }\n    return options;\n  }\n}\n\nmodule.exports = Request;\n","class GraphWS {\n  constructor(url, protocol, fallback) {\n    this.url = url;\n    this.protocol = protocol;\n    this._fallback = !window.WebSocket;\n    this.fallback = fallback;\n    this.id = 1;\n    this._requests = {};\n    this._openSocket();\n  }\n\n  async send(query, variables = {}) {\n    if (this._fallback) return this.fallback(query, variables);\n    const id = this.id;\n    this.id++;\n    await this._openSocket();\n    const message = {\n      query: query,\n      variables: variables,\n      sifrrQueryId: id\n    };\n    this.ws.send(JSON.stringify(message));\n    const ret = new Promise((res) => {\n      this._requests[id] = {\n        res: (v) => {\n          delete this._requests[id];\n          res(v);\n        },\n        query,\n        variables\n      };\n    });\n    return ret;\n  }\n\n  _openSocket() {\n    if (!this.ws || this.ws.readyState === this.ws.CLOSED || this.ws.readyState === this.ws.CLOSING) {\n      this.ws = new window.WebSocket(this.url, this.protocol);\n      this.ws.onopen = this.onopen.bind(this);\n      this.ws.onerror = this.onerror.bind(this);\n      this.ws.onclose = this.onclose.bind(this);\n      this.ws.onmessage = this.onmessage.bind(this);\n      const me = this;\n      return new Promise(res => {\n        function waiting() {\n          if (me.ws.readyState !== me.ws.OPEN) {\n            window.requestAnimationFrame(waiting);\n          } else {\n            res();\n          }\n        }\n        window.requestAnimationFrame(waiting);\n      });\n    }\n    return Promise.resolve(true);\n  }\n\n  onerror() {\n    this._fallback = !!this.fallback;\n    for (let r in this._requests) {\n      const req = this._requests[r];\n      this.fallback(req.query, req.variables).then(result => req.res(result));\n    }\n  }\n\n  onopen() {}\n\n  onclose() {}\n\n  onmessage(event) {\n    const data = JSON.parse(event.data);\n    if (data.sifrrQueryId) this._requests[data.sifrrQueryId].res(data.result);\n    delete this._requests[data.sifrrQueryId];\n  }\n}\n\nmodule.exports = GraphWS;\n","const Request = require('./request');\nconst GraphWS = require('./graphws');\n\nclass SifrrFetch {\n  static get(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'GET');\n    return new Request(url, options).response;\n  }\n\n  static post(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'POST');\n    return new Request(url, options).response;\n  }\n\n  static put(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'PUT');\n    return new Request(url, options).response;\n  }\n\n  static delete(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'DELETE');\n    return new Request(url, options).response;\n  }\n\n  static graphql(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'POST');\n    const { query, variables = {} } = options;\n    delete options.query;\n    delete options.variables;\n    options.headers = options.headers || {};\n    options.headers['Content-Type'] = 'application/json';\n    options.headers['Accept'] = 'application/json';\n    options.body = {\n      query,\n      variables\n    };\n    return new Request(url, options).response;\n  }\n\n  static graphqlSocket(url, protocol, fallback) {\n    return new GraphWS(url, protocol, fallback ? (query, variables) => {\n      return this.graphql(fallback.url, {\n        method: fallback.method.toUpperCase(),\n        query,\n        variables\n      });\n    } : false);\n  }\n\n  static file(purl, poptions) {\n    const { url, options } = this.afterUse(purl, poptions, 'GET');\n    options.headers = options.headers || {};\n    options.headers.accept = options.headers.accept || '*/*';\n    return new Request(url, options).response;\n  }\n\n  static use(fxn) {\n    SifrrFetch._middlewares.push(fxn);\n  }\n\n  static afterUse(url, options = {}, method) {\n    options.method = method;\n    SifrrFetch._middlewares.forEach((fxn) => {\n      const res = fxn(url, options);\n      url = res.url;\n      options = res.options;\n    });\n    return { url, options };\n  }\n}\n\nSifrrFetch._middlewares = [];\n\nmodule.exports = SifrrFetch;\n"],"names":["Request","constructor","url","options","_options","_url","response","me","window","fetch","then","resp","contentType","headers","get","isJson","includes","ok","onProgress","contentLength","total","parseInt","body","reader","getReader","loaded","Response","ReadableStream","start","controller","read","done","value","close","byteLength","enqueue","error","Error","statusText","json","params","Object","keys","length","map","k","encodeURIComponent","join","assign","mode","redirect","cache","accept","JSON","stringify","GraphWS","protocol","fallback","_fallback","WebSocket","id","_requests","_openSocket","send","query","variables","message","sifrrQueryId","ws","ret","Promise","res","v","readyState","CLOSED","CLOSING","onopen","bind","onerror","onclose","onmessage","waiting","OPEN","requestAnimationFrame","resolve","r","req","result","event","data","parse","SifrrFetch","purl","poptions","afterUse","post","put","delete","graphql","graphqlSocket","method","toUpperCase","file","use","fxn","_middlewares","push","forEach"],"mappings":"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"}