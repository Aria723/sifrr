{"version":3,"file":"sifrr.storage.js","sources":["../src/utils/json.js","../src/storages/storage.js","../src/storages/indexeddb.js","../src/storages/websql.js","../src/storages/localstorage.js","../src/storages/cookies.js","../src/storages/jsonstorage.js","../src/storages.js","../src/sifrr.storage.js"],"sourcesContent":["class Json {\n  static parse(data) {\n    let ans = {};\n    if (typeof data == 'string') {\n      try {\n        ans = JSON.parse(data);\n      } catch(e) {\n        return data;\n      }\n      return this.parse(ans);\n    } else if (Array.isArray(data)) {\n      ans = [];\n      data.forEach((v, i) => {\n        ans[i] = this.parse(v);\n      });\n    } else if (typeof data == 'object') {\n      for (const k in data) {\n        ans[k] = this.parse(data[k]);\n      }\n    } else {\n      return data;\n    }\n    return ans;\n  }\n\n  static stringify(data) {\n    if (typeof data == 'string') {\n      return data;\n    } else {\n      return JSON.stringify(data);\n    }\n  }\n}\n\nmodule.exports = Json;\n","const JsonExt = require('../utils/json');\n\nclass Storage {\n  constructor(options) {\n    this._options = options;\n  }\n\n  _parseKeyValue(key, value) {\n    let jsonConstructor = {}.constructor;\n    if (typeof value == 'undefined') {\n      if (Array.isArray(key)) {\n        return key;\n      } else if (typeof key == 'string') {\n        return [key];\n      } else if (key.constructor === jsonConstructor) {\n        return key;\n      } {\n        throw Error('Invalid Key');\n      }\n    } else if (typeof key == 'string') {\n      let ans = {};\n      ans[key] = value;\n      return ans;\n    } else {\n      throw Error('Invalid Key');\n    }\n  }\n\n  _select(keys) {\n    return this.data().then((data) => {\n      let ans = {};\n      keys.forEach((key) => ans[key] = data[key]);\n      return ans;\n    });\n  }\n\n  _upsert(data) {\n    let table = this.table;\n    for (let key in data) {\n      table[key] = data[key];\n    }\n    this.table = table;\n  }\n\n  _delete(keys) {\n    let table = this.table;\n    keys.forEach((key) => delete table[key]);\n    this.table = table;\n  }\n\n  _clear() {\n    this.table = {};\n  }\n\n  _isEqual(options, type) {\n    if (this.tableName == options.name + options.version && this.type == type) { return true; }\n    else { return false; }\n  }\n\n  get tableName() {\n    return this.name + this.version;\n  }\n\n  get name() {\n    return this._options.name;\n  }\n\n  get version() {\n    return this._options.version;\n  }\n\n  get description() {\n    return this._options.description;\n  }\n\n  get type() {\n    return this.constructor.type;\n  }\n\n  isSupported() {\n    if (typeof window == 'undefined' || typeof document == 'undefined') { return true; }\n    else if (window && typeof this.store != 'undefined') { return true; }\n    else { return false; }\n  }\n\n  all() {\n    return this.data();\n  }\n\n  data() {\n    return Promise.resolve(this._parsedData());\n  }\n\n  select(key) {\n    return Promise.resolve(this._select(this._parseKeyValue(key)));\n  }\n\n  insert(key, value) {\n    return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n  }\n\n  update(key, value) {\n    return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n  }\n\n  upsert(key, value) {\n    return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n  }\n\n  delete(key) {\n    return Promise.resolve(this._delete(this._parseKeyValue(key)));\n  }\n\n  deleteAll() {\n    return Promise.resolve(this._clear());\n  }\n\n  clear() {\n    return Promise.resolve(this._clear());\n  }\n\n  static stringify(data) {\n    return JsonExt.stringify(data);\n  }\n\n  static parse(data) {\n    return JsonExt.parse(data);\n  }\n}\n\nmodule.exports = Storage;\n","const Storage = require('./storage');\n\nclass IndexedDB extends Storage {\n  constructor(options) {\n    super(options);\n  }\n\n  _parsedData() {\n    return this._tx('readonly', 'getAll').then((result) => this.parse(result));\n  }\n\n  _select(keys) {\n    let ans = {};\n    let promises = [];\n    keys.forEach((key) => promises.push(this._tx('readonly', 'get', key).then((r) => ans[key] = this.parse(r))));\n    return Promise.all(promises).then(() => ans);\n  }\n\n  _upsert(data) {\n    let promises = [];\n    for (let key in data) {\n      let promise = this._tx('readonly', 'get', key).then((oldResult) => {\n        if (oldResult && oldResult.key == key) {\n          return this._tx('readwrite', 'put', { 'key': key, 'value': data[key] });\n        } else {\n          return this._tx('readwrite', 'add', { 'key': key, 'value': data[key] });\n        }\n      });\n      promises.push(promise);\n    }\n    return Promise.all(promises);\n  }\n\n  _delete(keys) {\n    let promises = [];\n    keys.forEach((key) => promises.push(this._tx('readwrite', 'delete', key)));\n    return Promise.all(promises);\n  }\n\n  _clear() {\n    return this._tx('readwrite', 'clear');\n  }\n\n  _tx(scope, fn, params) {\n    let me = this;\n    return this.createStore(me.tableName).then((db) => {\n      return new Promise((resolve, reject) => {\n        let tx = db.transaction(me.tableName, scope).objectStore(me.tableName);\n        let request = tx[fn].call(tx, params);\n        request.onsuccess = (event) =>  resolve(event.target.result);\n        request.onerror = (event) => reject(event.error);\n      });\n    });\n  }\n\n  get store() {\n    return window.indexedDB;\n  }\n\n  createStore(table) {\n    return new Promise((resolve, reject) => {\n      const request = this.store.open(table, 1);\n      request.onupgradeneeded = (event) => {\n        let db = event.target.result;\n        db.createObjectStore(table, { keyPath: 'key' });\n      };\n      request.onsuccess = () => resolve(request.result);\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  parse(data) {\n    let ans = {};\n    if (Array.isArray(data)) {\n      data.forEach((row) => {\n        ans[row.key] = row.value;\n      });\n    } else if (data && data.value) {\n      return data.value;\n    } else {\n      return undefined;\n    }\n    return ans;\n  }\n\n  static get type() {\n    return 'indexeddb';\n  }\n}\n\nmodule.exports = IndexedDB;\n","const Storage = require('./storage');\n\nclass WebSQL extends Storage {\n  constructor(options) {\n    super(options);\n    this.createStore();\n  }\n\n  _parsedData() {\n    let me = this;\n    return new Promise((resolve) => {\n      this.store.transaction(function (tx) {\n        tx.executeSql(`SELECT * FROM ${me.tableName}`, [], (txn, results) => {\n          resolve(me.parse(results));\n        });\n      });\n    });\n  }\n\n  _select(keys) {\n    let me = this;\n    let q = keys.map(() => '?').join(', ');\n    // Need to give array for ? values in executeSql's 2nd argument\n    return this.execSql(`SELECT key, value FROM ${me.tableName} WHERE key in (${q})`, keys);\n  }\n\n  _upsert(data) {\n    let table = this.tableName;\n    this.store.transaction((tx) => {\n      for (let key in data) {\n        tx.executeSql(`INSERT OR IGNORE INTO ${table}(key, value) VALUES (?, ?)`, [key, data[key]]);\n        tx.executeSql(`UPDATE ${table} SET value = ? WHERE key = ?`, [this.constructor.stringify(data[key]), key]);\n      }\n    });\n  }\n\n  _delete(keys) {\n    let table = this.tableName;\n    let q = keys.map(() => '?').join(', ');\n    return this.execSql(`DELETE FROM ${table} WHERE key in (${q})`, keys);\n  }\n\n  _clear() {\n    let table = this.tableName;\n    return this.execSql(`DELETE FROM ${table}`);\n  }\n\n  get store() {\n    if (typeof window !== 'undefined') {\n      return window.openDatabase('bs', 1, this._options.description, this._options.size);\n    } else {\n      return true;\n    }\n  }\n\n  createStore() {\n    let table = this.tableName;\n    if (typeof window == 'undefined') return;\n    return this.execSql(`CREATE TABLE IF NOT EXISTS ${table} (key unique, value)`);\n  }\n\n  execSql(query, args = []) {\n    let me = this;\n    return new Promise((resolve) => {\n      me.store.transaction(function (tx) {\n        tx.executeSql(query, args, (txn, results) => {\n          resolve(me.parse(results));\n        });\n      });\n    });\n  }\n\n  parse(results) {\n    let ans = {};\n    let len = results.rows.length, i;\n    for (i = 0; i < len; i++) {\n      ans[results.rows.item(i).key] = this.constructor.parse(results.rows.item(i).value);\n    }\n    return ans;\n  }\n\n  static get type() {\n    return 'websql';\n  }\n}\n\nmodule.exports = WebSQL;\n","const Storage = require('./storage');\n\nclass LocalStorage extends Storage {\n  constructor(options) {\n    super(options);\n  }\n\n  _parsedData() {\n    return this.table;\n  }\n\n  get table() {\n    return this.constructor.parse(this.store.getItem(this.tableName));\n  }\n\n  set table(value) {\n    this.store.setItem(this.tableName, this.constructor.stringify(value));\n  }\n\n  get store() {\n    return window.localStorage;\n  }\n\n  static get type() {\n    return 'localstorage';\n  }\n}\n\nmodule.exports = LocalStorage;\n","const Storage = require('./storage');\n\nclass Cookies extends Storage {\n  constructor(options) {\n    super(options);\n  }\n\n  _parsedData() {\n    return this.table;\n  }\n\n  get table() {\n    let result = this.store, ans = {};\n    result = result.split('; ');\n    result.forEach((value) => {\n      let [k, v] = value.split('=');\n      if (v) ans[k] = this.constructor.parse(v);\n    });\n    return ans[this.tableName] || {};\n  }\n\n  set table(value) {\n    document.cookie = `${this.tableName}=${Storage.stringify(value)}; path=/`;\n  }\n\n  get store() {\n    return document.cookie;\n  }\n\n  static get type() {\n    return 'cookies';\n  }\n}\n\nmodule.exports = Cookies;\n","const Storage = require('./storage');\n\nclass JsonStorage extends Storage {\n  constructor(options, data = {}) {\n    super(options);\n    this._upsert(this.constructor.parse(data));\n  }\n\n  _parsedData() {\n    return this._table;\n  }\n\n  get store() {\n    return this._table;\n  }\n\n  get table() {\n    return this._table || {};\n  }\n\n  set table(value) {\n    this._table = value;\n  }\n\n  static get type() {\n    return 'jsonstorage';\n  }\n}\n\nmodule.exports = JsonStorage;\n","const IndexedDB = require('./storages/indexeddb');\nconst WebSQL = require('./storages/websql');\nconst LocalStorage = require('./storages/localstorage');\nconst Cookies = require('./storages/cookies');\nconst JsonStorage = require('./storages/jsonstorage');\n\nlet storages = {};\nstorages[IndexedDB.type] = IndexedDB;\nstorages[WebSQL.type] = WebSQL;\nstorages[LocalStorage.type] = LocalStorage;\nstorages[Cookies.type] = Cookies;\nstorages[JsonStorage.type] = JsonStorage;\n\nmodule.exports = storages;\n","const storages = require('./storages');\nconst JsonStorage = require('./storages/jsonstorage');\n\nclass SifrrStorage {\n  constructor(options) {\n    if (typeof options == 'string') options = { priority: [options] }; else options = options || {};\n    this._options = Object.assign(this.constructor.defaultOptions, options);\n    return this.storage;\n  }\n\n  get storage() {\n    let storage = this.supportedStore();\n    if (typeof storage == 'undefined') throw new Error('No available storage supported in this browser');\n    let matchingInstance = this.constructor._matchingInstance(this._options, storage.type);\n    if (matchingInstance) { return matchingInstance; }\n    else {\n      let storageInstance = new storage(this._options);\n      this.constructor._add(storageInstance);\n      return storageInstance;\n    }\n  }\n\n  get priority() {\n    return this._options.priority.concat(['indexeddb', 'websql', 'localstorage', 'cookies', 'jsonstorage']);\n  }\n\n  supportedStore() {\n    for (let i = 0; i < this.priority.length; i++) {\n      let store = this.constructor.availableStores[this.priority[i]];\n      if (store && new store(this._options).isSupported()) return store;\n    }\n  }\n\n  static _matchingInstance(options, type) {\n    let allInstances = this.all, i;\n    let length = allInstances.length;\n    for (i = 0; i < length; i++) {\n      if (allInstances[i]._isEqual(options, type)) return allInstances[i];\n    }\n    return false;\n  }\n\n  static _add(instance) {\n    this._all = this._all || [];\n    this._all.push(instance);\n  }\n\n  static get availableStores() {\n    return storages;\n  }\n\n  static get defaultOptions() {\n    return {\n      priority: [],\n      name: 'SifrrStorage',\n      version: 1,\n      description: 'Sifrr Storage',\n      size: 5 * 1024 * 1024\n    };\n  }\n\n  static get all() {\n    return this._all || [];\n  }\n\n  static json(data) {\n    return new JsonStorage({}, data);\n  }\n}\n\nmodule.exports = SifrrStorage;\n"],"names":["Json","parse","data","ans","JSON","e","Array","isArray","forEach","v","i","k","stringify","Storage","constructor","options","_options","_parseKeyValue","key","value","jsonConstructor","Error","_select","keys","then","_upsert","table","_delete","_clear","_isEqual","type","tableName","name","version","description","isSupported","window","document","store","all","Promise","resolve","_parsedData","select","insert","update","upsert","delete","deleteAll","clear","JsonExt","IndexedDB","_tx","result","promises","push","r","promise","oldResult","scope","fn","params","me","createStore","db","reject","tx","transaction","objectStore","request","call","onsuccess","event","target","onerror","error","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","row","undefined","WebSQL","executeSql","txn","results","q","map","join","execSql","openDatabase","size","query","args","len","rows","length","item","LocalStorage","getItem","setItem","localStorage","Cookies","split","cookie","JsonStorage","_table","storages","SifrrStorage","priority","Object","assign","defaultOptions","storage","supportedStore","matchingInstance","_matchingInstance","storageInstance","_add","concat","availableStores","allInstances","instance","_all","json"],"mappings":"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"}