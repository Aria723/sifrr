{"version":3,"file":"sifrr.storage.js","sources":["../src/utils/json.js","../src/storages/storage.js","../src/storages/indexeddb.js","../src/storages/websql.js","../src/storages/localstorage.js","../src/storages/cookies.js","../src/storages/jsonstorage.js","../src/storages.js","../src/sifrr.storage.js"],"sourcesContent":["class Json {\n  static parse(data) {\n    let ans = data;\n    if (typeof data == 'string') {\n      try {\n        return this.parse(JSON.parse(data));\n      } catch(e) {\n        return data;\n      }\n    } else if (Array.isArray(data)) {\n      ans = [];\n      data.forEach((v, i) => {\n        ans[i] = this.parse(v);\n      });\n    } else if (typeof data == 'object') {\n      if (data === null) return null;\n      ans = {};\n      for (const k in data) {\n        ans[k] = this.parse(data[k]);\n      }\n    }\n    return ans;\n  }\n\n  static stringify(data) {\n    if (typeof data == 'string') {\n      return data;\n    } else {\n      return JSON.stringify(data);\n    }\n  }\n}\n\nmodule.exports = Json;\n","const JsonExt = require('../utils/json');\nconst jsonConstructor = {}.constructor;\n\nclass Storage {\n  constructor(options = {}) {\n    this._options = options;\n    this.name = this._options.name;\n    this.version = this._options.version;\n    this.tableName = this.name + this.version;\n    this.description = this._options.description;\n    this.type = this.constructor.type;\n  }\n\n  _parseKeyValue(key, value) {\n    if (typeof value === 'undefined') {\n      if (Array.isArray(key)) {\n        return key;\n      } else if (typeof key === 'string') {\n        return [key];\n      } else if (key.constructor === jsonConstructor) {\n        return key;\n      } {\n        throw Error('Invalid Key');\n      }\n    } else if (typeof key === 'string') {\n      let ans = {};\n      ans[key] = value;\n      return ans;\n    } else {\n      throw Error('Invalid Key');\n    }\n  }\n\n  _select(keys) {\n    return this.all().then((data) => {\n      let ans = {};\n      keys.forEach((key) => ans[key] = data[key]);\n      return ans;\n    });\n  }\n\n  _upsert(data) {\n    let table = this.table;\n    for (let key in data) {\n      table[key] = data[key];\n    }\n    this.table = table;\n  }\n\n  _delete(keys) {\n    let table = this.table;\n    keys.forEach((key) => delete table[key]);\n    this.table = table;\n  }\n\n  _clear() {\n    this.table = {};\n  }\n\n  _isEqual(options, type) {\n    if (this.tableName == options.name + options.version && this.type == type) { return true; }\n    else { return false; }\n  }\n\n  isSupported(force = true) {\n    if (force && (typeof window === 'undefined' || typeof document === 'undefined')) { return true; }\n    else if (window && typeof this.store !== 'undefined') { return true; }\n    else { return false; }\n  }\n\n  keys() {\n    return this.all().then(d => Object.keys(d));\n  }\n\n  all() {\n    return Promise.resolve(this._parsedData());\n  }\n\n  get(key) {\n    return Promise.resolve(this._select(this._parseKeyValue(key)));\n  }\n\n  set(key, value) {\n    return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n  }\n\n  del(key) {\n    return Promise.resolve(this._delete(this._parseKeyValue(key)));\n  }\n\n  clear() {\n    return Promise.resolve(this._clear());\n  }\n\n  static stringify(data) {\n    return JsonExt.stringify(data);\n  }\n\n  static parse(data) {\n    return JsonExt.parse(data);\n  }\n}\n\nmodule.exports = Storage;\n","const Storage = require('./storage');\n\nclass IndexedDB extends Storage {\n  constructor(options) {\n    super(options);\n  }\n\n  _parsedData() {\n    return this._tx('readonly', 'getAll').then((result) => this.parse(result));\n  }\n\n  _select(keys) {\n    const ans = {};\n    const promises = [];\n    keys.forEach((key) => promises.push(this._tx('readonly', 'get', key).then((r) => ans[key] = this.parse(r))));\n    return Promise.all(promises).then(() => ans);\n  }\n\n  _upsert(data) {\n    const promises = [];\n    for (let key in data) {\n      const promise = this._tx('readonly', 'get', key).then((oldResult) => {\n        if (oldResult && oldResult.key == key) {\n          return this._tx('readwrite', 'put', { key: key, value: data[key] });\n        } else {\n          return this._tx('readwrite', 'add', { key: key, value: data[key] });\n        }\n      });\n      promises.push(promise);\n    }\n    return Promise.all(promises);\n  }\n\n  _delete(keys) {\n    const promises = [];\n    keys.forEach((key) => promises.push(this._tx('readwrite', 'delete', key)));\n    return Promise.all(promises);\n  }\n\n  _clear() {\n    return this._tx('readwrite', 'clear');\n  }\n\n  _tx(scope, fn, params) {\n    const me = this;\n    this._store = this._store || this.createStore(me.tableName);\n    return this._store.then((db) => {\n      return new Promise((resolve, reject) => {\n        const tx = db.transaction(me.tableName, scope).objectStore(me.tableName);\n        const request = tx[fn].call(tx, params);\n        request.onsuccess = (event) =>  resolve(event.target.result);\n        request.onerror = (event) => reject(event.error);\n      });\n    });\n  }\n\n  get store() {\n    return window.indexedDB;\n  }\n\n  createStore(table) {\n    return new Promise((resolve, reject) => {\n      const request = this.store.open(table, 1);\n      request.onupgradeneeded = (event) => {\n        const db = event.target.result;\n        db.createObjectStore(table, { keyPath: 'key' });\n      };\n      request.onsuccess = () => resolve(request.result);\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  parse(data) {\n    const ans = {};\n    if (Array.isArray(data)) {\n      data.forEach((row) => {\n        ans[row.key] = row.value;\n      });\n    } else if (data) {\n      return data.value;\n    } else {\n      return undefined;\n    }\n    return ans;\n  }\n\n  static get type() {\n    return 'indexeddb';\n  }\n}\n\nmodule.exports = IndexedDB;\n","const Storage = require('./storage');\n\nclass WebSQL extends Storage {\n  constructor(options) {\n    super(options);\n    this.createStore();\n  }\n\n  _parsedData() {\n    const me = this;\n    return new Promise((resolve) => {\n      this.store.transaction(function (tx) {\n        tx.executeSql(`SELECT * FROM ${me.tableName}`, [], (txn, results) => {\n          resolve(me.parse(results));\n        });\n      });\n    });\n  }\n\n  _select(keys) {\n    const me = this;\n    const q = keys.map(() => '?').join(', ');\n    // Need to give array for ? values in executeSql's 2nd argument\n    return this.execSql(`SELECT key, value FROM ${me.tableName} WHERE key in (${q})`, keys);\n  }\n\n  _upsert(data) {\n    const table = this.tableName;\n    this.store.transaction((tx) => {\n      for (let key in data) {\n        tx.executeSql(`INSERT OR IGNORE INTO ${table}(key, value) VALUES (?, ?)`, [key, data[key]]);\n        tx.executeSql(`UPDATE ${table} SET value = ? WHERE key = ?`, [this.constructor.stringify(data[key]), key]);\n      }\n    });\n  }\n\n  _delete(keys) {\n    const table = this.tableName;\n    const q = keys.map(() => '?').join(', ');\n    return this.execSql(`DELETE FROM ${table} WHERE key in (${q})`, keys);\n  }\n\n  _clear() {\n    const table = this.tableName;\n    return this.execSql(`DELETE FROM ${table}`);\n  }\n\n  get store() {\n    return window.openDatabase('bs', 1, this._options.description, this._options.size);\n  }\n\n  createStore() {\n    const table = this.tableName;\n    if (!window || typeof window.openDatabase !== 'function') return;\n    return this.execSql(`CREATE TABLE IF NOT EXISTS ${table} (key unique, value)`);\n  }\n\n  execSql(query, args = []) {\n    const me = this;\n    return new Promise((resolve) => {\n      me.store.transaction(function (tx) {\n        tx.executeSql(query, args, (txn, results) => {\n          resolve(me.parse(results));\n        });\n      });\n    });\n  }\n\n  parse(results) {\n    const ans = {};\n    const len = results.rows.length;\n    for (let i = 0; i < len; i++) {\n      ans[results.rows.item(i).key] = this.constructor.parse(results.rows.item(i).value);\n    }\n    return ans;\n  }\n\n  static get type() {\n    return 'websql';\n  }\n}\n\nmodule.exports = WebSQL;\n","const Storage = require('./storage');\n\nclass LocalStorage extends Storage {\n  constructor(options) {\n    super(options);\n  }\n\n  _parsedData() {\n    return this.table;\n  }\n\n  get table() {\n    return this.constructor.parse(this.store.getItem(this.tableName) || {});\n  }\n\n  set table(value) {\n    this.store.setItem(this.tableName, this.constructor.stringify(value));\n  }\n\n  get store() {\n    return window.localStorage;\n  }\n\n  static get type() {\n    return 'localstorage';\n  }\n}\n\nmodule.exports = LocalStorage;\n","const Storage = require('./storage');\n\nclass Cookies extends Storage {\n  constructor(options) {\n    super(options);\n  }\n\n  _parsedData() {\n    return this.table;\n  }\n\n  get table() {\n    let result = this.store, ans = {};\n    result.split('; ').forEach((value) => {\n      let [k, v] = value.split('=');\n      ans[k] = this.constructor.parse(v);\n    });\n    return ans[this.tableName] || {};\n  }\n\n  set table(value) {\n    document.cookie = `${this.tableName}=${Storage.stringify(value)}; path=/`;\n  }\n\n  get store() {\n    return document.cookie;\n  }\n\n  static get type() {\n    return 'cookies';\n  }\n}\n\nmodule.exports = Cookies;\n","const Storage = require('./storage');\n\nclass JsonStorage extends Storage {\n  constructor(options, data = {}) {\n    super(options);\n    this.table = Storage.parse(data);\n  }\n\n  _parsedData() {\n    return this.table;\n  }\n\n  _upsert(data) {\n    for (let key in data) {\n      this.table[key] = data[key];\n    }\n  }\n\n  get store() {\n    return this.table;\n  }\n\n  static get type() {\n    return 'jsonstorage';\n  }\n}\n\nmodule.exports = JsonStorage;\n","const IndexedDB = require('./storages/indexeddb');\nconst WebSQL = require('./storages/websql');\nconst LocalStorage = require('./storages/localstorage');\nconst Cookies = require('./storages/cookies');\nconst JsonStorage = require('./storages/jsonstorage');\n\nlet storages = {};\nstorages[IndexedDB.type] = IndexedDB;\nstorages[WebSQL.type] = WebSQL;\nstorages[LocalStorage.type] = LocalStorage;\nstorages[Cookies.type] = Cookies;\nstorages[JsonStorage.type] = JsonStorage;\n\nmodule.exports = storages;\n","const storages = require('./storages');\nconst JsonStorage = require('./storages/jsonstorage');\n\nclass SifrrStorage {\n  constructor(options) {\n    if (typeof options === 'string') options = { priority: [options] }; else options = options || {};\n    this._options = Object.assign(this.constructor.defaultOptions, options);\n    return this.storage;\n  }\n\n  get storage() {\n    let storage = this.supportedStore();\n    if (typeof storage === 'undefined') throw Error('No available storage supported in this browser');\n    let matchingInstance = this.constructor._matchingInstance(this._options, storage.type);\n    if (matchingInstance) { return matchingInstance; }\n    else {\n      let storageInstance = new storage(this._options);\n      this.constructor._add(storageInstance);\n      return storageInstance;\n    }\n  }\n\n  get priority() {\n    return this._options.priority.concat(['indexeddb', 'websql', 'localstorage', 'cookies', 'jsonstorage']);\n  }\n\n  supportedStore() {\n    for (let i = 0; i < this.priority.length; i++) {\n      let store = this.constructor.availableStores[this.priority[i]];\n      if (store && new store(this._options).isSupported()) return store;\n    }\n  }\n\n  static _matchingInstance(options, type) {\n    let allInstances = this.all, i;\n    let length = allInstances.length;\n    for (i = 0; i < length; i++) {\n      if (allInstances[i]._isEqual(options, type)) return allInstances[i];\n    }\n    return false;\n  }\n\n  static _add(instance) {\n    this.all.push(instance);\n  }\n\n  static get defaultOptions() {\n    return {\n      priority: [],\n      name: 'SifrrStorage',\n      version: 1,\n      description: 'Sifrr Storage',\n      size: 5 * 1024 * 1024\n    };\n  }\n\n  static json(data) {\n    return new JsonStorage({}, data);\n  }\n}\n\nSifrrStorage.availableStores = storages;\nSifrrStorage.all = [];\n\nmodule.exports = SifrrStorage;\n"],"names":["Json","parse","data","ans","JSON","e","Array","isArray","forEach","v","i","k","stringify","jsonConstructor","constructor","Storage","options","_options","name","version","tableName","description","type","_parseKeyValue","key","value","Error","_select","keys","all","then","_upsert","table","_delete","_clear","_isEqual","isSupported","force","window","document","store","d","Object","Promise","resolve","_parsedData","get","set","del","clear","JsonExt","IndexedDB","_tx","result","promises","push","r","promise","oldResult","scope","fn","params","me","_store","createStore","db","reject","tx","transaction","objectStore","request","call","onsuccess","event","target","onerror","error","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","row","undefined","WebSQL","executeSql","txn","results","q","map","join","execSql","openDatabase","size","query","args","len","rows","length","item","LocalStorage","getItem","setItem","localStorage","Cookies","split","cookie","JsonStorage","storages","SifrrStorage","priority","assign","defaultOptions","storage","supportedStore","matchingInstance","_matchingInstance","storageInstance","_add","concat","availableStores","allInstances","instance","json"],"mappings":"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"}