{"version":3,"file":"sifrr.storage.js","sources":["../src/utils/json.js","../src/storages/storage.js","../src/storages/indexeddb.js","../src/storages/websql.js","../src/storages/localstorage.js","../src/storages/cookies.js","../src/storages/jsonstorage.js","../src/storages.js","../src/sifrr.storage.js"],"sourcesContent":["class Json {\n  static parse(data) {\n    let ans = {};\n    if (typeof data == 'string') {\n      try {\n        ans = JSON.parse(data);\n      } catch(e) {\n        return data;\n      }\n      return this.parse(ans);\n    } else if (Array.isArray(data)) {\n      ans = [];\n      data.forEach((v, i) => {\n        ans[i] = this.parse(v);\n      });\n    } else if (typeof data == 'object') {\n      if (data === null) return null;\n      for (const k in data) {\n        ans[k] = this.parse(data[k]);\n      }\n    } else {\n      return data;\n    }\n    return ans;\n  }\n\n  static stringify(data) {\n    if (typeof data == 'string') {\n      return data;\n    } else {\n      return JSON.stringify(data);\n    }\n  }\n}\n\nmodule.exports = Json;\n","const JsonExt = require('../utils/json');\n\nclass Storage {\n  constructor(options = {}) {\n    this._options = options;\n  }\n\n  _parseKeyValue(key, value) {\n    let jsonConstructor = {}.constructor;\n    if (typeof value === 'undefined') {\n      if (Array.isArray(key)) {\n        return key;\n      } else if (typeof key === 'string') {\n        return [key];\n      } else if (key.constructor === jsonConstructor) {\n        return key;\n      } {\n        throw Error('Invalid Key');\n      }\n    } else if (typeof key === 'string') {\n      let ans = {};\n      ans[key] = value;\n      return ans;\n    } else {\n      throw Error('Invalid Key');\n    }\n  }\n\n  _select(keys) {\n    return this.data().then((data) => {\n      let ans = {};\n      keys.forEach((key) => ans[key] = data[key]);\n      return ans;\n    });\n  }\n\n  _upsert(data) {\n    let table = this.table;\n    for (let key in data) {\n      table[key] = data[key];\n    }\n    this.table = table;\n  }\n\n  _delete(keys) {\n    let table = this.table;\n    keys.forEach((key) => delete table[key]);\n    this.table = table;\n  }\n\n  _clear() {\n    this.table = {};\n  }\n\n  _isEqual(options, type) {\n    if (this.tableName == options.name + options.version && this.type == type) { return true; }\n    else { return false; }\n  }\n\n  get tableName() {\n    return this.name + this.version;\n  }\n\n  get name() {\n    return this._options.name;\n  }\n\n  get version() {\n    return this._options.version;\n  }\n\n  get description() {\n    return this._options.description;\n  }\n\n  get type() {\n    return this.constructor.type;\n  }\n\n  isSupported(force = true) {\n    if (force && (typeof window === 'undefined' || typeof document === 'undefined')) { return true; }\n    else if (window && typeof this.store !== 'undefined') { return true; }\n    else { return false; }\n  }\n\n  all() {\n    return this.data();\n  }\n\n  data() {\n    return Promise.resolve(this._parsedData());\n  }\n\n  select(key) {\n    return Promise.resolve(this._select(this._parseKeyValue(key)));\n  }\n\n  insert(key, value) {\n    return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n  }\n\n  update(key, value) {\n    return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n  }\n\n  upsert(key, value) {\n    return Promise.resolve(this._upsert(this._parseKeyValue(key, value)));\n  }\n\n  delete(key) {\n    return Promise.resolve(this._delete(this._parseKeyValue(key)));\n  }\n\n  deleteAll() {\n    return Promise.resolve(this._clear());\n  }\n\n  clear() {\n    return Promise.resolve(this._clear());\n  }\n\n  static stringify(data) {\n    return JsonExt.stringify(data);\n  }\n\n  static parse(data) {\n    return JsonExt.parse(data);\n  }\n}\n\nmodule.exports = Storage;\n","const Storage = require('./storage');\n\nclass IndexedDB extends Storage {\n  constructor(options) {\n    super(options);\n  }\n\n  _parsedData() {\n    return this._tx('readonly', 'getAll').then((result) => this.parse(result));\n  }\n\n  _select(keys) {\n    let ans = {};\n    let promises = [];\n    keys.forEach((key) => promises.push(this._tx('readonly', 'get', key).then((r) => ans[key] = this.parse(r))));\n    return Promise.all(promises).then(() => ans);\n  }\n\n  _upsert(data) {\n    let promises = [];\n    for (let key in data) {\n      let promise = this._tx('readonly', 'get', key).then((oldResult) => {\n        if (oldResult && oldResult.key == key) {\n          return this._tx('readwrite', 'put', { key: key, value: data[key] });\n        } else {\n          return this._tx('readwrite', 'add', { key: key, value: data[key] });\n        }\n      });\n      promises.push(promise);\n    }\n    return Promise.all(promises);\n  }\n\n  _delete(keys) {\n    let promises = [];\n    keys.forEach((key) => promises.push(this._tx('readwrite', 'delete', key)));\n    return Promise.all(promises);\n  }\n\n  _clear() {\n    return this._tx('readwrite', 'clear');\n  }\n\n  _tx(scope, fn, params) {\n    let me = this;\n    return this.createStore(me.tableName).then((db) => {\n      return new Promise((resolve, reject) => {\n        let tx = db.transaction(me.tableName, scope).objectStore(me.tableName);\n        let request = tx[fn].call(tx, params);\n        request.onsuccess = (event) =>  resolve(event.target.result);\n        request.onerror = (event) => reject(event.error);\n      });\n    });\n  }\n\n  get store() {\n    return window.indexedDB;\n  }\n\n  createStore(table) {\n    return new Promise((resolve, reject) => {\n      const request = this.store.open(table, 1);\n      request.onupgradeneeded = (event) => {\n        let db = event.target.result;\n        db.createObjectStore(table, { keyPath: 'key' });\n      };\n      request.onsuccess = () => resolve(request.result);\n      request.onerror = () => reject(request.error);\n    });\n  }\n\n  parse(data) {\n    let ans = {};\n    if (Array.isArray(data)) {\n      data.forEach((row) => {\n        ans[row.key] = row.value;\n      });\n    } else if (data && data.value) {\n      return data.value;\n    } else {\n      return undefined;\n    }\n    return ans;\n  }\n\n  static get type() {\n    return 'indexeddb';\n  }\n}\n\nmodule.exports = IndexedDB;\n","const Storage = require('./storage');\n\nclass WebSQL extends Storage {\n  constructor(options) {\n    super(options);\n    this.createStore();\n  }\n\n  _parsedData() {\n    let me = this;\n    return new Promise((resolve) => {\n      this.store.transaction(function (tx) {\n        tx.executeSql(`SELECT * FROM ${me.tableName}`, [], (txn, results) => {\n          resolve(me.parse(results));\n        });\n      });\n    });\n  }\n\n  _select(keys) {\n    let me = this;\n    let q = keys.map(() => '?').join(', ');\n    // Need to give array for ? values in executeSql's 2nd argument\n    return this.execSql(`SELECT key, value FROM ${me.tableName} WHERE key in (${q})`, keys);\n  }\n\n  _upsert(data) {\n    let table = this.tableName;\n    this.store.transaction((tx) => {\n      for (let key in data) {\n        tx.executeSql(`INSERT OR IGNORE INTO ${table}(key, value) VALUES (?, ?)`, [key, data[key]]);\n        tx.executeSql(`UPDATE ${table} SET value = ? WHERE key = ?`, [this.constructor.stringify(data[key]), key]);\n      }\n    });\n  }\n\n  _delete(keys) {\n    let table = this.tableName;\n    let q = keys.map(() => '?').join(', ');\n    return this.execSql(`DELETE FROM ${table} WHERE key in (${q})`, keys);\n  }\n\n  _clear() {\n    let table = this.tableName;\n    return this.execSql(`DELETE FROM ${table}`);\n  }\n\n  get store() {\n    return window.openDatabase('bs', 1, this._options.description, this._options.size);\n  }\n\n  createStore() {\n    let table = this.tableName;\n    if (!window || typeof window.openDatabase !== 'function') return;\n    return this.execSql(`CREATE TABLE IF NOT EXISTS ${table} (key unique, value)`);\n  }\n\n  execSql(query, args = []) {\n    let me = this;\n    return new Promise((resolve) => {\n      me.store.transaction(function (tx) {\n        tx.executeSql(query, args, (txn, results) => {\n          resolve(me.parse(results));\n        });\n      });\n    });\n  }\n\n  parse(results) {\n    let ans = {};\n    let len = results.rows.length, i;\n    for (i = 0; i < len; i++) {\n      ans[results.rows.item(i).key] = this.constructor.parse(results.rows.item(i).value);\n    }\n    return ans;\n  }\n\n  static get type() {\n    return 'websql';\n  }\n}\n\nmodule.exports = WebSQL;\n","const Storage = require('./storage');\n\nclass LocalStorage extends Storage {\n  constructor(options) {\n    super(options);\n  }\n\n  _parsedData() {\n    return this.table;\n  }\n\n  get table() {\n    return this.constructor.parse(this.store.getItem(this.tableName) || {});\n  }\n\n  set table(value) {\n    this.store.setItem(this.tableName, this.constructor.stringify(value));\n  }\n\n  get store() {\n    return window.localStorage;\n  }\n\n  static get type() {\n    return 'localstorage';\n  }\n}\n\nmodule.exports = LocalStorage;\n","const Storage = require('./storage');\n\nclass Cookies extends Storage {\n  constructor(options) {\n    super(options);\n  }\n\n  _parsedData() {\n    return this.table;\n  }\n\n  get table() {\n    let result = this.store, ans = {};\n    result.split('; ').forEach((value) => {\n      let [k, v] = value.split('=');\n      ans[k] = this.constructor.parse(v);\n    });\n    return ans[this.tableName] || {};\n  }\n\n  set table(value) {\n    document.cookie = `${this.tableName}=${Storage.stringify(value)}; path=/`;\n  }\n\n  get store() {\n    return document.cookie;\n  }\n\n  static get type() {\n    return 'cookies';\n  }\n}\n\nmodule.exports = Cookies;\n","const Storage = require('./storage');\n\nclass JsonStorage extends Storage {\n  constructor(options, data = {}) {\n    super(options);\n    this._upsert(this.constructor.parse(data));\n  }\n\n  _parsedData() {\n    return this._table;\n  }\n\n  get store() {\n    return this._table;\n  }\n\n  get table() {\n    return this._table || {};\n  }\n\n  set table(value) {\n    this._table = value;\n  }\n\n  static get type() {\n    return 'jsonstorage';\n  }\n}\n\nmodule.exports = JsonStorage;\n","const IndexedDB = require('./storages/indexeddb');\nconst WebSQL = require('./storages/websql');\nconst LocalStorage = require('./storages/localstorage');\nconst Cookies = require('./storages/cookies');\nconst JsonStorage = require('./storages/jsonstorage');\n\nlet storages = {};\nstorages[IndexedDB.type] = IndexedDB;\nstorages[WebSQL.type] = WebSQL;\nstorages[LocalStorage.type] = LocalStorage;\nstorages[Cookies.type] = Cookies;\nstorages[JsonStorage.type] = JsonStorage;\n\nmodule.exports = storages;\n","const storages = require('./storages');\nconst JsonStorage = require('./storages/jsonstorage');\n\nclass SifrrStorage {\n  constructor(options) {\n    if (typeof options === 'string') options = { priority: [options] }; else options = options || {};\n    this._options = Object.assign(this.constructor.defaultOptions, options);\n    return this.storage;\n  }\n\n  get storage() {\n    let storage = this.supportedStore();\n    if (typeof storage === 'undefined') throw Error('No available storage supported in this browser');\n    let matchingInstance = this.constructor._matchingInstance(this._options, storage.type);\n    if (matchingInstance) { return matchingInstance; }\n    else {\n      let storageInstance = new storage(this._options);\n      this.constructor._add(storageInstance);\n      return storageInstance;\n    }\n  }\n\n  get priority() {\n    return this._options.priority.concat(['indexeddb', 'websql', 'localstorage', 'cookies', 'jsonstorage']);\n  }\n\n  supportedStore() {\n    for (let i = 0; i < this.priority.length; i++) {\n      let store = this.constructor.availableStores[this.priority[i]];\n      if (store && new store(this._options).isSupported()) return store;\n    }\n  }\n\n  static _matchingInstance(options, type) {\n    let allInstances = this.all, i;\n    let length = allInstances.length;\n    for (i = 0; i < length; i++) {\n      if (allInstances[i]._isEqual(options, type)) return allInstances[i];\n    }\n    return false;\n  }\n\n  static _add(instance) {\n    this._all = this._all || [];\n    this._all.push(instance);\n  }\n\n  static get availableStores() {\n    return storages;\n  }\n\n  static get defaultOptions() {\n    return {\n      priority: [],\n      name: 'SifrrStorage',\n      version: 1,\n      description: 'Sifrr Storage',\n      size: 5 * 1024 * 1024\n    };\n  }\n\n  static get all() {\n    return this._all || [];\n  }\n\n  static json(data) {\n    return new JsonStorage({}, data);\n  }\n}\n\nmodule.exports = SifrrStorage;\n"],"names":["Json","parse","data","ans","JSON","e","Array","isArray","forEach","v","i","k","stringify","Storage","constructor","options","_options","_parseKeyValue","key","value","jsonConstructor","Error","_select","keys","then","_upsert","table","_delete","_clear","_isEqual","type","tableName","name","version","description","isSupported","force","window","document","store","all","Promise","resolve","_parsedData","select","insert","update","upsert","delete","deleteAll","clear","JsonExt","IndexedDB","_tx","result","promises","push","r","promise","oldResult","scope","fn","params","me","createStore","db","reject","tx","transaction","objectStore","request","call","onsuccess","event","target","onerror","error","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","row","undefined","WebSQL","executeSql","txn","results","q","map","join","execSql","openDatabase","size","query","args","len","rows","length","item","LocalStorage","getItem","setItem","localStorage","Cookies","split","cookie","JsonStorage","_table","storages","SifrrStorage","priority","Object","assign","defaultOptions","storage","supportedStore","matchingInstance","_matchingInstance","storageInstance","_add","concat","availableStores","allInstances","instance","_all","json"],"mappings":"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"}