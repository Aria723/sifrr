{"version":3,"file":"browserstorage.min.js","sources":["../src/storages/storage.js","../src/storages/indexeddb.js","../src/storages/websql.js","../src/storages/localstorage.js","../src/storages/cookies.js","../src/utils/storages.js","../src/browserstorage.js"],"sourcesContent":["class Storage {\n  constructor(options) {\n    this._options = options;\n  }\n}\n\nmodule.exports = Storage;\n","const Storage = require('./storage');\n\nclass IndexedDB extends Storage {\n  constructor(options) {\n    super(options);\n    this._type = IndexedDB.type;\n  }\n\n  get store() {\n    return window.indexedDB.open(this._options.name, this._options.version);\n  }\n\n  get type() {\n    return 'indexeddb';\n  }\n\n  static isSupported() {\n    return true;\n  }\n}\n\nmodule.exports = IndexedDB;\n","const Storage = require('./storage');\n\nclass WebSQL extends Storage {\n  constructor(options) {\n    super(options);\n    this._type = WebSQL.type;\n  }\n\n  get store() {\n    return window.openDatabase(this._options.name, this._options.version, this._options.description, 5 * 1024 * 1024);\n  }\n\n  get type() {\n    return 'websql';\n  }\n\n  static isSupported() {\n    return true;\n  }\n}\n\nmodule.exports = WebSQL;\n","const Storage = require('./storage');\n\nclass LocalStorage extends Storage {\n  constructor(options) {\n    super(options);\n    this._type = LocalStorage.type;\n  }\n\n  get store() {\n    return localStorage;\n  }\n\n  get type() {\n    return 'localstorage';\n  }\n\n  static isSupported() {\n    return true;\n  }\n}\n\nmodule.exports = LocalStorage;\n","const Storage = require('./storage');\n\nclass Cookies extends Storage {\n  constructor(options) {\n    super(options);\n    this._type = Cookies.type;\n  }\n\n  get store() {\n    return document.cookie;\n  }\n\n  get type() {\n    return 'cookies';\n  }\n\n  static isSupported() {\n    self.store();\n  }\n}\n\nmodule.exports = Cookies;\n","const IndexedDB = require('../storages/indexeddb');\nconst WebSQL = require('../storages/websql');\nconst LocalStorage = require('../storages/localstorage');\nconst Cookies = require('../storages/cookies');\n\nlet storages = {};\nstorages[LocalStorage.type] = LocalStorage;\nstorages[IndexedDB.type] = IndexedDB;\nstorages[WebSQL.type] = WebSQL;\nstorages[Cookies.type] = Cookies;\n\nmodule.exports = storages;\n","const storages = require('./utils/storages');\n\nclass BrowserStorage {\n  constructor(options) {\n    options = options || {};\n    options = Object.assign(BrowserStorage.defaultOptions, options);\n    this._priority = options.priority;\n    if (typeof this.storage == 'undefined') throw new Error('No available storage supported in this browser');\n    return new this.storage(options);\n  }\n\n  get storage() {\n    return this.supportedStore();\n  }\n\n  get priority() {\n    return this._priority.concat(BrowserStorage.defaultOptions.priority);\n  }\n\n  supportedStore() {\n    for (let i = 0; i < this.priority.length; i++) {\n      let store = BrowserStorage.availableStores[this.priority[i]];\n      if (store && store.isSupported()) return store;\n    }\n  }\n\n  static get availableStores() {\n    return storages;\n  }\n\n  static get defaultOptions() {\n    return {\n      priority: ['localstorage', 'indexeddb', 'websql', 'cookies'],\n      name: 'defaultDB',\n      version: '1.0',\n      description: 'Browser Storage'\n    };\n  }\n}\n\nmodule.exports = BrowserStorage;\n"],"names":["options","_options","_type","IndexedDB","type","Storage","window","indexedDB","open","this","name","version","WebSQL","openDatabase","description","LocalStorage","localStorage","Cookies","document","cookie","store","storages","Object","assign","BrowserStorage","defaultOptions","_priority","priority","storage","Error","i","length","availableStores","isSupported","supportedStore","concat"],"mappings":"q2BACE,WAAYA,kBACLC,SAAWD,4BCCNA,4EACJA,aACDE,MAAQC,EAAUC,kBAHHC,2CAObC,OAAOC,UAAUC,KAAKC,KAAKR,SAASS,KAAMD,KAAKR,SAASU,4CAIxD,2DAIA,oCCdGX,4EACJA,aACDE,MAAQU,EAAOR,kBAHHC,2CAOVC,OAAOO,aAAaJ,KAAKR,SAASS,KAAMD,KAAKR,SAASU,QAASF,KAAKR,SAASa,YAAa,4CAI1F,wDAIA,oCCdGd,4EACJA,aACDE,MAAQa,EAAaX,kBAHHC,2CAOhBW,gDAIA,8DAIA,oCCdGhB,4EACJA,aACDE,MAAQe,EAAQb,kBAHHC,2CAOXa,SAASC,0CAIT,uDAIFC,iBCZLC,EAAW,GACfA,EAASN,EAAaX,MAAQW,EAC9BM,EAASlB,EAAUC,MAAQD,EAC3BkB,EAAST,EAAOR,MAAQQ,EACxBS,EAASJ,EAAQb,MAAQa,EAEzB,MAAiBI,+BCRHrB,kBACAA,GAAW,KACXsB,OAAOC,OAAOC,EAAeC,eAAgBzB,QAClD0B,UAAY1B,EAAQ2B,cACE,IAAhBlB,KAAKmB,QAAwB,MAAM,IAAIC,MAAM,yDACjD,IAAIpB,KAAKmB,QAAQ5B,0DAYnB,IAAI8B,EAAI,EAAGA,EAAIrB,KAAKkB,SAASI,OAAQD,IAAK,KACzCV,EAAQI,EAAeQ,gBAAgBvB,KAAKkB,SAASG,OACrDV,GAASA,EAAMa,cAAe,OAAOb,0CAVpCX,KAAKyB,yDAILzB,KAAKiB,UAAUS,OAAOX,EAAeC,eAAeE,2DAWpDN,+CAIA,UACK,CAAC,eAAgB,YAAa,SAAU,gBAC5C,oBACG,kBACI"}