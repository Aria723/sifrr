/*! Sifrr.Storage v0.0.4 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr */
var t=class{static parse(t){let e=t;if("string"==typeof t)try{return this.parse(JSON.parse(t))}catch(e){return t}else if(Array.isArray(t))e=[],t.forEach((t,r)=>{e[r]=this.parse(t)});else if("object"==typeof t){if(null===t)return null;e={};for(const r in t)e[r]=this.parse(t[r])}return e}static stringify(t){return"string"==typeof t?t:JSON.stringify(t)}};const e={}.constructor;var r=class{constructor(t={}){this._options=t,this.name=this._options.name,this.version=this._options.version,this.tableName=this.name+this.version,this.description=this._options.description,this.type=this.constructor.type}_parseKeyValue(t,r){if(void 0===r){if(Array.isArray(t))return t;if("string"==typeof t)return[t];if(t.constructor===e)return t;throw Error("Invalid Key")}if("string"==typeof t){let e={};return e[t]=r,e}throw Error("Invalid Key")}_select(t){return this.all().then(e=>{let r={};return t.forEach(t=>r[t]=e[t]),r})}_upsert(t){let e=this.table;for(let r in t)e[r]=t[r];this.table=e}_delete(t){let e=this.table;t.forEach(t=>delete e[t]),this.table=e}_clear(){this.table={}}_isEqual(t,e){return this.tableName==t.name+t.version&&this.type==e}isSupported(t=!0){return!(!t||"undefined"!=typeof window&&"undefined"!=typeof document)||!(!window||void 0===this.store)}keys(){return this.all().then(t=>Object.keys(t))}all(){return Promise.resolve(this._parsedData())}get(t){return Promise.resolve(this._select(this._parseKeyValue(t)))}set(t,e){return Promise.resolve(this._upsert(this._parseKeyValue(t,e)))}del(t){return Promise.resolve(this._delete(this._parseKeyValue(t)))}clear(){return Promise.resolve(this._clear())}static stringify(e){return t.stringify(e)}static parse(e){return t.parse(e)}};var s=class extends r{constructor(t){super(t)}_parsedData(){return this._tx("readonly","getAll").then(t=>this.parse(t))}_select(t){const e={},r=[];return t.forEach(t=>r.push(this._tx("readonly","get",t).then(r=>e[t]=this.parse(r)))),Promise.all(r).then(()=>e)}_upsert(t){const e=[];for(let r in t){const s=this._tx("readonly","get",r).then(e=>e&&e.key==r?this._tx("readwrite","put",{key:r,value:t[r]}):this._tx("readwrite","add",{key:r,value:t[r]}));e.push(s)}return Promise.all(e)}_delete(t){const e=[];return t.forEach(t=>e.push(this._tx("readwrite","delete",t))),Promise.all(e)}_clear(){return this._tx("readwrite","clear")}_tx(t,e,r){const s=this;return this._store=this._store||this.createStore(s.tableName),this._store.then(i=>new Promise((o,a)=>{const n=i.transaction(s.tableName,t).objectStore(s.tableName),l=n[e].call(n,r);l.onsuccess=(t=>o(t.target.result)),l.onerror=(t=>a(t.error))}))}get store(){return window.indexedDB}createStore(t){return new Promise((e,r)=>{const s=this.store.open(t,1);s.onupgradeneeded=(e=>{e.target.result.createObjectStore(t,{keyPath:"key"})}),s.onsuccess=(()=>e(s.result)),s.onerror=(()=>r(s.error))})}parse(t){const e={};return Array.isArray(t)?(t.forEach(t=>{e[t.key]=t.value}),e):t?t.value:void 0}static get type(){return"indexeddb"}};var i=class extends r{constructor(t){super(t),this.createStore()}_parsedData(){const t=this;return new Promise(e=>{this.store.transaction(function(r){r.executeSql(`SELECT * FROM ${t.tableName}`,[],(r,s)=>{e(t.parse(s))})})})}_select(t){const e=t.map(()=>"?").join(", ");return this.execSql(`SELECT key, value FROM ${this.tableName} WHERE key in (${e})`,t)}_upsert(t){const e=this.tableName;this.store.transaction(r=>{for(let s in t)r.executeSql(`INSERT OR IGNORE INTO ${e}(key, value) VALUES (?, ?)`,[s,t[s]]),r.executeSql(`UPDATE ${e} SET value = ? WHERE key = ?`,[this.constructor.stringify(t[s]),s])})}_delete(t){const e=this.tableName,r=t.map(()=>"?").join(", ");return this.execSql(`DELETE FROM ${e} WHERE key in (${r})`,t)}_clear(){const t=this.tableName;return this.execSql(`DELETE FROM ${t}`)}get store(){return window.openDatabase("bs",1,this._options.description,this._options.size)}createStore(){const t=this.tableName;if(window&&"function"==typeof window.openDatabase)return this.execSql(`CREATE TABLE IF NOT EXISTS ${t} (key unique, value)`)}execSql(t,e=[]){const r=this;return new Promise(s=>{r.store.transaction(function(i){i.executeSql(t,e,(t,e)=>{s(r.parse(e))})})})}parse(t){const e={},r=t.rows.length;for(let s=0;s<r;s++)e[t.rows.item(s).key]=this.constructor.parse(t.rows.item(s).value);return e}static get type(){return"websql"}};var o=class extends r{constructor(t){super(t)}_parsedData(){return this.table}get table(){return this.constructor.parse(this.store.getItem(this.tableName)||{})}set table(t){this.store.setItem(this.tableName,this.constructor.stringify(t))}get store(){return window.localStorage}static get type(){return"localstorage"}};var a=class extends r{constructor(t){super(t)}_parsedData(){return this.table}get table(){let t=this.store,e={};return t.split("; ").forEach(t=>{let[r,s]=t.split("=");e[r]=this.constructor.parse(s)}),e[this.tableName]||{}}set table(t){document.cookie=`${this.tableName}=${r.stringify(t)}; path=/`}get store(){return document.cookie}static get type(){return"cookies"}};var n=class extends r{constructor(t,e={}){super(t),this.table=r.parse(e)}_parsedData(){return this.table}_upsert(t){for(let e in t)this.table[e]=t[e]}get store(){return this.table}static get type(){return"jsonstorage"}};let l={};l[s.type]=s,l[i.type]=i,l[o.type]=o,l[a.type]=a,l[n.type]=n;var c=l;class u{constructor(t){return t="string"==typeof t?{priority:[t]}:t||{},this._options=Object.assign(this.constructor.defaultOptions,t),this.storage}get storage(){let t=this.supportedStore();if(void 0===t)throw Error("No available storage supported in this browser");let e=this.constructor._matchingInstance(this._options,t.type);if(e)return e;{let e=new t(this._options);return this.constructor._add(e),e}}get priority(){return this._options.priority.concat(["indexeddb","websql","localstorage","cookies","jsonstorage"])}supportedStore(){for(let t=0;t<this.priority.length;t++){let e=this.constructor.availableStores[this.priority[t]];if(e&&new e(this._options).isSupported())return e}}static _matchingInstance(t,e){let r,s=this.all,i=s.length;for(r=0;r<i;r++)if(s[r]._isEqual(t,e))return s[r];return!1}static _add(t){this.all.push(t)}static get defaultOptions(){return{priority:[],name:"SifrrStorage",version:1,description:"Sifrr Storage",size:5242880}}static json(t){return new n({},t)}}u.availableStores=c,u.all=[];export default u;
/*! (c) @aadityataparia */
