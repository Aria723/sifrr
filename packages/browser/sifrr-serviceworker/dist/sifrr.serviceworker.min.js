/*! Sifrr.Serviceworker v0.0.1-alpha - sifrr project */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e.Sifrr=e.Sifrr||{},e.Sifrr.Serviceworker=t())}(this,function(){"use strict";return class{constructor(e){this.options=Object.assign({version:1,fallbackCacheName:"fallbacks",defaultCacheName:"default",policies:{},fallbacks:{},precacheUrls:[]},e),this.options.policies.default=Object.assign(this.options.policies.default||{},{policy:"NETWORK_FIRST",cacheName:this.options.defaultCacheName}),this.options.fallbacks.default=this.options.fallbacks.default||"/offline.html"}precache(e=this.options.precacheUrls,t=this.options.fallbacks){const s=this;let o=[];e.forEach(e=>{let t=s.requestFromURL(e);return o.push(s.responseFromNetwork(t,s.findRegex(e,s.options.policies).cacheName||s.options.defaultCacheName))});for(let e of Object.values(t)){let t=this.requestFromURL(e);o.push(this.responseFromNetwork(t,this.options.fallbackCacheName))}return Promise.all(o)}setup(e=!0){let t=this;self.addEventListener("install",s=>{e&&self.skipWaiting(),s.waitUntil(t.precache())}),self.addEventListener("activate",()=>{const e="-v"+t.options.version;caches.keys().then(t=>t.filter(t=>t.indexOf(e)<0)).then(e=>Promise.all(e.map(e=>caches.delete(e)))).then(()=>self.clients.claim())}),self.addEventListener("fetch",e=>{const s=e.request,o=s.clone(),i=s.clone();"GET"===s.method&&e.respondWith(t.respondWithPolicy(s).then(e=>{if(!e.ok&&e.status>0&&t.findRegex(i.url,t.options.fallbacks))throw Error("response status "+e.status);return e}).catch(()=>t.respondWithFallback(o)))})}setupPushNotification(e="",t={body:""},s){self.addEventListener("push",function(s){let o={};s.data&&(o=s.data.json());const i=o.title||e,n=Object.assign(t,o);s.waitUntil(self.registration.showNotification(i,n))}),self.addEventListener("notificationclick",s)}respondWithFallback(e){const t=this.requestFromURL(this.findRegex(e.url,this.options.fallbacks));return this.responseFromCache(t,this.options.fallbackCacheName)}respondWithPolicy(e){const t=e.clone(),s=this.findRegex(e.url,this.options.policies),o=s.policy||"NETWORK_FIRST",i=s.cacheName||this.options.defaultCacheName;let n;switch(o){case"NETWORK_ONLY":n=this.responseFromNetwork(t,i,!1);break;case"CACHE_ONLY":n=this.responseFromCache(t,i).catch(()=>this.responseFromNetwork(e,i));break;case"NETWORK_FIRST":default:n=this.responseFromNetwork(t,i).catch(()=>this.responseFromCache(e,i))}return n}responseFromNetwork(e,t,s=!0){return caches.open(t+"-v"+this.options.version).then(t=>fetch(e).then(o=>(s&&t.put(e,o.clone()),o)))}responseFromCache(e,t){return caches.open(t+"-v"+this.options.version).then(t=>t.match(e)).then(t=>{if(t)return t;throw"Cache not found for "+e.url})}requestFromURL(e,t="GET"){return new Request(e,{method:t})}findRegex(e,t){for(let[s,o]of Object.entries(t))if(new RegExp(s).test(e))return o;return t.default}}});
/*! (c) @aadityataparia */
//# sourceMappingURL=sifrr.serviceworker.min.js.map
