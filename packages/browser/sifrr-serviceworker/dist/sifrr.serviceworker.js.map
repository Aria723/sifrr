{"version":3,"file":"sifrr.serviceworker.js","sources":["../src/sifrr.serviceworker.js"],"sourcesContent":["class SW {\n  constructor(options) {\n    this.options = Object.assign({\n      version: 1,\n      fallbackCacheName: 'fallbacks',\n      defaultCacheName: 'default',\n      policies: {},\n      fallbacks: {},\n      precacheUrls: []\n    }, options);\n    this.options.policies.default = Object.assign(this.options.policies.default || {}, {\n      policy: 'NETWORK_FIRST',\n      cacheName: this.options.defaultCacheName\n    });\n    this.options.fallbacks.default = this.options.fallbacks.default || '/offline.html';\n  }\n\n  precache(urls = this.options.precacheUrls, fbs = this.options.fallbacks) {\n    const me = this;\n    let promises = [];\n    urls.forEach(u => {\n      let req = me.requestFromURL(u);\n      return promises.push(me.responseFromNetwork(req, me.findRegex(u, me.options.policies).cacheName || me.options.defaultCacheName));\n    });\n    for (let value of Object.values(fbs)) {\n      let req = this.requestFromURL(value);\n      promises.push(this.responseFromNetwork(req, this.options.fallbackCacheName));\n    }\n    return Promise.all(promises);\n  }\n\n  setup() {\n    let me = this;\n    self.addEventListener('install', event => {\n      // replace old sw ASAP\n      self.skipWaiting();\n      event.waitUntil(me.precache());\n    });\n\n    self.addEventListener('activate', () => {\n      const version = '-v' + me.options.version;\n      // remove old version caches\n      caches.keys().then(cacheNames => {\n        return cacheNames.filter(cacheName => cacheName.indexOf(version) < 0);\n      }).then(cachesToDelete => {\n        return Promise.all(cachesToDelete.map(cacheToDelete => {\n          return caches.delete(cacheToDelete);\n        }));\n      }).then(() => self.clients.claim());\n    });\n\n    self.addEventListener('fetch', event => {\n      const request = event.request;\n      const otherReq = request.clone();\n      const oreq = request.clone();\n      if (request.method === 'GET') {\n        event.respondWith(me.respondWithPolicy(request).then(response => {\n          if (!response.ok && response.status > 0 && me.findRegex(oreq.url, me.options.fallbacks)) {\n            throw Error('response status ' + response.status);\n          }\n          return response;\n        }).catch(() => me.respondWithFallback(otherReq)));\n      }\n    });\n  }\n\n  respondWithFallback(request) {\n    const fallback = this.requestFromURL(this.findRegex(request.url, this.options.fallbacks));\n    return this.responseFromCache(fallback, this.options.fallbackCacheName);\n  }\n\n  respondWithPolicy(request) {\n    const newreq = request.clone();\n    const config = this.findRegex(request.url, this.options.policies);\n    const policy = config.policy || 'NETWORK_FIRST';\n    const cacheName = config.cacheName || this.options.defaultCacheName;\n\n    let resp;\n    switch (policy) {\n    case 'NETWORK_ONLY':\n      resp = this.responseFromNetwork(newreq, cacheName, false);\n      break;\n    case 'CACHE_FIRST', 'CACHE_ONLY':\n      resp = this.responseFromCache(newreq, cacheName)\n        .catch(() => this.responseFromNetwork(request, cacheName));\n      break;\n    case 'NETWORK_FIRST':\n      resp = this.responseFromNetwork(newreq, cacheName)\n        .catch(() => this.responseFromCache(request, cacheName));\n      break;\n    default:\n      resp = this.responseFromNetwork(newreq, cacheName)\n        .catch(() => this.responseFromCache(request, cacheName));\n      break;\n    }\n    return resp;\n  }\n\n  responseFromNetwork(request, cache, putInCache = true) {\n    return caches.open(cache + '-v' + this.options.version).then(cache => fetch(request).then(response => {\n      if (putInCache) cache.put(request, response.clone());\n      return response;\n    }));\n  }\n\n  responseFromCache(request, cache) {\n    return caches.open(cache + '-v' + this.options.version).then(cache => cache.match(request)).then(resp => {\n      if (resp) return resp;\n      else throw 'Cache not found for ' + request.url;\n    });\n  }\n\n  requestFromURL(url, method = 'GET') {\n    return new Request(url, {\n      method: method\n    });\n  }\n\n  findRegex(url, policies) {\n    for (let [key, value] of Object.entries(policies)) {\n      const regex = new RegExp(key);\n      if (regex.test(url)) return value;\n    }\n    return policies['default'];\n  }\n}\n\nmodule.exports = SW;\n"],"names":["SW","constructor","options","Object","assign","version","fallbackCacheName","defaultCacheName","policies","fallbacks","precacheUrls","default","policy","cacheName","precache","urls","fbs","me","promises","forEach","u","req","requestFromURL","push","responseFromNetwork","findRegex","value","values","Promise","all","setup","self","addEventListener","event","skipWaiting","waitUntil","caches","keys","then","cacheNames","filter","indexOf","cachesToDelete","map","cacheToDelete","delete","clients","claim","request","otherReq","clone","oreq","method","respondWith","respondWithPolicy","response","ok","status","url","Error","catch","respondWithFallback","fallback","responseFromCache","newreq","config","resp","cache","putInCache","open","fetch","put","match","Request","key","entries","regex","RegExp","test"],"mappings":"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"}