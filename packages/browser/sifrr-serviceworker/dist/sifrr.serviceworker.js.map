{"version":3,"file":"sifrr.serviceworker.js","sources":["../src/sifrr.serviceworker.js"],"sourcesContent":["const CACHE_VERSION = '1';\nconst POLICIES = {\n  'default': {\n    type: 'NETWORK_FIRST',\n    cache: 'other'\n  }\n};\n\nconst FALLBACK_CACHE = 'fallbacks';\nconst FALLBACKS = {\n  'default': './404.html'\n};\n\nconst PRECACHE_URLS = [];\n\nfunction setupSifrrSW() {\n  self.addEventListener('install', event => {\n    self.skipWaiting(); // replace sw ASAP\n    event.waitUntil(precache(PRECACHE_URLS, FALLBACKS));\n  });\n\n  self.addEventListener('activate', () => {\n    let currentCaches = [FALLBACK_CACHE + '-v' + CACHE_VERSION];\n    for (let [, value] of Object.entries(POLICIES)) {\n      currentCaches.push(value.cache + '-v' + CACHE_VERSION);\n    }\n    caches.keys().then(cacheNames => {\n      return cacheNames.filter(cacheName => !currentCaches.includes(cacheName));\n    }).then(cachesToDelete => {\n      return Promise.all(cachesToDelete.map(cacheToDelete => {\n        return caches.delete(cacheToDelete);\n      }));\n    }).then(() => self.clients.claim());\n  }); // remove old caches versions and add new ones\n\n  self.addEventListener('fetch', event => {\n    let request = event.request;\n    let otherReq = request.clone();\n    let oreq = request.clone();\n    if (request.method === 'GET') {\n      event.respondWith(respondWithPolicy(request).then(response => {\n        if (!response.ok && response.status > 0 && findRegex(oreq.url, FALLBACKS)) {\n          throw Error('response status ' + response.status);\n        }\n        return response;\n      }).catch(() => respondWithFallback(otherReq)));\n    }\n  });\n}\n\nfunction findRegex (url, obj) {\n  for (let [key, value] of Object.entries(obj)) {\n    const regex = new RegExp(key);\n    if (url.match(regex)) return value;\n  }\n  return obj['default'];\n}\n\nfunction respondWithPolicy (request) {\n  let new_request = request.clone();\n  const { type, cache } = findRegex(request.url, POLICIES) || {\n    type: 'default',\n    cache: 'extra'\n  };\n  let resp;\n  switch (type) {\n  case 'NETWORK_ONLY':\n    resp = fromNetwork(new_request, cache);\n    break;\n  case 'CACHE_ONLY':\n    resp = fromCache(new_request, cache);\n    break;\n  case 'CACHE_FIRST':\n    resp = fromCache(new_request, cache).catch(() => fromNetwork(request, cache));\n    break;\n  case 'NETWORK_FIRST':\n    resp = fromNetwork(new_request, cache).catch(() => fromCache(request, cache));\n    break;\n  default:\n    resp = fromNetwork(new_request, cache).catch(() => fromCache(request, cache));\n    break;\n  }\n  return resp;\n}\n\nfunction respondWithFallback (request) {\n  const fallback = findRegex(request.url, FALLBACKS);\n  const fb = new Request(fallback);\n  return fromCache(fb, FALLBACK_CACHE);\n}\n\nfunction requestFromURL (url) {\n  return new Request(url, {\n    method: 'GET'\n  });\n}\n\nfunction precache (urls, fbs) {\n  let promises = [];\n  urls.forEach(u => {\n    let req = requestFromURL(u);\n    return promises.push(fromNetwork(req, findRegex(u, POLICIES).cache));\n  });\n  for (let [, value] of Object.entries(fbs)) {\n    let req = requestFromURL(value);\n    promises.push(fromNetwork(req, FALLBACK_CACHE));\n  }\n  return Promise.all(promises);\n}\n\nfunction fromCache (request, cache) {\n  fromNetwork(request.clone(), cache);\n  return caches.open(cache + '-v' + CACHE_VERSION).then(cache => cache.match(request)).then(resp => {\n    if (resp) return resp;\n    else throw 'Cache not found for ' + request.url;\n  });\n}\n\nfunction fromNetwork (request, cache) {\n  return caches.open(cache + '-v' + CACHE_VERSION).then(cache => fetch(request).then(response => cache.put(request, response.clone()).then(() => response)));\n}\n\nmodule.exports = setupSifrrSW();\n"],"names":["CACHE_VERSION","POLICIES","type","cache","FALLBACK_CACHE","FALLBACKS","PRECACHE_URLS","setupSifrrSW","self","addEventListener","event","skipWaiting","waitUntil","precache","currentCaches","value","Object","entries","push","caches","keys","then","cacheNames","filter","cacheName","includes","cachesToDelete","Promise","all","map","cacheToDelete","delete","clients","claim","request","otherReq","clone","oreq","method","respondWith","respondWithPolicy","response","ok","status","findRegex","url","Error","catch","respondWithFallback","obj","key","regex","RegExp","match","new_request","resp","fromNetwork","fromCache","fallback","fb","Request","requestFromURL","urls","fbs","promises","forEach","u","req","open","fetch","put"],"mappings":"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"}