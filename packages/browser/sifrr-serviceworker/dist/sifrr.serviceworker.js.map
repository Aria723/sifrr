{"version":3,"file":"sifrr.serviceworker.js","sources":["../src/sifrr.serviceworker.js"],"sourcesContent":["class SW {\n  constructor(options) {\n    this.options = Object.assign({\n      version: 1,\n      fallbackCacheName: 'fallbacks',\n      defaultCacheName: 'default',\n      policies: {},\n      fallbacks: {},\n      precacheUrls: []\n    }, options);\n    this.options.policies.default = Object.assign(this.options.policies.default || {}, {\n      policy: 'NETWORK_FIRST',\n      cacheName: this.options.defaultCacheName\n    });\n  }\n\n  precache(urls = this.options.precacheUrls, fbs = this.options.fallbacks) {\n    const me = this;\n    let promises = [];\n    urls.forEach(u => {\n      let req = me.requestFromURL(u);\n      return promises.push(me.responseFromNetwork(req, me.findRegex(u, me.options.policies).cacheName));\n    });\n    for (let value of Object.values(fbs)) {\n      let req = this.requestFromURL(value);\n      promises.push(this.responseFromNetwork(req, this.options.fallbackCacheName));\n    }\n    return Promise.all(promises);\n  }\n\n  setup(skipWaiting = true) {\n    let me = this;\n    self.addEventListener('install', event => {\n      // replace old sw ASAP\n      if (skipWaiting) self.skipWaiting();\n      event.waitUntil(me.precache());\n    });\n\n    self.addEventListener('activate', () => {\n      const version = '-v' + me.options.version;\n      // remove old version caches\n      caches.keys().then(cacheNames => {\n        return cacheNames.filter(cacheName => cacheName.indexOf(version) < 0);\n      }).then(cachesToDelete => {\n        return Promise.all(cachesToDelete.map(cacheToDelete => {\n          return caches.delete(cacheToDelete);\n        }));\n      }).then(() => self.clients.claim());\n    });\n\n    self.addEventListener('fetch', event => {\n      const request = event.request;\n      const otherReq = request.clone();\n      const oreq = request.clone();\n      if (request.method === 'GET') {\n        event.respondWith(me.respondWithPolicy(request).then(response => {\n          if (!response.ok && response.status > 0 && me.findRegex(oreq.url, me.options.fallbacks)) {\n            throw Error('response status ' + response.status);\n          }\n          return response;\n        }).catch((e) => me.respondWithFallback(otherReq, e)));\n      }\n    });\n  }\n\n  setupPushNotification(defaultTitle = '', defaultOptions = { body: '' }, onNotificationClick) {\n    self.addEventListener('push', function(event) {\n      console.log(event);\n\n      let data = {};\n      if (event.data) {\n        data = event.data.json();\n      }\n\n      const title = data.title || defaultTitle;\n      const options = Object.assign(defaultOptions, data);\n      for (let k in options) {\n        if (k.indexOf('on') === 0) options[k] = new Function(options[k]);\n        console.log(k, options[k]);\n      }\n\n      event.waitUntil(self.registration.showNotification(title, options));\n    });\n\n    self.addEventListener('notificationclick', onNotificationClick);\n  }\n\n  respondWithFallback(request, error) {\n    const fallback = this.requestFromURL(this.findRegex(request.url, this.options.fallbacks));\n    if (fallback !== undefined) {\n      return this.responseFromCache(fallback, this.options.fallbackCacheName);\n    } else {\n      throw error;\n    }\n  }\n\n  respondWithPolicy(request) {\n    const req1 = request.clone();\n    const req2 = request.clone();\n    const config = this.findRegex(request.url, this.options.policies);\n    const policy = config.policy;\n    const cacheName = config.cacheName || this.options.defaultCacheName;\n\n    let resp;\n    switch (policy) {\n    case 'NETWORK_ONLY':\n      resp = this.responseFromNetwork(req1, cacheName, false);\n      break;\n    case 'CACHE_FIRST':\n    case 'CACHE_ONLY':\n      resp = this.responseFromCache(req1, cacheName)\n        .catch(() => this.responseFromNetwork(request, cacheName));\n      break;\n    case 'CACHE_AND_UPDATE':\n      resp = this.responseFromCache(req1, cacheName)\n        .catch(() => this.responseFromNetwork(request, cacheName));\n      this.responseFromNetwork(req2, cacheName);\n      break;\n    default:\n      resp = this.responseFromNetwork(req1, cacheName)\n        .catch(() => this.responseFromCache(request, cacheName));\n      break;\n    }\n    return resp;\n  }\n\n  responseFromNetwork(request, cache, putInCache = true) {\n    return caches.open(cache + '-v' + this.options.version).then(cache => fetch(request).then(response => {\n      if (putInCache) cache.put(request, response.clone());\n      return response;\n    }));\n  }\n\n  responseFromCache(request, cache) {\n    return caches.open(cache + '-v' + this.options.version).then(cache => cache.match(request)).then(resp => {\n      if (resp) return resp;\n      else throw 'Cache not found for ' + request.url;\n    });\n  }\n\n  requestFromURL(url, method = 'GET') {\n    return new Request(url, {\n      method: method\n    });\n  }\n\n  findRegex(url, policies) {\n    for (let [key, value] of Object.entries(policies)) {\n      const regex = new RegExp(key);\n      if (regex.test(url)) return value;\n    }\n    return policies['default'];\n  }\n}\n\nmodule.exports = SW;\n"],"names":["SW","constructor","options","Object","assign","version","fallbackCacheName","defaultCacheName","policies","fallbacks","precacheUrls","default","policy","cacheName","precache","urls","fbs","me","promises","forEach","u","req","requestFromURL","push","responseFromNetwork","findRegex","value","values","Promise","all","setup","skipWaiting","self","addEventListener","event","waitUntil","caches","keys","then","cacheNames","filter","indexOf","cachesToDelete","map","cacheToDelete","delete","clients","claim","request","otherReq","clone","oreq","method","respondWith","respondWithPolicy","response","ok","status","url","Error","catch","e","respondWithFallback","setupPushNotification","defaultTitle","defaultOptions","body","onNotificationClick","console","log","data","json","title","k","Function","registration","showNotification","error","fallback","undefined","responseFromCache","req1","req2","config","resp","cache","putInCache","open","fetch","put","match","Request","key","entries","regex","RegExp","test"],"mappings":"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"}