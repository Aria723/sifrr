{"version":3,"file":"sifrr.dom.min.js","sources":["../src/utils/url.js","../src/dom/update.js","../src/utils/json.js","../src/dom/constants.js","../src/dom/makeequal.js","../src/dom/ref.js","../src/dom/parser.js","../../sifrr-fetch/dist/sifrr.fetch.js","../src/dom/loader.js","../src/dom/simpleelement.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js"],"sourcesContent":["const URLExt = {\n  absolute: (base, relative) => {\n    let stack = base.split('/'),\n      parts = relative.split('/');\n    stack.pop();\n    for (let i = 0; i < parts.length; i++) {\n      if (parts[i] == '.')\n        continue;\n      if (parts[i] == '..')\n        stack.pop();\n      else\n        stack.push(parts[i]);\n    }\n    return stack.join('/');\n  },\n  getRoutes: (url) => {\n    if (url[0] != '/') {\n      url = '/' + url;\n    }\n    let qIndex = url.indexOf('?');\n    if (qIndex != -1) {\n      url = url.substring(0, qIndex);\n    }\n    return url.split('/');\n  }\n};\n\nmodule.exports = URLExt;\n","// Attribute related gotchas\nfunction updateAttribute(element, name, newValue) {\n  if (name === 'class') {\n    const fromValue = element.className;\n    if (fromValue != newValue) {\n      // values are always cast to strings\n      if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n        element.className = '';\n      } else {\n        element.className = newValue;\n      }\n    }\n  } else {\n    const fromValue = element.getAttribute(name);\n    if (fromValue != newValue) {\n      // values are always cast to strings\n      if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n        if (fromValue) element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, newValue);\n      }\n    }\n\n    // select's value doesn't change on changing value attribute\n    if (element.nodeName == 'SELECT' && name == 'value') element.value = newValue;\n  }\n}\n\nmodule.exports = {\n  updateAttribute: updateAttribute,\n};\n","const Json = {\n  parse: (data) => {\n    let ans = {};\n    if (typeof data == 'string') {\n      try {\n        ans = JSON.parse(data);\n      } catch(e) {\n        return data;\n      }\n      return Json.parse(ans);\n    } else if (Array.isArray(data)) {\n      ans = [];\n      data.forEach((v, i) => {\n        ans[i] = Json.parse(v);\n      });\n    } else if (typeof data == 'object') {\n      for (const k in data) {\n        ans[k] = Json.parse(data[k]);\n      }\n    } else {\n      return data;\n    }\n    return ans;\n  },\n  stringify: (data) => {\n    if (typeof data == 'string') {\n      return data;\n    } else {\n      return JSON.stringify(data);\n    }\n  },\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    return true;\n  },\n  deepClone: (json) => {\n    if (Array.isArray(json)) return json.map((i) => Json.deepClone(i));\n    if (typeof json !== 'object' || json === null) return json;\n    let clone = {};\n    for (let key in json) {\n      clone[key] = Json.deepClone(json[key]);\n    }\n    return clone;\n  }\n};\n\nmodule.exports = Json;\n","module.exports = {\n  SIFRR_NODE: window.document.createElement('template'),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1\n};\n","const { updateAttribute } = require('./update');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reuseNodes.js\nfunction makeChildrenEqual(parent, newChildren) {\n  // Lesser children now\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL;\n    while(i < newL) {\n      parent.appendChild(newChildren[i]);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (newNode === null) return oldNode;\n  if (newNode.type === 'stateChange') {\n    if (!shallowEqual(oldNode.state, newNode.state)) {\n      oldNode.state = newNode.state;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, newNode.childNodes);\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual: makeEqual,\n  makeChildrenEqual: makeChildrenEqual\n};\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(document, NodeFilter.SHOW_ALL, null, false);\nTREE_WALKER.roll = function(n, filter = false) {\n  let node = this.currentNode;\n  while(--n) {\n    if (filter && filter(node)){\n      node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n    } else node = TREE_WALKER.nextNode();\n  }\n  return node;\n};\n\nfunction collect(element, stateMap = element.stateMap, filter) {\n  const refs = [];\n  TREE_WALKER.currentNode = element;\n  stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n  return refs;\n}\n\nclass Ref {\n  constructor(idx, ref) {\n    this.idx = idx;\n    this.ref = ref;\n  }\n}\n\nfunction create(node, fxn, filter = false) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    if (ref = fxn(node)) {\n      indices.push(new Ref(idx+1, ref));\n      idx = 1;\n    } else {\n      idx++;\n    }\n    if (filter && filter(node)){\n      node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n    } else node = TREE_WALKER.nextNode();\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  walker: TREE_WALKER,\n  collect: collect,\n  create: create,\n  klass: Ref\n};\n","const { makeChildrenEqual } = require('./makeequal');\nconst { updateAttribute } = require('./update');\nconst { collect, create } = require('./ref');\nconst { SIFRR_NODE, TEXT_NODE, COMMENT_NODE, ELEMENT_NODE } = require('./constants');\n\nfunction isHtml(el) {\n  return (el.dataset && el.dataset.sifrrHtml == 'true') ||\n    el.contentEditable == 'true' ||\n    el.nodeName == 'TEXTAREA' ||\n    el.nodeName == 'STYLE' ||\n    (el.dataset && el.dataset.sifrrRepeat);\n}\n\nfunction creator(el) {\n  if (el.nodeType === TEXT_NODE) {\n    // text node\n    const x = el.nodeValue;\n    if (x.indexOf('${') > -1) return {\n      html: false,\n      text: x\n    };\n  } else if (el.nodeType === COMMENT_NODE && el.nodeValue.trim()[0] == '$') {\n    // comment\n    return {\n      html: false,\n      text: el.nodeValue.trim()\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const ref = {};\n    // Html ?\n    if (isHtml(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        ref.html = true;\n        ref.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n      }\n    }\n    // attributes\n    const attrs = el.attributes || [], l = attrs.length;\n    const attrStateMap = {};\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.value.indexOf('${') >= 0) {\n        attrStateMap[attribute.name] = attribute.value;\n      }\n    }\n    if (Object.keys(attrStateMap).length > 0) ref.attributes = attrStateMap;\n\n    if (Object.keys(ref).length > 0) return ref;\n  }\n  return 0;\n}\n\nconst Parser = {\n  collectRefs: (el, stateMap) => collect(el, stateMap, isHtml),\n  createStateMap: (element) => {\n    let node;\n    if (element.useShadowRoot) node = element.shadowRoot;\n    else node = element;\n\n    return create(node, creator, isHtml);\n  },\n  updateState: (element) => {\n    if (!element._refs) {\n      return false;\n    }\n    // Update nodes\n    const l = element._refs.length;\n    for (let i = 0; i < l; i++) {\n      const data = element.constructor.stateMap[i].ref;\n      const dom = element._refs[i];\n\n      // update attributes\n      if (data.attributes) {\n        for(let key in data.attributes) {\n          const val = Parser.evaluateString(data.attributes[key], element);\n          updateAttribute(dom, key, val);\n        }\n      }\n\n      if (data.html === undefined) continue;\n\n      // update element\n      const newValue = Parser.evaluateString(data.text, element);\n      if (!newValue) { dom.textContent = ''; continue; }\n\n      if (data.html) {\n        // html node\n        let children;\n        if (Array.isArray(newValue)) {\n          children = newValue;\n        } else if (newValue.nodeType) {\n          children = [newValue];\n        } else {\n          const docFrag = SIFRR_NODE.cloneNode();\n          // Replace html tags in input from input/contenteditable/textarea\n          docFrag.innerHTML = newValue.toString()\n            // All closing tags\n            .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n            // Self closing tags (void elements) from https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n            .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n          children = Array.prototype.slice.call(docFrag.childNodes);\n        }\n        if (children.length < 1) dom.textContent = '';\n        else makeChildrenEqual(dom, children);\n      } else {\n        // text node\n        if (dom.nodeValue != newValue) {\n          dom.nodeValue = newValue;\n        }\n      }\n\n    }\n\n    element.onStateChange(element.state);\n  },\n  twoWayBind: (e) => {\n    const target = e.path ? e.path[0] : e.target;\n    if (!target.dataset.sifrrBind) return;\n    const value = target.value === undefined ? target.innerHTML : target.value;\n    let state = {};\n    state[target.dataset.sifrrBind] = value;\n    target.getRootNode().host.state = state;\n  },\n  evaluateString: (string, element) => {\n    if (string.indexOf('${') < 0) return string;\n    string = string.trim();\n    if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n    return replacer('`' + string + '`');\n\n    function replacer(match) {\n      if (match[0] == '$') match = match.slice(2, -1);\n      let f;\n      if (match.indexOf('return ') >= 0) {\n        f = new Function(match).bind(element);\n      } else {\n        f = new Function('return ' + match).bind(element);\n      }\n      return f();\n    }\n  }\n};\n\nmodule.exports = Parser;\n","/*! Sifrr.Fetch v0.0.1-alpha - sifrr project - 2018/12/26 2:38:14 UTC */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Fetch = factory());\n}(this, (function () { 'use strict';\n\n  class Request {\n    constructor(type, url, options) {\n      this.type = type;\n      this._options = options;\n      this._url = url;\n    }\n    get response() {\n      return window.fetch(this.url, this.options).then(resp => {\n        let contentType = resp.headers.get('content-type');\n        if (contentType && contentType.includes('application/json')) {\n          resp = resp.json();\n        }\n        if (resp.ok) {\n          return resp;\n        } else {\n          let error = Error(resp.statusText);\n          error.response = resp;\n          throw error;\n        }\n      });\n    }\n    get url() {\n      let params = delete this._options.params;\n      if (params && Object.keys(params).length > 0) {\n        return this._url + '?' + Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n      } else {\n        return this._url;\n      }\n    }\n    get options() {\n      return Object.assign(this._options, {\n        method: this.type,\n        headers: Object.assign({\n          'accept': 'application/json'\n        }, this._options.headers || {}),\n        mode: 'cors',\n        redirect: 'follow'\n      });\n    }\n  }\n  var request = Request;\n\n  class SifrrFetch {\n    static get(url, options = {}) {\n      return new request('GET', url, options).response;\n    }\n    static post(url, options = {}) {\n      return new request('POST', url, options).response;\n    }\n    static put(url, options = {}) {\n      return new request('PUT', url, options).response;\n    }\n    static delete(url, options = {}) {\n      return new request('DELETE', url, options).response;\n    }\n    static file(url, options = {}) {\n      options.headers = options.headers || {};\n      options.headers.accept = options.headers.accept || '*/*';\n      return new request('GET', url, options).response;\n    }\n  }\n  var sifrr_fetch = SifrrFetch;\n\n  return sifrr_fetch;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.fetch.js.map\n","const fetch = require('@sifrr/fetch');\n\nclass Loader {\n  constructor(elemName, config = {}) {\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.config = config;\n    this.constructor.urls[elemName] = this.htmlUrl;\n  }\n\n  get html() {\n    const me = this;\n    return fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => new window.DOMParser().parseFromString(file, 'text/html'))\n      .then((html) => {\n        Loader.add(me.elementName, html.querySelector('template'));\n        return html;\n      });\n  }\n\n  get htmlUrl() {\n    return this.config.url || `${this.config.baseUrl || '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  executeScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        const fxn = new Function(script.text).bind(window);\n        fxn();\n      });\n    });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\nLoader.urls = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst { SIFRR_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/index.js\nfunction creator(node) {\n  if (node.nodeType !== 3) {\n    if (node.attributes !== undefined) {\n      const attrs = Array.from(node.attributes), l = attrs.length;\n      const ret = [];\n      for (let i = 0; i < l; i++) {\n        const avalue = attrs[i].value;\n        if (avalue[0] === '$') {\n          ret.push({\n            name: attrs[i].name,\n            text: avalue.slice(2, -1)\n          });\n        }\n      }\n      if (ret.length > 0) return ret;\n    }\n    return 0;\n  } else {\n    let nodeData = node.nodeValue;\n    if (nodeData[0] === '$') {\n      node.nodeValue = '';\n      return nodeData.slice(2, -1);\n    }\n    return 0;\n  }\n}\n\nfunction updateState(simpleEl) {\n  const doms = simpleEl._refs, refs = simpleEl.stateMap, l = refs.length;\n  const newState = simpleEl.state, oldState = simpleEl._oldState;\n  for (let i = 0; i < l; i++) {\n    const data = refs[i].ref, dom = doms[i];\n    if (Array.isArray(data)) {\n      const l = data.length;\n      for (let i = 0; i < l; i++) {\n        const attr = data[i];\n        if (oldState[attr.text] !== newState[attr.text]) {\n          if (attr.name === 'class') dom.className = newState[attr.text] || '';\n          else dom.setAttribute(attr.name, newState[attr.text]);\n        }\n      }\n    } else {\n      if (oldState[data] != newState[data]) dom.nodeValue = newState[data];\n    }\n  }\n}\n\nfunction SimpleElement(content, defaultState) {\n  if (typeof content === 'string') {\n    SIFRR_NODE.innerHTML = content;\n    content = SIFRR_NODE.content.firstElementChild || SIFRR_NODE.content.firstChild;\n  }\n  if (content.isSifrr && content.isSifrr()) return content;\n  content.stateMap = create(content, creator);\n  content._refs = collect(content, content.stateMap);\n  Object.defineProperty(content, 'state', {\n    get: () => content._state,\n    set: (v) => {\n      content._oldState = Object.assign({}, content._state);\n      content._state = Object.assign(content._state || {}, v);\n      updateState(content);\n    }\n  });\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep) {\n    const clone = content.cloneNode(deep);\n    clone.stateMap = content.stateMap;\n    clone._refs = collect(clone, content.stateMap);\n    Object.defineProperty(clone, 'state', {\n      get: () => clone._state,\n      set: (v) => {\n        clone._oldState = Object.assign({}, clone._state);\n        clone._state = Object.assign(clone._state || {}, v);\n        updateState(clone);\n      }\n    });\n    if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const Parser = require('./parser');\nconst JsonExt = require('../utils/json');\nconst Loader = require('./loader');\nconst SimpleElement = require('./simpleelement');\n\nclass Element extends window.HTMLElement {\n  static get observedAttributes() {\n    return ['data-sifrr-state'].concat(this.observedAttrs());\n  }\n\n  static observedAttrs() {\n    return [];\n  }\n\n  static get template() {\n    return Loader.all[this.elementName];\n  }\n\n  static get stateMap() {\n    this._stateMap = this._stateMap || Parser.createStateMap(this.template.content);\n    return this._stateMap;\n  }\n\n  static get elementName() {\n    return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  constructor() {\n    super();\n    // this._oldState = {};\n    this._state = Object.assign({}, this.constructor.defaultState, this.state);\n    const content = this.constructor.template.content.cloneNode(true);\n    this._refs = Parser.collectRefs(content, this.constructor.stateMap);\n    this.useShadowRoot = this.constructor.template.dataset.sr === 'false' ? false : !!window.document.head.attachShadow && this.constructor.useShadowRoot;\n    if (this.useShadowRoot) {\n      this.attachShadow({\n        mode: 'open'\n      });\n      this.shadowRoot.appendChild(content);\n      this.shadowRoot.addEventListener('change', Parser.twoWayBind);\n    } else this.appendChild(content);\n  }\n\n  connectedCallback() {\n    if(!this.hasAttribute('data-sifrr-state')) Parser.updateState(this);\n    this.onConnect();\n  }\n\n  onConnect() {}\n\n  disconnectedCallback() {\n    if (this.useShadowRoot) this.shadowRoot.removeEventListener('change', Parser.twoWayBind);\n    this.onDisconnect();\n  }\n\n  onDisconnect() {}\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    if (attrName === 'data-sifrr-state') {\n      this.state = JsonExt.parse(newVal);\n    }\n    this.onAttributeChange();\n  }\n\n  onAttributeChange() {}\n\n  get state() {\n    // return JsonExt.deepClone(this._state);\n    return this._state;\n  }\n\n  set state(v) {\n    // this._oldState = this.state;\n    Object.assign(this._state, v);\n    Parser.updateState(this);\n  }\n\n  onStateChange() {}\n\n  isSifrr(name = null) {\n    if (name) return name === this.constructor.elementName;\n    else return true;\n  }\n\n  sifrrClone(deep) {\n    const clone = this.cloneNode(deep);\n    clone.state = this.state;\n    return clone;\n  }\n\n  clearState() {\n    // this._oldState = this.state;\n    this._state = {};\n    Parser.updateState(this);\n  }\n\n  qs(args, sr = true) {\n    if (this.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n    else return this.querySelector(args);\n  }\n\n  qsAll(args, sr = true) {\n    if (this.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n    else return this.querySelectorAll(args);\n  }\n\n  static addArrayToDom(key, template) {\n    this._arrayToDom = this._arrayToDom || {};\n    // state of simple element is single array item, compatible with sifrr element\n    this._arrayToDom[key] = SimpleElement(template);\n  }\n\n  arrayToDom(key, newState = this.state[key]) {\n    this._domL = this._domL || {};\n    const oldL = this._domL[key] || 0;\n    const domArray = [];\n    const newL = newState.length;\n    for (let i = 0; i < newL; i++) {\n      if (i < oldL) {\n        domArray.push({ type: 'stateChange', state: newState[i] });\n      } else {\n        const el = this.constructor._arrayToDom[key].sifrrClone(true);\n        el.state = newState[i];\n        domArray.push(el);\n      }\n    }\n    this._domL[key] = newL;\n    return domArray;\n  }\n}\n\nmodule.exports = Element;\n","// Taken from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    let dom = e.path ? e.path[0] : e.target;\n    while(dom) {\n      const eventHandler = dom[`$${name}`];\n      if (eventHandler) {\n        eventHandler(e);\n      }\n      cssMatchEvent(e, name, dom);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.document.addEventListener(name, event => nativeToSyntheticEvent(event, name), { capture: true, passive: true });\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  }\n};\n\nmodule.exports = Event;\n","const UrlExt = require('./utils/url');\n\n// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.makeEqual = require('./dom/makeequal');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\n// Register Custom Element Function\nSifrrDom.register = function(Element) {\n  Element.useShadowRoot = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    window.console.warn('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    window.console.warn(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    window.console.warn(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.warn(`Error creating Custom Element: ${name} - ${error}`);\n      return false;\n    }\n  }\n  return false;\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  SifrrDom.config = Object.assign({\n    baseUrl: '/',\n    useShadowRoot: true\n  }, config);\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, config = { baseUrl: SifrrDom.config.baseUrl }) {\n  return new Promise((res) => {\n    let loader = new SifrrDom.Loader(elemName, config);\n    loader.executeScripts().then(() => res());\n  });\n};\n\n// Relative path to element html\nSifrrDom.relativeTo = function(elemName, relativeUrl) {\n  if (typeof elemName === 'string') return UrlExt.absolute(SifrrDom.Loader.urls[elemName], relativeUrl);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["base","relative","stack","split","parts","pop","i","length","push","join","url","qIndex","indexOf","substring","element","name","newValue","className","fromValue","getAttribute","setAttribute","removeAttribute","nodeName","value","Json","data","ans","JSON","parse","e","Array","isArray","forEach","v","k","stringify","a","b","key","json","map","deepClone","clone","window","document","createElement","updateAttribute","require$$0","shallowEqual","require$$1","TEXT_NODE","COMMENT_NODE","require$$2","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","l","Math","min","item","head","firstChild","makeEqual","nextSibling","oldNode","newNode","type","state","replaceWith","nodeType","attr","oldAttrs","attributes","newAttrs","j","hasAttribute","specified","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","roll","n","filter","node","this","currentNode","parentNode","nextNode","Ref","idx","ref","stateMap","refs","x","fxn","indices","collect","create","SIFRR_NODE","ELEMENT_NODE","require$$3","isHtml","el","dataset","sifrrHtml","contentEditable","sifrrRepeat","creator","nodeValue","trim","innerHTML","html","text","replace","attrs","attrStateMap","attribute","Object","keys","Parser","useShadowRoot","shadowRoot","_refs","constructor","dom","val","evaluateString","undefined","children","docFrag","cloneNode","toString","prototype","slice","call","textContent","onStateChange","target","path","sifrrBind","getRootNode","host","string","match","replacer","f","Function","bind","request","module","options","_options","_url","fetch","then","resp","contentType","headers","get","includes","ok","error","Error","statusText","response","params","encodeURIComponent","assign","accept","Loader","elemName","config","all","elementName","urls","htmlUrl","me","file","DOMParser","parseFromString","add","querySelector","baseUrl","querySelectorAll","script","instance","_all","from","ret","avalue","nodeData","updateState","simpleEl","doms","newState","oldState","_oldState","content","defaultState","firstElementChild","isSifrr","defineProperty","_state","sifrrClone","deep","HTMLElement","concat","observedAttrs","_stateMap","createStateMap","template","toLowerCase","collectRefs","sr","attachShadow","addEventListener","twoWayBind","onConnect","removeEventListener","onDisconnect","attrName","oldVal","newVal","JsonExt","onAttributeChange","args","_arrayToDom","SimpleElement","_domL","domArray","SYNTHETIC_EVENTS","cssMatchEvent","callEach","fxns","css","matches","event","Promise","resolve","eventHandler","nativeToSyntheticEvent","capture","passive","splice","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","require$$4","require$$5","register","customElements","console","warn","define","elements","setup","addListener","load","res","executeScripts","relativeTo","relativeUrl","UrlExt","absolute"],"mappings":"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"}