{"version":3,"file":"sifrr.dom.min.js","sources":["../src/utils/url.js","../src/utils/json.js","../src/dom/update.js","../src/dom/constants.js","../src/dom/makeequal.js","../src/dom/ref.js","../src/dom/parser.js","../../sifrr-fetch/dist/sifrr.fetch.js","../src/dom/loader.js","../src/dom/simpleelement.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js"],"sourcesContent":["const URLExt = {\n  absolute: (base, relative) => {\n    let stack = base.split('/'),\n      parts = relative.split('/');\n    stack.pop();\n    for (let i = 0; i < parts.length; i++) {\n      if (parts[i] == '.')\n        continue;\n      if (parts[i] == '..')\n        stack.pop();\n      else\n        stack.push(parts[i]);\n    }\n    return stack.join('/');\n  },\n  getRoutes: (url) => {\n    if (url[0] != '/') {\n      url = '/' + url;\n    }\n    let qIndex = url.indexOf('?');\n    if (qIndex != -1) {\n      url = url.substring(0, qIndex);\n    }\n    return url.split('/');\n  }\n};\n\nmodule.exports = URLExt;\n","const Json = {\n  parse: (data) => {\n    let ans = {};\n    if (typeof data == 'string') {\n      try {\n        ans = JSON.parse(data);\n      } catch(e) {\n        return data;\n      }\n      return Json.parse(ans);\n    } else if (Array.isArray(data)) {\n      ans = [];\n      data.forEach((v, i) => {\n        ans[i] = Json.parse(v);\n      });\n    } else if (typeof data == 'object') {\n      for (const k in data) {\n        ans[k] = Json.parse(data[k]);\n      }\n    } else {\n      return data;\n    }\n    return ans;\n  },\n  stringify: (data) => {\n    if (typeof data == 'string') {\n      return data;\n    } else {\n      return JSON.stringify(data);\n    }\n  },\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    return true;\n  },\n  deepClone: (json) => {\n    if (Array.isArray(json)) return json.map((i) => Json.deepClone(i));\n    if (typeof json !== 'object' || json === null) return json;\n    let clone = {};\n    for (let key in json) {\n      clone[key] = Json.deepClone(json[key]);\n    }\n    return clone;\n  }\n};\n\nmodule.exports = Json;\n","// Attribute related gotchas\nfunction updateAttribute(element, name, newValue) {\n  if (name === 'class') {\n    const fromValue = element.className;\n    if (fromValue != newValue) {\n      // values are always cast to strings\n      if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n        element.className = '';\n      } else {\n        element.className = newValue;\n      }\n    }\n  } else {\n    const fromValue = element.getAttribute(name);\n    if (fromValue != newValue) {\n      // values are always cast to strings\n      if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n        if (fromValue) element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, newValue);\n      }\n    }\n\n    // select/input's value doesn't change on changing value attribute\n    if ((element.nodeName == 'SELECT' || element.nodeName == 'INPUT') && name == 'value') element.value = newValue;\n  }\n}\n\nmodule.exports = {\n  updateAttribute\n};\n","module.exports = {\n  SIFRR_NODE: window.document.createElement('sifrr-node'),\n  TEMPLATE: window.document.createElement('template'),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1\n};\n","const { updateAttribute } = require('./update');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reuseNodes.js\nfunction makeChildrenEqual(parent, newChildren) {\n  // Lesser children now\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL;\n    while(i < newL) {\n      parent.appendChild(newChildren[i]);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (newNode === null) return oldNode;\n  if (newNode.type === 'stateChange') {\n    if (!shallowEqual(oldNode.state, newNode.state)) {\n      oldNode.state = newNode.state;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, newNode.childNodes);\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(document, NodeFilter.SHOW_ALL, null, false);\nTREE_WALKER.roll = function(n, filter = false) {\n  let node = this.currentNode;\n  while(--n) {\n    if (filter && filter(node)){\n      node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n    } else node = TREE_WALKER.nextNode();\n  }\n  return node;\n};\n\nfunction collect(element, stateMap = element.stateMap, filter) {\n  const refs = [];\n  TREE_WALKER.currentNode = element;\n  stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n  return refs;\n}\n\nclass Ref {\n  constructor(idx, ref) {\n    this.idx = idx;\n    this.ref = ref;\n  }\n}\n\nfunction create(node, fxn, filter = false) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    if (ref = fxn(node)) {\n      indices.push(new Ref(idx+1, ref));\n      idx = 1;\n    } else {\n      idx++;\n    }\n    if (filter && filter(node)){\n      node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n    } else node = TREE_WALKER.nextNode();\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  walker: TREE_WALKER,\n  collect,\n  create,\n  Ref\n};\n","const { makeChildrenEqual } = require('./makeequal');\nconst { updateAttribute } = require('./update');\nconst { collect, create } = require('./ref');\nconst { TEMPLATE, TEXT_NODE, COMMENT_NODE, ELEMENT_NODE } = require('./constants');\n\nfunction isHtml(el) {\n  return (el.dataset && el.dataset.sifrrHtml == 'true') ||\n    el.contentEditable == 'true' ||\n    el.nodeName == 'TEXTAREA' ||\n    el.nodeName == 'STYLE' ||\n    (el.dataset && el.dataset.sifrrRepeat);\n}\n\nfunction creator(el) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    // text node\n    const x = el.nodeValue;\n    if (x.indexOf('${') > -1) return {\n      html: false,\n      text: x.trim()\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (isHtml(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.html = true;\n        sm.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n      }\n    }\n    // attributes\n    const attrs = el.attributes || [], l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '$') {\n        attrStateMap.events[attribute.name] = attribute.value;\n      } else if (attribute.value.indexOf('${') >= 0) {\n        attrStateMap[attribute.name] = attribute.value;\n      }\n    }\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nconst Parser = {\n  collectRefs: (el, stateMap) => collect(el, stateMap, isHtml),\n  createStateMap: (element) => create(element, creator, isHtml),\n  update: (element) => {\n    if (!element._refs) {\n      return false;\n    }\n    // Update nodes\n    const l = element._refs.length;\n    for (let i = 0; i < l; i++) {\n      const data = element.constructor.stateMap[i].ref;\n      const dom = element._refs[i];\n\n      // update attributes\n      if (data.attributes) {\n        for(let key in data.attributes) {\n          if (key === 'events') {\n            for(let event in data.attributes.events) {\n              dom[event] = Parser.evaluateString(data.attributes.events[event], element);\n            }\n          } else {\n            const val = Parser.evaluateString(data.attributes[key], element);\n            updateAttribute(dom, key, val);\n          }\n        }\n      }\n\n      if (data.html === undefined) continue;\n\n      // update element\n      const newValue = Parser.evaluateString(data.text, element);\n      if (!newValue) { dom.textContent = ''; continue; }\n\n      if (data.html) {\n        // html node\n        let children;\n        if (Array.isArray(newValue)) {\n          children = newValue;\n        } else if (newValue.nodeType) {\n          children = [newValue];\n        } else {\n          // Replace html tags in input from input/contenteditable/textarea\n          TEMPLATE.innerHTML = newValue.toString()\n            // All closing tags\n            .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n            // Self closing tags (void elements) from https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n            .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n          children = Array.prototype.slice.call(TEMPLATE.content.childNodes);\n        }\n        if (children.length < 1) dom.textContent = '';\n        else makeChildrenEqual(dom, children);\n      } else {\n        // text node\n        if (dom.nodeValue != newValue) {\n          dom.nodeValue = newValue;\n        }\n      }\n    }\n  },\n  twoWayBind: (e) => {\n    const target = e.path ? e.path[0] : e.target;\n    if (!target.dataset.sifrrBind) return;\n    const value = target.value === undefined ? target.innerHTML : target.value;\n    let state = {};\n    state[target.dataset.sifrrBind] = value;\n    target.getRootNode().host.state = state;\n  },\n  evaluateString: (string, element) => {\n    if (string.indexOf('${') < 0) return string;\n    string = string.trim();\n    if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n    return replacer('`' + string + '`');\n\n    function replacer(match) {\n      if (match[0] == '$') match = match.slice(2, -1);\n      let f;\n      if (match.indexOf('return ') >= 0) {\n        f = new Function(match).bind(element);\n      } else {\n        f = new Function('return ' + match).bind(element);\n      }\n      return f();\n    }\n  }\n};\n\nmodule.exports = Parser;\n","/*! Sifrr.Fetch v0.0.1-alpha2 - sifrr project */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Fetch = factory());\n}(this, (function () { 'use strict';\n\n  class Request {\n    constructor(type, url, options = {}) {\n      this.type = type;\n      this._options = options;\n      this._url = url;\n    }\n    get response() {\n      return window.fetch(this.url, this.options).then(resp => {\n        let contentType = resp.headers.get('content-type');\n        if (resp.ok) {\n          if (contentType && contentType.includes('application/json')) {\n            resp = resp.json();\n          }\n          return resp;\n        } else {\n          let error = Error(resp.statusText);\n          error.response = resp;\n          throw error;\n        }\n      });\n    }\n    get url() {\n      const params = this._options.params;\n      if (params && Object.keys(params).length > 0) {\n        return this._url + '?' + Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n      } else {\n        return this._url;\n      }\n    }\n    get options() {\n      const options = Object.assign({\n        method: this.type,\n        mode: 'cors',\n        redirect: 'follow'\n      }, this._options);\n      options.headers = Object.assign({\n        'accept': 'application/json'\n      }, this._options.headers || {});\n      if (typeof options.body === 'object') {\n        options.body = JSON.stringify(options.body);\n      }\n      return options;\n    }\n  }\n  var request = Request;\n\n  class SifrrFetch {\n    static get(url, options = {}) {\n      return new request('GET', url, options).response;\n    }\n    static post(url, options = {}) {\n      return new request('POST', url, options).response;\n    }\n    static put(url, options = {}) {\n      return new request('PUT', url, options).response;\n    }\n    static delete(url, options = {}) {\n      return new request('DELETE', url, options).response;\n    }\n    static graphql(url, options = {}) {\n      const {\n        query,\n        variables = {}\n      } = options;\n      delete options.query;\n      delete options.variables;\n      options.headers = options.headers || {};\n      options.headers['Content-Type'] = 'application/json';\n      options.headers['Accept'] = 'application/json';\n      options.body = {\n        query,\n        variables\n      };\n      return new request('POST', url, options).response;\n    }\n    static file(url, options = {}) {\n      options.headers = options.headers || {};\n      options.headers.accept = options.headers.accept || '*/*';\n      return new request('GET', url, options).response;\n    }\n  }\n  var sifrr_fetch = SifrrFetch;\n\n  return sifrr_fetch;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.fetch.js.map\n","const fetch = require('@sifrr/fetch');\nconst { TEMPLATE } = require('./constants');\n\nclass Loader {\n  constructor(elemName, config = {}) {\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName].instance;\n    this.elementName = elemName;\n    this.config = config;\n    this.constructor.urls[elemName] = this.htmlUrl;\n  }\n\n  get html() {\n    const me = this;\n    if (this.constructor.all[this.elementName]) return this.constructor.all[this.elementName].html;\n    const html = fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => {\n        TEMPLATE.innerHTML = file;\n        return TEMPLATE.content;\n      }).then((html) => {\n        Loader._all[me.elementName].template = html.querySelector('template');\n        return html;\n      });\n    Loader.add(me.elementName, { instance: me, html: html });\n    return html;\n  }\n\n  get htmlUrl() {\n    return this.config.url || `${this.config.baseUrl || ''}/elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  executeScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        const fxn = new Function(script.text).bind(window);\n        fxn();\n      });\n    });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\nLoader.urls = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst { TEMPLATE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/index.js\nfunction creator(node) {\n  if (node.nodeType !== 3) {\n    if (node.attributes !== undefined) {\n      const attrs = Array.from(node.attributes), l = attrs.length;\n      const ret = [];\n      for (let i = 0; i < l; i++) {\n        const avalue = attrs[i].value;\n        if (avalue[0] === '$') {\n          ret.push({\n            name: attrs[i].name,\n            text: avalue.slice(2, -1)\n          });\n        }\n      }\n      if (ret.length > 0) return ret;\n    }\n    return 0;\n  } else {\n    let nodeData = node.nodeValue;\n    if (nodeData[0] === '$') {\n      node.nodeValue = '';\n      return nodeData.slice(2, -1);\n    }\n    return 0;\n  }\n}\n\nfunction updateState(simpleEl) {\n  const doms = simpleEl._refs, refs = simpleEl.stateMap, l = refs.length;\n  const newState = simpleEl.state, oldState = simpleEl._oldState;\n  for (let i = 0; i < l; i++) {\n    const data = refs[i].ref, dom = doms[i];\n    if (Array.isArray(data)) {\n      const l = data.length;\n      for (let i = 0; i < l; i++) {\n        const attr = data[i];\n        if (oldState[attr.text] !== newState[attr.text]) {\n          if (attr.name === 'class') dom.className = newState[attr.text] || '';\n          else dom.setAttribute(attr.name, newState[attr.text]);\n        }\n      }\n    } else {\n      if (oldState[data] != newState[data]) dom.nodeValue = newState[data];\n    }\n  }\n}\n\nfunction SimpleElement(content, defaultState) {\n  if (typeof content === 'string') {\n    TEMPLATE.innerHTML = content;\n    content = TEMPLATE.content.firstElementChild || TEMPLATE.content.firstChild;\n    const oldDisplay = content.style.display;\n    content.style.display = 'none';\n    window.document.body.appendChild(content);\n    content.remove();\n    content.style.display = oldDisplay;\n  }\n  if (content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute('is') && content.getAttribute('is').indexOf('-') >= 0) ||\n    (content.isSifrr && content.isSifrr())) return content;\n  content.stateMap = create(content, creator);\n  content._refs = collect(content, content.stateMap);\n  Object.defineProperty(content, 'state', {\n    get: () => content._state,\n    set: (v) => {\n      content._oldState = Object.assign({}, content._state);\n      content._state = Object.assign(content._state || {}, v);\n      updateState(content);\n    }\n  });\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep) {\n    const clone = content.cloneNode(deep);\n    clone.stateMap = content.stateMap;\n    clone._refs = collect(clone, content.stateMap);\n    Object.defineProperty(clone, 'state', {\n      get: () => clone._state,\n      set: (v) => {\n        clone._oldState = Object.assign({}, clone._state);\n        clone._state = Object.assign(clone._state || {}, v);\n        updateState(clone);\n      }\n    });\n    if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const Parser = require('./parser');\nconst JsonExt = require('../utils/json');\nconst Loader = require('./loader');\nconst SimpleElement = require('./simpleelement');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return Loader.all[this.elementName].template;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.template.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static onStateChange() {}\n\n    static useSR() {\n      return this.template.getAttribute('use-shadow-root') !== 'false' && this.useShadowRoot;\n    }\n\n    constructor() {\n      super();\n      // this._oldState = {};\n      if(this.constructor.defaultState || this.state) this._state = Object.assign({}, this.constructor.defaultState, this.state);\n      const content = this.constructor.template.content.cloneNode(true);\n      if (this.constructor.useSR()) {\n        this._refs = Parser.collectRefs(content, this.constructor.stateMap);\n        this.attachShadow({\n          mode: 'open'\n        });\n        this.shadowRoot.appendChild(content);\n        this.shadowRoot.addEventListener('change', Parser.twoWayBind);\n      } else {\n        this.__content = content;\n      }\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useSR()) {\n        this._refs = Parser.collectRefs(this.__content, this.constructor.stateMap);\n        this.appendChild(this.__content);\n      }\n      if(!this.hasAttribute('data-sifrr-state') && this._state) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      if (this.useShadowRoot) this.shadowRoot.removeEventListener('change', Parser.twoWayBind);\n      if (!this.constructor.useSR()) this.textContent = '';\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JsonExt.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      // return JsonExt.deepClone(this._state);\n      return this._state;\n    }\n\n    set state(v) {\n      // this._oldState = this.state;\n      this._state = this._state || {};\n      Object.assign(this._state, v);\n      this.update();\n    }\n\n    update() {\n      Parser.update(this);\n      this.onStateChange();\n      this.constructor.onStateChange(this);\n    }\n\n    onStateChange() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep) {\n      const clone = this.cloneNode(deep);\n      return clone;\n    }\n\n    clearState() {\n      // this._oldState = this.state;\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n\n    static addArrayToDom(key, template) {\n      this._arrayToDom = this._arrayToDom || {};\n      // state of simple element is single array item, compatible with sifrr element\n      this._arrayToDom[this.elementName] = this._arrayToDom[this.elementName] || {};\n      this._arrayToDom[this.elementName][key] = SimpleElement(template);\n    }\n\n    arrayToDom(key, newState = this.state[key]) {\n      this._domL = this._domL || {};\n      const oldL = this._domL[key] || 0;\n      const domArray = [];\n      const newL = newState.length;\n      let temp;\n      try {\n        temp = this.constructor._arrayToDom[this.constructor.elementName][key];\n      } catch(e) {\n        return window.console.log(`[error]: No arrayToDom data of '${key}' added in ${this.constructor.elementName}.`);\n      }\n      for (let i = 0; i < newL; i++) {\n        if (i < oldL) {\n          domArray.push({ type: 'stateChange', state: newState[i] });\n        } else {\n          const el = temp.sifrrClone(true);\n          el.state = newState[i];\n          domArray.push(el);\n        }\n      }\n      this._domL[key] = newL;\n      return domArray;\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Taken from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    let dom = e.path ? e.path[0] : e.target;\n    while(dom) {\n      const eventHandler = dom[`$${name}`];\n      if (eventHandler) {\n        eventHandler(e, dom);\n      }\n      cssMatchEvent(e, name, dom);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, dom));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.document.addEventListener(name, event => nativeToSyntheticEvent(event, name), { capture: true, passive: true });\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  }\n};\n\nmodule.exports = Event;\n","const UrlExt = require('./utils/url');\nconst JsonExt = require('./utils/json');\n\n// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.makeEqual = require('./dom/makeequal');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useShadowRoot = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    window.console.error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    window.console.warn(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    window.console.error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error}`);\n      return false;\n    }\n  }\n  return false;\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, config = { baseUrl: SifrrDom.config.baseUrl }) {\n  return new Promise((res, rej) => {\n    let loader = new SifrrDom.Loader(elemName, config);\n    loader.executeScripts().then(() => res()).catch(() => rej());\n  });\n};\n\nSifrrDom.Url = UrlExt;\nSifrrDom.Json = JsonExt;\n// Relative path to element html\nSifrrDom.relativeTo = function(elemName, relativeUrl) {\n  if (typeof elemName === 'string') return SifrrDom.Url.absolute(SifrrDom.Loader.urls[elemName], relativeUrl);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["absolute","base","relative","stack","split","parts","pop","i","length","push","join","getRoutes","url","qIndex","indexOf","substring","Json","parse","data","ans","JSON","e","Array","isArray","forEach","v","k","stringify","shallowEqual","a","b","key","deepClone","json","map","clone","updateAttribute","element","name","newValue","className","fromValue","getAttribute","setAttribute","removeAttribute","nodeName","value","SIFRR_NODE","window","document","createElement","TEMPLATE","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","require$$0","require$$1","require$$2","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","l","Math","min","item","head","firstChild","makeEqual","nextSibling","oldNode","newNode","type","state","replaceWith","nodeType","attr","oldAttrs","attributes","newAttrs","j","hasAttribute","specified","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","roll","n","filter","node","this","currentNode","parentNode","nextNode","Ref","constructor","idx","ref","walker","collect","stateMap","refs","x","create","fxn","indices","require$$3","isHtml","el","dataset","sifrrHtml","contentEditable","sifrrRepeat","creator","nodeValue","html","text","trim","sm","innerHTML","replace","attrs","attrStateMap","events","attribute","Object","keys","Parser","collectRefs","createStateMap","update","_refs","dom","event","evaluateString","val","undefined","children","toString","prototype","slice","call","content","textContent","twoWayBind","target","path","sifrrBind","getRootNode","host","string","match","replacer","f","Function","bind","resp","headers","assign","Loader","elemName","config","all","instance","elementName","urls","htmlUrl","me","fetch","file","then","_all","template","querySelector","add","baseUrl","executeScripts","querySelectorAll","script","from","ret","avalue","nodeData","updateState","simpleEl","doms","newState","oldState","_oldState","defaultState","oldDisplay","firstElementChild","style","display","body","remove","isSifrr","defineProperty","get","_state","set","sifrrClone","deep","cloneNode","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_stateMap","toLowerCase","useShadowRoot","useSR","attachShadow","mode","shadowRoot","addEventListener","__content","connectedCallback","onConnect","disconnectedCallback","removeEventListener","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JsonExt","onAttributeChange","onStateChange","clearState","$","args","sr","$$","_arrayToDom","SimpleElement","arrayToDom","_domL","domArray","temp","console","log","HTMLElement","SYNTHETIC_EVENTS","cssMatchEvent","callEach","fxns","css","matches","Promise","resolve","eventHandler","nativeToSyntheticEvent","capture","passive","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","require$$4","require$$5","register","customElements","warn","error","define","elements","setup","load","res","rej","catch","Url","UrlExt","relativeTo","relativeUrl"],"mappings":"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"}