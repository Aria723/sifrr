{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/constants.js","../src/dom/ref.js","../src/dom/template.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/keyed.js","../src/dom/bindings.js","../src/dom/update.js","../src/dom/simpleelement.js","../src/dom/repeatref.js","../src/dom/creator.js","../src/dom/loader.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js","../src/dom/twoWayBind.js"],"sourcesContent":["const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\nconst reg = '(\\\\${(?:(?:[^{}$]|{(?:[^{}$])*})*)})';\n\nmodule.exports = {\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1,\n  OUTER_REGEX: new RegExp(reg, 'g'),\n  STATE_REGEX: /^\\$\\{this\\.state\\.([a-zA-Z0-9_$]+)\\}$/,\n  HTML_ATTR: 'data-sifrr-html',\n  REPEAT_ATTR: 'data-sifrr-repeat',\n  KEY_ATTR: 'data-sifrr-key'\n};\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\nconst { HTML_ATTR } = require('./constants');\n\nfunction isHtml(el) {\n  return el.hasAttribute && el.hasAttribute(HTML_ATTR);\n}\n\nTREE_WALKER.nextFilteredNode = function() {\n  let node = this.currentNode;\n  if (isHtml(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nTREE_WALKER.roll = function(n, next = 'nextFilteredNode') {\n  let node = this.currentNode;\n  while(--n) {\n    node = this[next]();\n  }\n  return node;\n};\n\nfunction collect(element, stateMap, next) {\n  const refs = [], l = stateMap.length;\n  TREE_WALKER.currentNode = element;\n  for (let i = 0; i < l; i++) {\n    refs.push(TREE_WALKER.roll(stateMap[i].idx, next));\n  }\n  return refs;\n}\n\nfunction create(node, fxn, passedArg) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node, isHtml, passedArg)) {\n      indices.push({ idx: idx+1, ref });\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = TREE_WALKER.nextFilteredNode(node);\n  }\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else if (str.nodeType && !str.content) {\n    tmp.content.appendChild(str);\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  if (newValue === false || newValue === null || newValue === undefined) element.hasAttribute(name) && element.removeAttribute(name);\n  else {\n    const fromValue = element.getAttribute(name);\n    if (fromValue !== newValue) {\n      if (name === 'class') element.className = newValue;\n      else element.setAttribute(name, newValue);\n    }\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\nfunction makeChildrenEqual(parent, newChildren, createFn, isNode = false) {\n  const newL = newChildren.length;\n  // Fast path for clear\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  const oldL = parent.childNodes.length;\n  // Lesser children now\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  }\n\n  let item, head = parent.firstChild, curNewChild = newChildren[0];\n  if (isNode) {\n    // Make old children equal to new children\n    while(head) {\n      item = curNewChild.nextSibling;\n      head = makeEqual(head, curNewChild).nextSibling;\n      curNewChild = item;\n    }\n    // Add extra new children\n    while(curNewChild) {\n      item = curNewChild.nextSibling;\n      parent.appendChild(curNewChild);\n      curNewChild = item;\n    }\n  } else {\n    let i = 0;\n    // Make old children equal to new children\n    while(head) {\n      head = makeEqual(head, newChildren[i]).nextSibling;\n      i++;\n    }\n    // Add extra new children\n    while(i < newL) {\n      item = newChildren[i];\n      if (!item.nodeType) item = createFn(item);\n      parent.appendChild(item);\n      i++;\n    }\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (!newNode.nodeType) {\n    if (!shallowEqual(oldNode.state, newNode)) {\n      oldNode.state = newNode;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  // Text or comment node\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  const oldAttrs = oldNode.attributes, newAttrs = newNode.attributes;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    if (!newNode.hasAttribute(oldAttrs[j].name)) oldNode.removeAttribute(oldAttrs[j].name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, Array.prototype.slice.call(newNode.childNodes));\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","/* eslint-disable max-lines */\nconst { makeEqual } = require('./makeequal');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reconcile.js\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses manipukates dom only when required\n\nfunction makeChildrenEqualKeyed(parent, newData, createFn, key) {\n  // Fast path for clear\n  const newL = newData.length;\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // Fast path for create\n  const oldL = parent.childNodes.length;\n  if (oldL === 0) {\n    for(let i = 0; i < newL; i++) {\n      parent.appendChild(createFn(newData[i]));\n    }\n    return;\n  }\n\n  // reconciliation\n  let prevStart = 0,\n    newStart = 0,\n    loop = true,\n    prevEnd = oldL - 1, newEnd = newL - 1,\n    prevStartNode = parent.firstChild,\n    prevEndNode = parent.lastChild,\n    finalNode,\n    a, b, _node;\n\n  fixes: while(loop) {\n    loop = false;\n\n    // Skip prefix\n    a = prevStartNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      makeEqual(prevStartNode, b);\n      prevStart++;\n      prevStartNode = prevStartNode.nextSibling;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newStart];\n    }\n\n    // Skip suffix\n    a = prevEndNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      makeEqual(prevEndNode, b);\n      prevEnd--;\n      finalNode = prevEndNode;\n      prevEndNode = prevEndNode.previousSibling;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newEnd];\n    }\n\n    // Fast path to swap backward\n    a = prevEndNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevEndNode, b);\n      _node = prevEndNode.previousSibling;\n      parent.insertBefore(prevEndNode, prevStartNode);\n      prevEndNode = _node;\n      prevEnd--;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newStart];\n    }\n\n    // Fast path to swap forward\n    a = prevStartNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevStartNode, b);\n      _node = prevStartNode.nextSibling;\n      parent.insertBefore(prevStartNode, prevEndNode.nextSibling);\n      finalNode = prevStartNode;\n      prevEndNode = prevStartNode.previousSibling;\n      prevStartNode = _node;\n      prevStart++;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newEnd];\n    }\n  }\n\n  // Fast path for shrink\n  if (newEnd < newStart) {\n    if (prevStart <= prevEnd) {\n      let next;\n      while(prevStart <= prevEnd) {\n        if (prevEnd === 0) {\n          parent.removeChild(prevEndNode);\n        } else {\n          next = prevEndNode.previousSibling;\n          parent.removeChild(prevEndNode);\n          prevEndNode = next;\n        }\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  // Fast path for add\n  if (prevEnd < prevStart) {\n    if (newStart <= newEnd) {\n      while(newStart <= newEnd) {\n        _node = createFn(newData[newStart]);\n        parent.insertBefore(_node, prevEndNode.nextSibling);\n        prevEndNode = _node;\n        newStart++;\n      }\n    }\n    return;\n  }\n\n  const oldKeys = new Array(newEnd + 1 - newStart), newKeys = new Map(), nodes = [], toDelete = [];\n\n  for(let i = newStart; i <= newEnd; i++) {\n    // Positions for reusing nodes from current DOM state\n    oldKeys[i] = -1;\n    // Index to resolve position from current to new\n    newKeys.set(newData[i][key], i);\n  }\n\n  let reusingNodes = 0;\n  while (prevStart <= prevEnd) {\n    if (newKeys.has(prevStartNode.state[key])) {\n      oldKeys[newKeys.get(prevStartNode.state[key])] = prevStart;\n      reusingNodes++;\n    } else {\n      toDelete.push(prevStartNode);\n    }\n    nodes[prevStart] = prevStartNode;\n    prevStartNode = prevStartNode.nextSibling;\n    prevStart++;\n  }\n\n  // Fast path for full replace\n  if (reusingNodes === 0) {\n    for(let i = newStart; i <= newEnd; i++) {\n      // Add extra nodes\n      parent.insertBefore(createFn(newData[i]), prevStartNode);\n    }\n    // Remove extra nodes\n    for(let i = 0; i < toDelete.length; i++) {\n      parent.removeChild(toDelete[i]);\n    }\n    return;\n  }\n\n  const longestSeq = longestPositiveIncreasingSubsequence(oldKeys, newStart);\n\n  let lisIdx = longestSeq.length - 1, tmpD;\n  for(let i = newEnd; i >= newStart; i--) {\n    if(longestSeq[lisIdx] === i) {\n      finalNode = nodes[oldKeys[i]];\n      makeEqual(finalNode, newData[i]);\n      lisIdx--;\n    } else {\n      if (oldKeys[i] === -1) {\n        tmpD = createFn(newData[i]);\n      } else {\n        tmpD = nodes[oldKeys[i]];\n        makeEqual(tmpD, newData[i]);\n      }\n      parent.insertBefore(tmpD, finalNode);\n      finalNode = tmpD;\n    }\n  }\n\n  for(let i = 0; i < toDelete.length; i++) {\n    parent.removeChild(toDelete[i]);\n  }\n}\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n  let seq = [],\n    is  = [],\n    l   = -1,\n    pre = new Array(ns.length);\n\n  for (let i = newStart, len = ns.length; i < len; i++) {\n    let n = ns[i];\n    if (n < 0) continue;\n    let j = findGreatestIndexLEQ(seq, n);\n    if (j !== -1) pre[i] = is[j];\n    if (j === l) {\n      l++;\n      seq[l] = n;\n      is[l]  = i;\n    } else if (n < seq[j + 1]) {\n      seq[j + 1] = n;\n      is[j + 1] = i;\n    }\n  }\n\n  for (let i = is[l]; l >= 0; i = pre[i], l--) {\n    seq[l] = i;\n  }\n\n  return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n  // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n  // therefore, they actually start out of range: (-1, last + 1)\n  let lo = -1,\n    hi = seq.length;\n\n  // fast path for simple increasing sequences\n  if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n  while (hi - lo > 1) {\n    let mid = Math.floor((lo + hi) / 2);\n    if (seq[mid] > n) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n\n  return lo;\n}\n\nmodule.exports = {\n  makeChildrenEqualKeyed,\n  longestPositiveIncreasingSubsequence\n};\n","const { OUTER_REGEX, STATE_REGEX } = require('./constants');\n\nfunction replacer(match) {\n  let f;\n  if (match.indexOf('return ') >= 0) {\n    f = match;\n  } else {\n    f = 'return ' + match;\n  }\n  try {\n    return new Function(f);\n  } catch(e) {\n    window.console.log(`Error processing binding: \\`${f}\\``);\n    return '';\n  }\n}\n\nfunction evaluate(fxn, el) {\n  try {\n    if (typeof fxn === 'string') return fxn;\n    else return fxn.call(el);\n  } catch(e) {\n    const str = fxn.toString();\n    window.console.log(`Error evaluating: \\`${str.slice(str.indexOf('{') + 1, str.lastIndexOf('}'))}\\` for element`, el);\n    window.console.error(e);\n  }\n}\n\nconst Bindings = {\n  getBindingFxns: (string) => {\n    const splitted = string.split(OUTER_REGEX), l = splitted.length, ret = [];\n    for (let i = 0; i < l; i++) {\n      if (splitted[i][0] === '$' && splitted[i][1] === '{') {\n        ret.push(replacer(splitted[i].slice(2, -1)));\n      } else if (splitted[i]) ret.push(splitted[i]);\n    }\n    if (ret.length === 1) return ret[0];\n    return ret;\n  },\n  getStringBindingFxn: (string) => {\n    const match = string.match(STATE_REGEX);\n    if (match) return match[1];\n    return Bindings.getBindingFxns(string);\n  },\n  evaluateBindings: (fxns, element) => {\n    if (typeof fxns === 'function') return evaluate(fxns, element);\n    return fxns.map(fxn => evaluate(fxn, element)).join('');\n  },\n  evaluate: evaluate,\n  replacer: replacer\n};\n\nmodule.exports = Bindings;\n","const { makeChildrenEqual } = require('./makeequal');\nconst { makeChildrenEqualKeyed } = require('./keyed');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateBindings } = require('./bindings');\nconst { TEMPLATE, KEY_ATTR } = require('./constants');\n\nfunction update(element, stateMap) {\n  if (!element._refs) return false;\n  stateMap = stateMap || element.constructor.stateMap;\n  let data, dom, newValue;\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    data = stateMap[i].ref;\n    dom = element._refs[i];\n\n    // Fast path for text nodes\n    if (data.type === 0) {\n      // state node\n      newValue = element._state[data.text];\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    } else if (data.type === 1) {\n      // text node\n      newValue = evaluateBindings(data.text, element);\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    }\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key !== 'events') {\n          if (data.attributes[key].type === 0) {\n            newValue = element._state[data.attributes[key].text];\n          } else {\n            newValue = evaluateBindings(data.attributes[key].text, element);\n          }\n          updateAttribute(dom, key, newValue);\n        } else {\n          if (!dom._sifrrEventSet) {\n            for(let event in data.attributes.events) {\n              dom[event] = evaluateBindings(data.attributes.events[event], element);\n            }\n            dom._root = element;\n            dom._sifrrEventSet = true;\n          }\n        }\n      }\n    }\n\n    if (data.text === undefined) continue;\n\n    // update element\n    newValue = evaluateBindings(data.text, element);\n\n    if (data.type === 3) {\n      // repeat\n      let key;\n      if (data.keyed && (key = dom.getAttribute(KEY_ATTR))) {\n        makeChildrenEqualKeyed(dom, newValue, (state) => data.se.sifrrClone(undefined, state), key);\n      } else makeChildrenEqual(dom, newValue, (state) => data.se.sifrrClone(undefined, state));\n    } else {\n      // html node\n      let children, isNode = false;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.content && newValue.content.nodeType === 11) {\n        children = newValue.content.childNodes;\n        isNode = true;\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else if (typeof newValue === 'string') {\n        const temp = TEMPLATE();\n        temp.innerHTML = newValue.toString();\n        children = temp.content.childNodes;\n        isNode = true;\n      } else {\n        children = Array.prototype.slice.call(newValue);\n      }\n      makeChildrenEqual(dom, children, undefined, isNode);\n    }\n  }\n}\n\nmodule.exports = update;\n","const template = require('./template');\nconst update = require('./update');\nconst { collect, create } = require('./ref');\nconst creator = require('./creator');\n\nfunction SimpleElement(content, defaultState = null) {\n  if (!content.nodeType && typeof content !== 'string') {\n    if (!content[0] || !content[0].nodeType) {\n      throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n    }\n  }\n  const templ = template(content);\n  content = templ.content.firstElementChild || templ.content.firstChild;\n  // Already sifrr element\n  if (content.isSifrr || content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') !== -1)\n  ) {\n    if (!content.isSifrr) {\n      // Render custom element if not rendered\n      window.document.body.appendChild(content);\n      window.document.body.removeChild(content);\n    }\n    return content;\n  }\n  const stateMap = create(content, creator, defaultState);\n\n  const stateProps = {\n    get: function() { return this._state; },\n    set: function(v) {\n      Object.assign(this._state, v);\n      update(this, stateMap);\n    }\n  };\n\n  content.sifrrClone = function(deep = true, newState) {\n    const clone = content.cloneNode(deep);\n    clone._refs = collect(clone, stateMap, 'nextNode');\n    clone._state = Object.assign({}, defaultState, newState);\n    Object.defineProperty(clone, 'state', stateProps);\n    update(clone, stateMap);\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const simpleElement = require('./simpleelement');\nconst { getBindingFxns } = require('./bindings');\nconst { KEY_ATTR } = require('./constants');\n\nmodule.exports = (sm, el, attr) => {\n  sm.type = 3;\n  let defaultState;\n  if (el.hasAttribute('data-sifrr-default-state')) defaultState = JSON.parse(el.getAttribute('data-sifrr-default-state'));\n  sm.se = simpleElement(el.childNodes, defaultState);\n  sm.text = getBindingFxns(el.getAttribute(attr));\n  sm.keyed = el.hasAttribute(KEY_ATTR);\n  el.textContent = '';\n  el.removeAttribute(attr);\n};\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE, REPEAT_ATTR } = require('./constants');\nconst repeatref = require('./repeatref');\n// ref types:\n// 0: state\n// 1: text\n// 2: html\n// 3: arrayToDom\nconst { getBindingFxns, getStringBindingFxn } = require('./bindings');\nconst updateAttribute = require('./updateattribute');\n\nfunction creator(el, filter, defaultState) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    const x = el.data;\n    if (x.indexOf('${') > -1) {\n      const binding = getStringBindingFxn(x.trim());\n      if (typeof binding !== 'string') {\n        // text node\n        return {\n          type: 1,\n          text: binding\n        };\n      } else {\n        if (defaultState) el.data = defaultState[binding];\n        // state node\n        return {\n          type: 0,\n          text: binding\n        };\n      }\n    }\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (filter(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.type = 2;\n        sm.text = getBindingFxns(innerHTML.replace(/<!--((?:(?!-->).)+)-->/g, '$1').trim());\n      }\n    } else if (el.hasAttribute(REPEAT_ATTR)) {\n      repeatref(sm, el, REPEAT_ATTR);\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '_') {\n        attrStateMap.events[attribute.name] = getBindingFxns(attribute.value);\n      } else if (attribute.value.indexOf('${') >= 0) {\n        // Don't treat style differently because same performance https://jsperf.com/style-property-vs-style-attribute/2\n        const binding = getStringBindingFxn(attribute.value);\n        if (typeof binding !== 'string') {\n          // text attr\n          attrStateMap[attribute.name] = {\n            type: 1,\n            text: binding\n          };\n        } else {\n          // state attr\n          attrStateMap[attribute.name] = {\n            type: 0,\n            text: binding\n          };\n          if (defaultState) updateAttribute(el, attribute.name, defaultState[binding]);\n        }\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = creator;\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url, onProgress) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n    this.onProgress = onProgress;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl, { onProgress: this.onProgress })\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl, { onProgress: this.onProgress })\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) throw Error(`'${this.elementName}' element's javascript was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script + `\\n //# sourceURL=${this.jsUrl}`).call();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file for '${this.elementName}' gave error. Trying to get html file.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text + `\\n //# sourceURL=${this.htmlUrl}`).call({ currentTempate: file.querySelector('template') });\n        }\n      });\n    }).catch(e => { throw e; });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst creator = require('./creator');\nconst update = require('./update');\nconst Loader = require('./loader');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      if (this._ctemp) return this._ctemp;\n      this._ctemp = this.template;\n      if (this.useShadowRoot && window.ShadyCSS && !window.ShadyCSS.nativeShadow) {\n        window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n      }\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || create(this.ctemp.content, creator, this.defaultState);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.ctemp.content.cloneNode(true);\n        this._refs = collect(content, this.constructor.stateMap);\n        if (this.constructor.useShadowRoot) {\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(this.__content) {\n        this.textContent = '';\n        this.appendChild(this.__content);\n        delete this.__content;\n      }\n      if (!this.hasAttribute('data-sifrr-state')) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      return this._state;\n    }\n\n    set state(v) {\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n      this.onUpdate();\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep = false, state) {\n      const clone = this.cloneNode(deep);\n      clone._state = Object.assign({}, this.constructor.defaultState, state);\n      return clone;\n    }\n\n    clearState() {\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Inspired from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  const target = e.composedPath ? e.composedPath()[0] : e.target;\n  let dom = target;\n  while(dom) {\n    const eventHandler = dom[`_${name}`] || (dom.hasAttribute ? dom.getAttribute(`_${name}`) : null);\n    if (typeof eventHandler === 'function') {\n      eventHandler.call(dom._root || window, e, target);\n    } else if (typeof eventHandler === 'string') {\n      new Function('event', 'target', eventHandler).call(dom._root || window, event, target);\n    }\n    cssMatchEvent(e, name, dom, target);\n    dom = dom.parentNode || dom.host;\n  }\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  Promise.resolve((() => {\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  })());\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts,\n  nativeToSyntheticEvent\n};\n\nmodule.exports = Event;\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.twoWayBind = require('./dom/twoWayBind');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  HTMLElement.prototype.$ = HTMLElement.prototype.querySelector;\n  HTMLElement.prototype.$$ = HTMLElement.prototype.querySelectorAll;\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.twoWayBind);\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true, onProgress } = {}) {\n  if (window.customElements.get(elemName)) { return Promise.resolve(window.console.warn(`Error loading Element: ${elemName} - Custom Element with this name is already defined.`)); }\n  let loader = new SifrrDom.Loader(elemName, url, onProgress);\n  const wd = customElements.whenDefined(elemName);\n  SifrrDom.loadingElements.push(wd);\n  return loader.executeScripts(js).then(() => {\n    if (!window.customElements.get(elemName)) {\n      window.console.warn(`Executing '${elemName}' file didn't register the element. Ignore if you are registering element in a promise or async function.`);\n    }\n  }).catch(e => {\n    SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    throw e;\n  });\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n","module.exports = (e) => {\n  const target = e.composedPath ? e.composedPath()[0] : e.target;\n  if (!target.hasAttribute('data-sifrr-bind') || target._root === null) return;\n  const value = target.value || target.textContent;\n  let state = {};\n  if (!target._root) {\n    let root;\n    root = target;\n    while(root && !root.isSifrr) root = root.parentNode || root.host;\n    if (root) target._root = root;\n    else target._root = null;\n  }\n  state[target.getAttribute('data-sifrr-bind')] = value;\n  if (target._root) target._root.state = state;\n};\n"],"names":["temp","window","document","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","OUTER_REGEX","RegExp","STATE_REGEX","HTML_ATTR","REPEAT_ATTR","KEY_ATTR","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","require$$0","isHtml","el","hasAttribute","nextFilteredNode","node","this","currentNode","nextSibling","parentNode","nextNode","roll","n","next","collect","element","stateMap","refs","l","length","i","push","idx","create","fxn","passedArg","ref","indices","str","extra","tmp","Array","from","forEach","s","content","appendChild","nodeType","String","raw","replace","innerHTML","name","newValue","removeAttribute","getAttribute","className","setAttribute","nodeName","value","shallowEqual","a","b","key","require$$1","makeChildrenEqual","parent","newChildren","createFn","isNode","newL","textContent","oldL","childNodes","removeChild","lastChild","item","head","firstChild","curNewChild","makeEqual","oldNode","newNode","state","replaceWith","data","oldAttrs","attributes","newAttrs","updateAttribute","j","prototype","slice","call","longestPositiveIncreasingSubsequence","ns","newStart","seq","is","pre","len","findGreatestIndexLEQ","lo","hi","mid","Math","floor","makeChildrenEqualKeyed","newData","finalNode","_node","prevStart","loop","prevEnd","newEnd","prevStartNode","prevEndNode","fixes","previousSibling","insertBefore","oldKeys","newKeys","Map","nodes","toDelete","set","reusingNodes","has","get","longestSeq","tmpD","lisIdx","replacer","match","f","indexOf","Function","e","console","log","evaluate","toString","lastIndexOf","error","Bindings","getBindingFxns","string","splitted","split","ret","getStringBindingFxn","evaluateBindings","fxns","map","join","require$$2","require$$3","_refs","dom","constructor","type","_state","text","_sifrrEventSet","event","events","_root","undefined","keyed","se","sifrrClone","children","isArray","defaultState","TypeError","templ","template","firstElementChild","isSifrr","body","creator","stateProps","v","Object","assign","update","deep","newState","clone","defineProperty","sm","attr","JSON","parse","simpleElement","filter","x","binding","trim","repeatref","attrs","attrStateMap","attribute","keys","Loader","elemName","url","onProgress","fetch","Error","all","elementName","_html","add","me","file","htmlUrl","then","resp","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","executeScripts","js","_executed","catch","executeHTMLScripts","html","querySelectorAll","src","newScript","currentTempate","instance","_all","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","useShadowRoot","ShadyCSS","nativeShadow","prepareTemplate","_stateMap","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","onAttributeChange","onStateChange","onUpdate","clearState","$","args","sr","$$","HTMLElement","SYNTHETIC_EVENTS","opts","capture","passive","nativeToSyntheticEvent","target","composedPath","eventHandler","cssMatchEvent","host","callEach","Promise","resolve","css","matches","addEventListener","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","twoWayBind","root","SimpleElement","require$$4","require$$5","register","customElements","define","elements","message","trace","setup","load","warn","loader","wd","whenDefined","loadingElements","loading"],"mappings":"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"}