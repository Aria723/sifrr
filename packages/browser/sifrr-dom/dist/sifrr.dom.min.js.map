{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/constants.js","../src/dom/ref.js","../src/dom/template.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/keyed.js","../src/dom/bindings.js","../src/dom/update.js","../src/dom/simpleelement.js","../src/dom/repeatref.js","../src/dom/creator.js","../src/dom/loader.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js","../src/dom/twowaybind.js"],"sourcesContent":["const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\nconst reg = '(\\\\${(?:(?:[^{}$]|{(?:[^{}$])*})*)})';\n\nmodule.exports = {\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1,\n  OUTER_REGEX: new RegExp(reg, 'g'),\n  STATE_REGEX: /^\\$\\{this\\.state\\.([a-zA-Z0-9_$]+)\\}$/,\n  HTML_ATTR: 'data-sifrr-html',\n  REPEAT_ATTR: 'data-sifrr-repeat',\n  KEY_ATTR: 'data-sifrr-key'\n};\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\nconst { TEXT_NODE } = require('./constants');\n\nfunction collect(element, stateMap) {\n  const refs = [], l = stateMap.length;\n  let node = TREE_WALKER.currentNode = element, n;\n  for (let i = 0; i < l; i++) {\n    n = stateMap[i].idx;\n    while(--n) {\n      node = TREE_WALKER.nextNode();\n    }\n    refs.push(node);\n  }\n  return refs;\n}\n\nfunction create(node, fxn, passedArg) {\n  let indices = [], ref, idx = 0, ntr;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    if (node.nodeType === TEXT_NODE && node.data.trim() === '') {\n      ntr = node;\n      node = TREE_WALKER.nextNode(node);\n      ntr.remove();\n    } else {\n      // eslint-disable-next-line no-cond-assign\n      if (ref = fxn(node, passedArg)) {\n        indices.push({ idx: idx+1, ref });\n        idx = 1;\n      } else {\n        idx++;\n      }\n      node = TREE_WALKER.nextNode(node);\n    }\n  }\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else if (str.nodeType && !str.content) {\n    tmp.content.appendChild(str);\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  if (newValue === false || newValue === null || newValue === undefined) element.hasAttribute(name) && element.removeAttribute(name);\n  else if (name === 'class') {\n    element.className = newValue;\n  } else if (name === 'id' || name === 'value') {\n    element[name] = newValue;\n  } else if (element.getAttribute(name) !== newValue) {\n    element.setAttribute(name, newValue);\n  }\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\nfunction makeChildrenEqual(parent, newChildren, createFn, isNode = false) {\n  const newL = newChildren.length, oldL = parent.childNodes.length;\n  // Lesser children now\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  }\n\n  let item, head = parent.firstChild, curNewChild = newChildren[0];\n  if (isNode) {\n    // Make old children equal to new children\n    while(head) {\n      item = curNewChild.nextSibling;\n      head = makeEqual(head, curNewChild).nextSibling;\n      curNewChild = item;\n    }\n    // Add extra new children\n    while(curNewChild) {\n      item = curNewChild.nextSibling;\n      parent.appendChild(curNewChild);\n      curNewChild = item;\n    }\n  } else {\n    let i = 0;\n    // Make old children equal to new children\n    while(head) {\n      head = makeEqual(head, newChildren[i]).nextSibling;\n      i++;\n    }\n    // Add extra new children\n    while(i < newL) {\n      item = newChildren[i];\n      parent.appendChild(item.nodeType ? item : createFn(item));\n      i++;\n    }\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (!newNode.nodeType) {\n    if (!shallowEqual(oldNode._state, newNode)) oldNode.state = newNode;\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  // Text or comment node\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  const oldAttrs = oldNode.attributes, newAttrs = newNode.attributes;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    if (!newNode.hasAttribute(oldAttrs[j].name)) oldNode.removeAttribute(oldAttrs[j].name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, newNode.childNodes, undefined, true);\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","/* eslint-disable max-lines */\nconst { makeEqual } = require('./makeequal');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reconcile.js\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses manipukates dom only when required\n\nfunction makeChildrenEqualKeyed(parent, newData, createFn, key) {\n  const newL = newData.length, oldL = parent.childNodes.length;\n\n  if (oldL === 0) {\n    for(let i = 0; i < newL; i++) {\n      parent.appendChild(createFn(newData[i]));\n    }\n    return;\n  }\n\n  // reconciliation\n  let prevStart = 0,\n    newStart = 0,\n    loop = true,\n    prevEnd = oldL - 1, newEnd = newL - 1,\n    prevStartNode = parent.firstChild,\n    prevEndNode = parent.lastChild,\n    finalNode,\n    a, b, _node;\n\n  fixes: while(loop) {\n    loop = false;\n\n    // Skip prefix\n    a = prevStartNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      makeEqual(prevStartNode, b);\n      prevStart++;\n      prevStartNode = prevStartNode.nextSibling;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newStart];\n    }\n\n    // Skip suffix\n    a = prevEndNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      makeEqual(prevEndNode, b);\n      prevEnd--;\n      finalNode = prevEndNode;\n      prevEndNode = prevEndNode.previousSibling;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newEnd];\n    }\n\n    // Fast path to swap backward\n    a = prevEndNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevEndNode, b);\n      _node = prevEndNode.previousSibling;\n      parent.insertBefore(prevEndNode, prevStartNode);\n      prevEndNode = _node;\n      prevEnd--;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newStart];\n    }\n\n    // Fast path to swap forward\n    a = prevStartNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevStartNode, b);\n      _node = prevStartNode.nextSibling;\n      parent.insertBefore(prevStartNode, prevEndNode.nextSibling);\n      finalNode = prevStartNode;\n      prevEndNode = prevStartNode.previousSibling;\n      prevStartNode = _node;\n      prevStart++;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newEnd];\n    }\n  }\n\n  // Fast path for shrink\n  if (newEnd < newStart) {\n    if (prevStart <= prevEnd) {\n      let next;\n      while(prevStart <= prevEnd) {\n        if (prevEnd === 0) {\n          parent.removeChild(prevEndNode);\n        } else {\n          next = prevEndNode.previousSibling;\n          parent.removeChild(prevEndNode);\n          prevEndNode = next;\n        }\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  // Fast path for add\n  if (prevEnd < prevStart) {\n    if (newStart <= newEnd) {\n      while(newStart <= newEnd) {\n        _node = createFn(newData[newStart]);\n        parent.insertBefore(_node, finalNode);\n        prevEndNode = _node;\n        newStart++;\n      }\n    }\n    return;\n  }\n\n  const oldKeys = new Array(newEnd + 1 - newStart), newKeys = new Map(), nodes = [], toDelete = [];\n\n  for(let i = newStart; i <= newEnd; i++) {\n    // Positions for reusing nodes from current DOM state\n    oldKeys[i] = -1;\n    // Index to resolve position from current to new\n    newKeys.set(newData[i][key], i);\n  }\n\n  let reusingNodes = 0;\n  while (prevStart <= prevEnd) {\n    if (newKeys.has(prevStartNode.state[key])) {\n      oldKeys[newKeys.get(prevStartNode.state[key])] = prevStart;\n      reusingNodes++;\n    } else {\n      toDelete.push(prevStartNode);\n    }\n    nodes[prevStart] = prevStartNode;\n    prevStartNode = prevStartNode.nextSibling;\n    prevStart++;\n  }\n\n  // Fast path for full replace\n  if (reusingNodes === 0) {\n    for(let i = newStart; i <= newEnd; i++) {\n      // Add extra nodes\n      parent.insertBefore(createFn(newData[i]), prevStartNode);\n    }\n    // Remove extra nodes\n    for(let i = 0; i < toDelete.length; i++) {\n      parent.removeChild(toDelete[i]);\n    }\n    return;\n  }\n\n  const longestSeq = longestPositiveIncreasingSubsequence(oldKeys, newStart);\n\n  let lisIdx = longestSeq.length - 1, tmpD;\n  for(let i = newEnd; i >= newStart; i--) {\n    if(longestSeq[lisIdx] === i) {\n      finalNode = nodes[oldKeys[i]];\n      makeEqual(finalNode, newData[i]);\n      lisIdx--;\n    } else {\n      if (oldKeys[i] === -1) {\n        tmpD = createFn(newData[i]);\n      } else {\n        tmpD = nodes[oldKeys[i]];\n        makeEqual(tmpD, newData[i]);\n      }\n      parent.insertBefore(tmpD, finalNode);\n      finalNode = tmpD;\n    }\n  }\n\n  for(let i = 0; i < toDelete.length; i++) {\n    parent.removeChild(toDelete[i]);\n  }\n}\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n  let seq = [],\n    is  = [],\n    l   = -1,\n    pre = new Array(ns.length);\n\n  for (let i = newStart, len = ns.length; i < len; i++) {\n    let n = ns[i];\n    if (n < 0) continue;\n    let j = findGreatestIndexLEQ(seq, n);\n    if (j !== -1) pre[i] = is[j];\n    if (j === l) {\n      l++;\n      seq[l] = n;\n      is[l]  = i;\n    } else if (n < seq[j + 1]) {\n      seq[j + 1] = n;\n      is[j + 1] = i;\n    }\n  }\n\n  for (let i = is[l]; l >= 0; i = pre[i], l--) {\n    seq[l] = i;\n  }\n\n  return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n  // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n  // therefore, they actually start out of range: (-1, last + 1)\n  let lo = -1,\n    hi = seq.length;\n\n  // fast path for simple increasing sequences\n  if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n  while (hi - lo > 1) {\n    let mid = Math.floor((lo + hi) / 2);\n    if (seq[mid] > n) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n\n  return lo;\n}\n\nmodule.exports = {\n  makeChildrenEqualKeyed,\n  longestPositiveIncreasingSubsequence\n};\n","const { OUTER_REGEX, STATE_REGEX } = require('./constants');\n\nfunction replacer(match) {\n  let f;\n  if (match.indexOf('return ') >= 0) {\n    f = match;\n  } else {\n    f = 'return ' + match;\n  }\n  try {\n    return new Function(f);\n  } catch(e) {\n    window.console.log(`Error processing binding: \\`${f}\\``);\n    return '';\n  }\n}\n\nfunction evaluate(fxn, el) {\n  try {\n    if (typeof fxn === 'string') return fxn;\n    else return fxn.call(el);\n  } catch(e) {\n    const str = fxn.toString();\n    window.console.log(`Error evaluating: \\`${str.slice(str.indexOf('{') + 1, str.lastIndexOf('}'))}\\` for element`, el);\n    window.console.error(e);\n  }\n}\n\nconst Bindings = {\n  getBindingFxns: (string) => {\n    const splitted = string.split(OUTER_REGEX), l = splitted.length, ret = [];\n    for (let i = 0; i < l; i++) {\n      if (splitted[i][0] === '$' && splitted[i][1] === '{') {\n        ret.push(replacer(splitted[i].slice(2, -1)));\n      } else if (splitted[i]) ret.push(splitted[i]);\n    }\n    if (ret.length === 1) return ret[0];\n    return ret;\n  },\n  getStringBindingFxn: (string) => {\n    const match = string.match(STATE_REGEX);\n    if (match) return match[1];\n    return Bindings.getBindingFxns(string);\n  },\n  evaluateBindings: (fxns, element) => {\n    if (typeof fxns === 'function') return evaluate(fxns, element);\n    return fxns.map(fxn => evaluate(fxn, element)).join('');\n  },\n  evaluate: evaluate,\n  replacer: replacer\n};\n\nmodule.exports = Bindings;\n","const { makeChildrenEqual } = require('./makeequal');\nconst { makeChildrenEqualKeyed } = require('./keyed');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateBindings } = require('./bindings');\nconst { TEMPLATE, KEY_ATTR } = require('./constants');\n\nfunction update(element, stateMap) {\n  if (!element._refs) return false;\n  stateMap = stateMap || element.constructor.stateMap;\n  let data, dom, newValue;\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    data = stateMap[i].ref;\n    dom = element._refs[i];\n\n    // Fast path for text nodes\n    if (data.type === 0) {\n      // state node\n      newValue = element._state[data.text];\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    } else if (data.type === 1) {\n      // text node\n      newValue = evaluateBindings(data.text, element);\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    }\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key !== 'events') {\n          if (data.attributes[key].type === 0) {\n            newValue = element._state[data.attributes[key].text];\n          } else {\n            newValue = evaluateBindings(data.attributes[key].text, element);\n          }\n          updateAttribute(dom, key, newValue);\n        } else {\n          if (!dom._sifrrEventSet) {\n            for(let event in data.attributes.events) {\n              dom[event] = evaluateBindings(data.attributes.events[event], element);\n            }\n            dom._root = element;\n            dom._sifrrEventSet = true;\n          }\n        }\n      }\n    }\n\n    if (data.text === undefined) continue;\n\n    // update element\n    newValue = evaluateBindings(data.text, element);\n\n    if (!newValue || newValue.length === 0) { dom.textContent = ''; }\n    if (data.type === 3) {\n      // repeat\n      let key;\n      // eslint-disable-next-line no-inner-declarations\n      if (data.keyed && (key = dom.getAttribute(KEY_ATTR))) {\n        makeChildrenEqualKeyed(dom, newValue, data.se.sifrrClone.bind(data.se), key);\n      } else makeChildrenEqual(dom, newValue, data.se.sifrrClone.bind(data.se));\n    } else {\n      // html node\n      let children, isNode = false;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.content && newValue.content.nodeType === 11) {\n        children = newValue.content.childNodes;\n        isNode = true;\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else if (typeof newValue === 'string') {\n        const temp = TEMPLATE();\n        temp.innerHTML = newValue.toString();\n        children = temp.content.childNodes;\n        isNode = true;\n      } else {\n        children = Array.prototype.slice.call(newValue);\n      }\n      makeChildrenEqual(dom, children, undefined, isNode);\n    }\n  }\n}\n\nmodule.exports = update;\n","const template = require('./template');\nconst update = require('./update');\nconst { collect, create } = require('./ref');\nconst creator = require('./creator');\n\nfunction SimpleElement(content, defaultState = null) {\n  if (!content.nodeType && typeof content !== 'string') {\n    if (!content[0] || !content[0].nodeType) {\n      throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n    }\n  }\n  const templ = template(content);\n  content = templ.content.firstElementChild || templ.content.firstChild;\n  // Already sifrr element\n  if (content.isSifrr || content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') !== -1)\n  ) {\n    if (!content.isSifrr) {\n      // Render custom element if not rendered\n      window.document.body.appendChild(content);\n      window.document.body.removeChild(content);\n    }\n    return content;\n  }\n  const stateMap = create(content, creator, defaultState);\n\n  const stateProps = {\n    get: function() { return this._state; },\n    set: function(v) {\n      Object.assign(this._state, v);\n      update(this, stateMap);\n    }\n  };\n\n  content.sifrrClone = function(newState) {\n    const clone = content.cloneNode(true);\n    clone._refs = collect(clone, stateMap);\n    clone._state = Object.assign({}, defaultState, newState);\n    Object.defineProperty(clone, 'state', stateProps);\n    update(clone, stateMap);\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const simpleElement = require('./simpleelement');\nconst { getBindingFxns } = require('./bindings');\nconst { KEY_ATTR } = require('./constants');\n\nmodule.exports = (sm, el, attr) => {\n  sm.type = 3;\n  let defaultState;\n  if (el.hasAttribute('data-sifrr-default-state')) defaultState = JSON.parse(el.getAttribute('data-sifrr-default-state'));\n  sm.se = simpleElement(el.childNodes, defaultState);\n  sm.text = getBindingFxns(el.getAttribute(attr));\n  sm.keyed = el.hasAttribute(KEY_ATTR);\n  el.textContent = '';\n  el.removeAttribute(attr);\n};\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE, HTML_ATTR, REPEAT_ATTR } = require('./constants');\nconst repeatref = require('./repeatref');\n// ref types:\n// 0: state\n// 1: text\n// 2: html\n// 3: arrayToDom\nconst { getBindingFxns, getStringBindingFxn } = require('./bindings');\nconst updateAttribute = require('./updateattribute');\n\nfunction isHtml(el) {\n  return el.hasAttribute && el.hasAttribute(HTML_ATTR);\n}\n\nfunction creator(el, defaultState) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    const x = el.data;\n    if (x.indexOf('${') > -1) {\n      const binding = getStringBindingFxn(x.trim());\n      if (typeof binding !== 'string') {\n        // text node\n        return {\n          type: 1,\n          text: binding\n        };\n      } else {\n        if (defaultState) el.data = defaultState[binding];\n        // state node\n        return {\n          type: 0,\n          text: binding\n        };\n      }\n    }\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (isHtml(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.type = 2;\n        sm.text = getBindingFxns(innerHTML.replace(/<!--((?:(?!-->).)+)-->/g, '$1').trim());\n      }\n      el.textContent = '';\n    } else if (el.hasAttribute(REPEAT_ATTR)) {\n      repeatref(sm, el, REPEAT_ATTR);\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '_' && attribute.value.indexOf('${') >= 0) {\n        attrStateMap.events[attribute.name] = getBindingFxns(attribute.value);\n      } else if (attribute.value.indexOf('${') >= 0) {\n        // Don't treat style differently because same performance https://jsperf.com/style-property-vs-style-attribute/2\n        const binding = getStringBindingFxn(attribute.value);\n        if (typeof binding !== 'string') {\n          // text attr\n          attrStateMap[attribute.name] = {\n            type: 1,\n            text: binding\n          };\n        } else {\n          // state attr\n          attrStateMap[attribute.name] = {\n            type: 0,\n            text: binding\n          };\n          if (defaultState) updateAttribute(el, attribute.name, defaultState[binding]);\n        }\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = creator;\n","const template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!window.fetch) throw Error('Sifrr.Dom.load requires Fetch API to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = window.fetch(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = window.fetch(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) throw Error(`'${this.elementName}' element's javascript was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script + `\\n //# sourceURL=${this.jsUrl}`).call();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file for '${this.elementName}' gave error. Trying to get html file.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((content) => {\n      content.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text + `\\n //# sourceURL=${this.htmlUrl}`).call({ currentTempate: content.querySelector('template') });\n        }\n      });\n    });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst creator = require('./creator');\nconst update = require('./update');\nconst Loader = require('./loader');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      if (this._ctemp) return this._ctemp;\n      this._ctemp = this.template;\n      if (this._ctemp) {\n        if (this.useShadowRoot && window.ShadyCSS && !window.ShadyCSS.nativeShadow) {\n          window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        }\n        this.stateMap = create(this._ctemp.content, creator, this.defaultState);\n      }\n      return this._ctemp;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.ctemp.content.cloneNode(true);\n        this._refs = collect(content, this.constructor.stateMap);\n        if (this.constructor.useShadowRoot) {\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(this.__content) {\n        if (this.childNodes.length !== 0) this.textContent = '';\n        this.appendChild(this.__content);\n        delete this.__content;\n      }\n      if (!this.hasAttribute('data-sifrr-state')) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      return this._state;\n    }\n\n    set state(v) {\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n      this.onUpdate();\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(state) {\n      const clone = this.cloneNode(false);\n      clone._state = Object.assign({}, this.constructor.defaultState, state);\n      return clone;\n    }\n\n    clearState() {\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Inspired from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  const target = e.composedPath ? e.composedPath()[0] : e.target;\n  let dom = target;\n  while(dom) {\n    const eventHandler = dom[`_${name}`] || (dom.hasAttribute ? dom.getAttribute(`_${name}`) : null);\n    if (typeof eventHandler === 'function') {\n      eventHandler.call(dom._root || window, e, target);\n    } else if (typeof eventHandler === 'string') {\n      new Function('event', 'target', eventHandler).call(dom._root || window, event, target);\n    }\n    cssMatchEvent(e, name, dom, target);\n    dom = dom.parentNode || dom.host;\n  }\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  Promise.resolve((() => {\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  })());\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts,\n  nativeToSyntheticEvent\n};\n\nmodule.exports = Event;\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.twoWayBind = require('./dom/twowaybind');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\nSifrrDom.makeChildrenEqual = require('./dom/makeequal').makeChildrenEqual;\nSifrrDom.makeChildrenEqualKeyed = require('./dom/keyed').makeChildrenEqualKeyed;\nSifrrDom.makeEqual = require('./dom/makeequal').makeEqual;\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  HTMLElement.prototype.$ = HTMLElement.prototype.querySelector;\n  HTMLElement.prototype.$$ = HTMLElement.prototype.querySelectorAll;\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.twoWayBind);\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  if (window.customElements.get(elemName)) { return Promise.resolve(window.console.warn(`Error loading Element: ${elemName} - Custom Element with this name is already defined.`)); }\n  let loader = new SifrrDom.Loader(elemName, url);\n  const wd = customElements.whenDefined(elemName);\n  SifrrDom.loadingElements.push(wd);\n  return loader.executeScripts(js).then(() => {\n    if (!window.customElements.get(elemName)) {\n      window.console.warn(`Executing '${elemName}' file didn't register the element. Ignore if you are registering element in a promise or async function.`);\n      SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    }\n  }).catch(e => {\n    SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    throw e;\n  });\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n","module.exports = (e) => {\n  const target = e.composedPath ? e.composedPath()[0] : e.target;\n  if (!target.hasAttribute('data-sifrr-bind') || target._root === null) return;\n  const value = target.value || target.textContent;\n  let state = {};\n  if (!target._root) {\n    let root;\n    root = target;\n    while(root && !root.isSifrr) root = root.parentNode || root.host;\n    if (root) target._root = root;\n    else target._root = null;\n  }\n  state[target.getAttribute('data-sifrr-bind')] = value;\n  if (target._root) target._root.state = state;\n};\n"],"names":["temp","window","document","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","OUTER_REGEX","RegExp","STATE_REGEX","HTML_ATTR","REPEAT_ATTR","KEY_ATTR","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","require$$0","collect","element","stateMap","refs","l","length","n","node","currentNode","i","idx","nextNode","push","create","fxn","passedArg","ref","ntr","indices","nodeType","data","trim","remove","str","extra","tmp","Array","from","forEach","s","content","appendChild","String","raw","replace","innerHTML","name","newValue","hasAttribute","removeAttribute","className","getAttribute","setAttribute","shallowEqual","a","b","key","require$$1","makeChildrenEqual","parent","newChildren","createFn","isNode","newL","oldL","childNodes","removeChild","lastChild","item","head","firstChild","curNewChild","nextSibling","makeEqual","oldNode","newNode","_state","state","nodeName","replaceWith","oldAttrs","attributes","newAttrs","updateAttribute","value","j","undefined","longestPositiveIncreasingSubsequence","ns","newStart","seq","is","pre","len","findGreatestIndexLEQ","lo","hi","mid","Math","floor","makeChildrenEqualKeyed","newData","finalNode","_node","prevStart","loop","prevEnd","newEnd","prevStartNode","prevEndNode","fixes","previousSibling","insertBefore","next","oldKeys","newKeys","Map","nodes","toDelete","set","reusingNodes","has","get","longestSeq","tmpD","lisIdx","replacer","match","f","indexOf","Function","e","console","log","evaluate","el","call","toString","slice","lastIndexOf","error","Bindings","getBindingFxns","string","splitted","split","ret","getStringBindingFxn","evaluateBindings","fxns","map","join","require$$2","require$$3","_refs","dom","constructor","type","text","_sifrrEventSet","event","events","_root","textContent","keyed","se","sifrrClone","bind","children","isArray","prototype","defaultState","TypeError","templ","template","firstElementChild","isSifrr","body","creator","stateProps","this","v","Object","assign","update","newState","clone","defineProperty","sm","attr","JSON","parse","simpleElement","x","binding","isHtml","repeatref","attrs","attrStateMap","attribute","keys","Loader","elemName","url","fetch","Error","all","elementName","_html","add","me","htmlUrl","then","resp","file","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","executeScripts","js","_executed","catch","executeHTMLScripts","html","querySelectorAll","src","newScript","currentTempate","instance","_all","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","useShadowRoot","ShadyCSS","nativeShadow","prepareTemplate","toLowerCase","useSR","ctemp","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","onAttributeChange","onStateChange","onUpdate","clearState","$","args","sr","$$","HTMLElement","SYNTHETIC_EVENTS","opts","capture","passive","nativeToSyntheticEvent","target","composedPath","eventHandler","cssMatchEvent","parentNode","host","callEach","Promise","resolve","css","matches","addEventListener","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","twoWayBind","root","SimpleElement","require$$4","require$$5","require$$6","require$$7","register","customElements","define","elements","message","trace","setup","load","warn","loader","wd","whenDefined","loadingElements","loading"],"mappings":"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"}