{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/ref.js","../src/dom/constants.js","../src/dom/template.js","../src/dom/custom/updateattribute.js","../src/dom/simple/update.js","../src/dom/simple/creator.js","../src/dom/simple/element.js","../src/dom/bindings.js","../src/dom/custom/creator.js","../src/dom/custom/parser.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/keyed.js","../src/dom/custom/update.js","../src/dom/loader.js","../src/dom/custom/element.js","../src/dom/event.js","../src/sifrr.dom.js"],"sourcesContent":["// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\n\nTREE_WALKER.nextNonfilterNode = function(fxn) {\n  let node = this.currentNode;\n  if (fxn && fxn(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nTREE_WALKER.roll = function(n, filter) {\n  let node = this.currentNode;\n  while(--n) {\n    node = this.nextNonfilterNode(filter);\n  }\n  return node;\n};\n\nclass Ref {\n  constructor(idx, ref) {\n    this.idx = idx;\n    this.ref = ref;\n  }\n}\n\nfunction collect(element, stateMap, filter = false) {\n  const refs = [], l = stateMap.length;\n  TREE_WALKER.currentNode = element;\n  for (let i = 0; i < l; i++) {\n    refs.push(TREE_WALKER.roll(stateMap[i].idx, filter));\n  }\n  return refs;\n}\n\nfunction create(node, fxn, filter = false) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node, filter)) {\n      indices.push(new Ref(idx+1, ref));\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = TREE_WALKER.nextNonfilterNode(filter);\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create,\n  Ref\n};\n","const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\nconst reg = '(\\\\${(?:(?:[^{}$]|{(?:[^{}$])*})*)})';\n\nmodule.exports = {\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1,\n  OUTER_REGEX: new RegExp(reg, 'g'),\n  HTML_ATTR: 'data-sifrr-html',\n  REPEAT_ATTR: 'data-sifrr-repeat',\n  KEY_ATTR: 'data-sifrr-key'\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else if (str.nodeType && !str.content) {\n    tmp.content.appendChild(str);\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  const fromValue = element.getAttribute(name);\n  if (newValue === false || newValue === null || newValue === undefined) element.removeAttribute(name);\n  else if (fromValue !== newValue) {\n    if (name === 'class') element.className = newValue;\n    else element.setAttribute(name, newValue);\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n};\n","const updateAttribute = require('../custom/updateattribute');\n\nfunction simpleElementUpdate(simpleEl) {\n  const doms = simpleEl._refs, refs = simpleEl.stateMap, l = refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = refs[i].ref, dom = doms[i];\n    if (Array.isArray(data)) {\n      const l = data.length;\n      for (let i = 0; i < l; i++) {\n        updateAttribute(dom, data[i].name, simpleEl.state[data[i].text]);\n      }\n    } else {\n      if (dom.data != simpleEl.state[data]) dom.data = simpleEl.state[data] || '';\n    }\n  }\n}\n\nmodule.exports = simpleElementUpdate;\n","const { ELEMENT_NODE } = require('../constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reuseNodes.js\nfunction simpleElementCreator(node) {\n  if (node.nodeType === ELEMENT_NODE) {\n    const attrs = Array.prototype.slice.call(node.attributes), l = attrs.length;\n    const ret = [];\n    for (let i = 0; i < l; i++) {\n      const avalue = attrs[i].value;\n      if (avalue[0] === '$') {\n        ret.push({\n          name: attrs[i].name,\n          text: avalue.slice(2, -1)\n        });\n        node.setAttribute(attrs[i].name, '');\n      }\n    }\n    if (ret.length > 0) return ret;\n    return 0;\n  } else {\n    let nodeData = node.data;\n    if (nodeData[0] === '$') {\n      node.data = '';\n      return nodeData.slice(2, -1);\n    }\n    return 0;\n  }\n}\n\nmodule.exports = simpleElementCreator;\n","const { collect, create } = require('../ref');\nconst template = require('../template');\nconst update = require('./update');\nconst creator = require('./creator');\n\nfunction SimpleElement(content, defaultState = null) {\n  if (!content.nodeType && typeof content !== 'string') {\n    if (!content[0] || !content[0].nodeType) {\n      throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n    }\n  }\n  const templ = template(content);\n  content = templ.content.firstElementChild || templ.content.firstChild;\n  // Already sifrr element\n  if (content.isSifrr || content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') !== -1)\n  ) {\n    return content;\n  }\n  const stateMap = create(content, creator);\n  function setProps(me) {\n    me.stateMap = stateMap;\n    me._refs = collect(me, stateMap);\n    Object.defineProperty(me, 'state', {\n      get: () => me._state,\n      set: (v) => {\n        me._state = Object.assign(me._state || {}, v);\n        update(me);\n      }\n    });\n  }\n  setProps(content);\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep = true, newState) {\n    const clone = content.cloneNode(deep);\n    setProps(clone);\n    if (newState) clone.state = newState;\n    else if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const { OUTER_REGEX } = require('./constants');\n\nfunction replacer(match) {\n  let f;\n  if (match.indexOf('return ') >= 0) {\n    f = match;\n  } else {\n    f = 'return ' + match;\n  }\n  try {\n    return new Function(f);\n  } catch(e) {\n    window.console.log(`Error processing binding: \\`${f}\\``);\n    return '';\n  }\n}\n\nfunction evaluate(fxn, el) {\n  try {\n    if (typeof fxn === 'string') return fxn;\n    else return fxn.call(el);\n  } catch(e) {\n    const str = fxn.toString();\n    window.console.log(`Error evaluating: \\`${str.slice(str.indexOf('{') + 1, str.lastIndexOf('}'))}\\` for element`, el);\n    window.console.error(e);\n  }\n}\n\nmodule.exports = {\n  getBindingFxns: (string) => {\n    const splitted = string.split(OUTER_REGEX), l = splitted.length, ret = [];\n    for (let i = 0; i < l; i++) {\n      if (splitted[i][0] === '$' && splitted[i][1] === '{') {\n        ret.push(replacer(splitted[i].slice(2, -1)));\n      } else if (splitted[i]) ret.push(splitted[i]);\n    }\n    return ret;\n  },\n  evaluateBindings: (fxns, element) => {\n    if (fxns.length === 1) {\n      return evaluate(fxns[0], element);\n    }\n    return fxns.map(fxn => evaluate(fxn, element)).join('');\n  },\n  evaluate: evaluate,\n  replacer: replacer\n};\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE, REPEAT_ATTR } = require('../constants');\nconst simpleElement = require('../simple/element');\n// ref types:\n// 0: text\n// 1: html\n// 2: arrayToDom\nconst { getBindingFxns } = require('../bindings');\n\nfunction customElementCreator(el, filter) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    // text node\n    const x = el.data;\n    if (x.indexOf('${') > -1) return {\n      type: 0,\n      text: getBindingFxns(x.trim())\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (filter(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.type = 1;\n        sm.text = getBindingFxns(innerHTML.replace(/<!--((?:(?!-->).)+)-->/g, '$1').trim());\n      }\n    } else if (el.hasAttribute(REPEAT_ATTR)) {\n      sm.type = 2;\n      sm.se = simpleElement(el.childNodes);\n      sm.text = getBindingFxns(el.getAttribute(REPEAT_ATTR));\n      el.removeAttribute(REPEAT_ATTR);\n      el.textContent = '';\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '_') {\n        attrStateMap.events[attribute.name] = getBindingFxns(attribute.value);\n      } else if (attribute.value.indexOf('${') >= 0) {\n        // Don't treat style differently because same performance https://jsperf.com/style-property-vs-style-attribute/2\n        attrStateMap[attribute.name] = getBindingFxns(attribute.value);\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = {\n  creator: customElementCreator\n};\n","const { collect, create } = require('../ref');\nconst { creator } = require('./creator');\nconst { ELEMENT_NODE, HTML_ATTR } = require('../constants');\n\nfunction isHtml(el) {\n  return el.nodeType === ELEMENT_NODE && el.hasAttribute(HTML_ATTR);\n}\n\nconst Parser = {\n  collectRefs: (el, stateMap) => collect(el, stateMap, isHtml),\n  createStateMap: (element) => create(element, creator, isHtml),\n  twoWayBind: (e) => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    if (!target.hasAttribute('data-sifrr-bind') || target._root === null) return;\n    const value = target.value || target.textContent;\n    let state = {};\n    if (!target._root) {\n      let root;\n      root = target;\n      while(root && !root.isSifrr) root = root.parentNode || root.host;\n      if (root) target._root = root;\n      else target._root = null;\n    }\n    state[target.getAttribute('data-sifrr-bind')] = value;\n    if (target._root) target._root.state = state;\n  }\n};\n\nmodule.exports = Parser;\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./custom/updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\nfunction makeChildrenEqual(parent, newChildren, createFn) {\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  // Fast path for clear\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // Fast path for create\n  if (oldL === 0) {\n    let addition;\n    for(let i = 0; i < newL; i++) {\n      addition = newChildren[i];\n      if (!newChildren[i].nodeType) addition = createFn(newChildren[i]);\n      parent.appendChild(addition);\n    }\n    return;\n  }\n\n  // Lesser children now\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL, addition;\n    while(i < newL) {\n      addition = newChildren[i];\n      if (!newChildren[i].nodeType) addition = createFn(newChildren[i]);\n      parent.appendChild(addition);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (!newNode.nodeType) {\n    if (!shallowEqual(oldNode.state, newNode)) {\n      oldNode.state = newNode;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name)) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, Array.prototype.slice.call(newNode.childNodes));\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","/* eslint-disable max-lines */\nconst { makeEqual } = require('./makeequal');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reconcile.js\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses manipukates dom only when required\n\nfunction makeChildrenEqualKeyed(parent, newData, createFn = (x) => x, key) {\n  // Fast path for clear\n  const newL = newData.length;\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // Fast path for create\n  const oldL = parent.childNodes.length;\n  if (oldL === 0) {\n    for(let i = 0; i < newL; i++) {\n      parent.appendChild(createFn(newData[i]));\n    }\n    return;\n  }\n\n  const oldData = []; let _node = parent.firstChild;\n  while(_node) {\n    oldData.push(_node.state);\n    _node = _node.nextSibling;\n  }\n\n  // reconciliation\n  let prevStart = 0,\n    newStart = 0,\n    loop = true,\n    prevEnd = oldL - 1, newEnd = newL - 1,\n    prevStartNode = parent.firstChild,\n    prevEndNode = parent.lastChild,\n    finalNode,\n    a, b;\n\n  fixes: while(loop) {\n    loop = false;\n\n    // Skip prefix\n    a = oldData[prevStart], b = newData[newStart];\n    while(a[key] === b[key]) {\n      makeEqual(prevStartNode, b);\n      prevStart++;\n      prevStartNode = prevStartNode.nextSibling;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevStart], b = newData[newStart];\n    }\n\n    // Skip suffix\n    a = oldData[prevEnd], b = newData[newEnd];\n    while(a[key] === b[key]) {\n      makeEqual(prevEndNode, b);\n      prevEnd--;\n      finalNode = prevEndNode;\n      prevEndNode = prevEndNode.previousSibling;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevEnd], b = newData[newEnd];\n    }\n\n    // Fast path to swap backward\n    a = oldData[prevEnd], b = newData[newStart];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevEndNode, b);\n      _node = prevEndNode.previousSibling;\n      parent.insertBefore(prevEndNode, prevStartNode);\n      prevEndNode = _node;\n      prevEnd--;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevEnd], b = newData[newStart];\n    }\n\n    // Fast path to swap forward\n    a = oldData[prevStart], b = newData[newEnd];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevStartNode, b);\n      _node = prevStartNode.nextSibling;\n      parent.insertBefore(prevStartNode, prevEndNode.nextSibling);\n      finalNode = prevStartNode;\n      prevEndNode = prevStartNode.previousSibling;\n      prevStartNode = _node;\n      prevStart++;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = oldData[prevStart], b = newData[newEnd];\n    }\n  }\n\n  // Fast path for shrink\n  if (newEnd < newStart) {\n    if (prevStart <= prevEnd) {\n      let next;\n      while(prevStart <= prevEnd) {\n        if (prevEnd === 0) {\n          parent.removeChild(prevEndNode);\n        } else {\n          next = prevEndNode.previousSibling;\n          parent.removeChild(prevEndNode);\n          prevEndNode = next;\n        }\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  // Fast path for add\n  if (prevEnd < prevStart) {\n    if (newStart <= newEnd) {\n      while(newStart <= newEnd) {\n        _node = createFn(newData[newStart]);\n        parent.insertBefore(_node, prevEndNode.nextSibling);\n        prevEndNode = _node;\n        newStart++;\n      }\n    }\n    return;\n  }\n\n  const oldKeys = new Array(newEnd + 1 - newStart), newKeys = new Map(), toDelete = [];\n\n  for(let i = newStart; i <= newEnd; i++) {\n    // Positions for reusing nodes from current DOM state\n    oldKeys[i] = -1;\n    // Index to resolve position from current to new\n    newKeys.set(newData[i][key], i);\n  }\n\n  let reusingNodes = 0;\n  for(let i = prevStart; i <= prevEnd; i++) {\n    if (newKeys.has(oldData[i][key])) {\n      oldKeys[newKeys.get(oldData[i][key])] = i;\n      reusingNodes++;\n    } else {\n      toDelete.push(i);\n    }\n  }\n\n  // Fast path for full replace\n  if (reusingNodes === 0) {\n    for(let i = newStart; i <= newEnd; i++) {\n      // Add extra nodes\n      if (i > prevEnd) {\n        parent.insertBefore(createFn(newData[i]), prevStartNode);\n      } else {\n        _node = prevStartNode.nextSibling;\n        prevStartNode.replaceWith(createFn(newData[i]));\n        prevStartNode = _node;\n      }\n    }\n    // Remove extra nodes\n    if (newEnd < prevEnd) {\n      while (newEnd < prevEnd) {\n        _node = prevEndNode.previousSibling;\n        parent.removeChild(prevEndNode);\n        prevEndNode = _node;\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  const longestSeq = longestPositiveIncreasingSubsequence(oldKeys, newStart);\n\n  const nodes = [];\n  while(prevStart <= prevEnd) {\n    nodes[prevStart] = prevStartNode;\n    prevStartNode = prevStartNode.nextSibling;\n    prevStart++;\n  }\n\n  let lisIdx = longestSeq.length - 1, tmpD;\n  for(let i = newEnd; i >= newStart; i--) {\n    if(longestSeq[lisIdx] === i) {\n      finalNode = nodes[oldKeys[i]];\n      makeEqual(finalNode, newData[i]);\n      lisIdx--;\n    } else {\n      if (oldKeys[i] === -1) {\n        tmpD = createFn(newData[i]);\n      } else {\n        tmpD = nodes[oldKeys[i]];\n        makeEqual(tmpD, newData[i]);\n      }\n      parent.insertBefore(tmpD, finalNode);\n      finalNode = tmpD;\n    }\n  }\n\n  for(let i = 0; i < toDelete.length; i++) {\n    parent.removeChild(nodes[toDelete[i]]);\n  }\n}\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n  let seq = [],\n    is  = [],\n    l   = -1,\n    pre = new Array(ns.length);\n\n  for (let i = newStart, len = ns.length; i < len; i++) {\n    let n = ns[i];\n    if (n < 0) continue;\n    let j = findGreatestIndexLEQ(seq, n);\n    if (j !== -1) pre[i] = is[j];\n    if (j === l) {\n      l++;\n      seq[l] = n;\n      is[l]  = i;\n    } else if (n < seq[j + 1]) {\n      seq[j + 1] = n;\n      is[j + 1] = i;\n    }\n  }\n\n  for (let i = is[l]; l >= 0; i = pre[i], l--) {\n    seq[l] = i;\n  }\n\n  return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n  // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n  // therefore, they actually start out of range: (-1, last + 1)\n  let lo = -1,\n    hi = seq.length;\n\n  // fast path for simple increasing sequences\n  if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n  while (hi - lo > 1) {\n    let mid = Math.floor((lo + hi) / 2);\n    if (seq[mid] > n) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n\n  return lo;\n}\n\nmodule.exports = {\n  makeChildrenEqualKeyed,\n  longestPositiveIncreasingSubsequence\n};\n","const { makeChildrenEqual } = require('../makeequal');\nconst { makeChildrenEqualKeyed } = require('../keyed');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateBindings } = require('../bindings');\nconst { TEMPLATE, KEY_ATTR } = require('../constants');\n\nfunction customElementUpdate(element) {\n  if (!element._refs) {\n    return false;\n  }\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = element.constructor.stateMap[i].ref;\n    const dom = element._refs[i];\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key === 'events') {\n          for(let event in data.attributes.events) {\n            const eventLis = evaluateBindings(data.attributes.events[event], element);\n            dom[event] = eventLis;\n          }\n          dom._root = element;\n          delete data.attributes['events'];\n        } else {\n          const val = evaluateBindings(data.attributes[key], element);\n          updateAttribute(dom, key, val);\n        }\n      }\n    }\n\n    if (data.text === undefined) continue;\n\n    // update element\n    const newValue = evaluateBindings(data.text, element);\n\n    if (data.type === 2) {\n      const key = dom.getAttribute(KEY_ATTR);\n      if (key) makeChildrenEqualKeyed(dom, newValue, (state) => data.se.sifrrClone(true, state), key);\n      else makeChildrenEqual(dom, newValue, (state) => data.se.sifrrClone(true, state));\n      dom.sifrrOldState = newValue;\n    } else if (data.type === 1) {\n      // html node\n      let children;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.content && newValue.content.nodeType === 11) {\n        children = Array.prototype.slice.call(newValue.content.childNodes);\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else if (typeof newValue === 'string') {\n        const temp = TEMPLATE();\n        temp.innerHTML = newValue.toString();\n        children = Array.prototype.slice.call(temp.content.childNodes);\n      } else {\n        children = Array.prototype.slice.call(newValue);\n      }\n      makeChildrenEqual(dom, children);\n    } else {\n      // text node\n      if (dom.data != newValue) {\n        dom.data = newValue;\n      }\n    }\n  }\n  element.onUpdate();\n}\n\nmodule.exports = customElementUpdate;\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) return window.console.log(`'${this.elementName}' element's javascript was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script + `\\n //# sourceURL=${this.jsUrl}`).call();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file for '${this.elementName}' gave error. Trying to get html file.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text + `\\n //# sourceURL=${this.htmlUrl}`).call({ currentTempate: file.querySelector('template') });\n        }\n      });\n    }).catch(e => { throw e; });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const Parser = require('./parser');\nconst update = require('./update');\nconst Loader = require('../loader');\nconst { makeChildrenEqual } = require('../makeequal');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      this._ctemp = this._ctemp || this.template;\n      if (window.ShadyCSS && this.useShadowRoot && !this._ctemp.shady) {\n        window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        this._ctemp.shady = true;\n      }\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.ctemp.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const stateMap = this.constructor.stateMap, content = this.constructor.ctemp.content.cloneNode(true);\n        this._refs = Parser.collectRefs(content, stateMap);\n        if (this.constructor.useShadowRoot) {\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useShadowRoot && this.__content) {\n        makeChildrenEqual(this, Array.prototype.slice.call(this.__content.childNodes));\n        delete this.__content;\n      }\n      if (!this.hasAttribute('data-sifrr-state')) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      return this._state;\n    }\n\n    set state(v) {\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep, state) {\n      const clone = this.cloneNode(deep);\n      clone._state = state;\n      return clone;\n    }\n\n    clearState() {\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Inspired from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    let dom = target;\n    while(dom) {\n      const eventHandler = dom[`_${name}`] || (dom.getAttribute ? dom.getAttribute(`_${name}`) : null);\n      if (typeof eventHandler === 'function') {\n        eventHandler.call(dom._root || window, e, target);\n      } else if (typeof eventHandler === 'string') {\n        new Function('event', 'target', eventHandler).call(dom._root || window, event, target);\n      }\n      cssMatchEvent(e, name, dom, target);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts,\n  nativeToSyntheticEvent\n};\n\nmodule.exports = Event;\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/custom/element');\nSifrrDom.Parser = require('./dom/custom/parser');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simple/element');\nSifrrDom.Event = require('./dom/event');\n\nSifrrDom.makeEqual = require('./dom/makeequal');\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  HTMLElement.prototype.$ = HTMLElement.prototype.querySelector;\n  HTMLElement.prototype.$$ = HTMLElement.prototype.querySelectorAll;\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  if (window.customElements.get(elemName)) { return window.console.warn(`Error loading Element: ${elemName} - Custom Element with this name is already defined.`); }\n  let loader = new SifrrDom.Loader(elemName, url);\n  const wd = customElements.whenDefined(elemName);\n  SifrrDom.loadingElements.push(wd);\n  return loader.executeScripts(js).then(() => {\n    if (!window.customElements.get(elemName)) {\n      window.console.warn(`Executing '${elemName}' file didn't register the element. Ignore if you are registering element in a promise or async function.`);\n    }\n  }).catch(e => {\n    SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    window.console.error(e);\n  });\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["TREE_WALKER","window","document","createTreeWalker","NodeFilter","SHOW_ALL","nextNonfilterNode","fxn","node","this","currentNode","nextSibling","parentNode","nextNode","roll","n","filter","Ref","constructor","idx","ref","collect","element","stateMap","refs","l","length","i","push","create","indices","temp","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","OUTER_REGEX","RegExp","HTML_ATTR","REPEAT_ATTR","KEY_ATTR","require$$0","str","extra","tmp","Array","from","forEach","s","content","appendChild","nodeType","String","raw","replace","innerHTML","name","newValue","fromValue","getAttribute","removeAttribute","className","setAttribute","nodeName","value","simpleEl","doms","_refs","data","dom","isArray","updateAttribute","state","text","attrs","prototype","slice","call","attributes","ret","avalue","nodeData","defaultState","TypeError","templ","template","firstElementChild","firstChild","isSifrr","indexOf","creator","setProps","me","Object","defineProperty","get","_state","set","v","assign","update","sifrrClone","deep","newState","clone","replacer","match","f","Function","e","console","log","evaluate","el","toString","lastIndexOf","error","getBindingFxns","string","splitted","split","evaluateBindings","fxns","map","join","require$$1","x","type","trim","sm","hasAttribute","se","simpleElement","childNodes","textContent","attrStateMap","events","attribute","keys","require$$2","isHtml","collectRefs","createStateMap","twoWayBind","target","composedPath","_root","root","host","shallowEqual","a","b","key","makeChildrenEqual","parent","newChildren","createFn","oldL","newL","addition","removeChild","lastChild","Math","min","item","head","makeEqual","oldNode","newNode","replaceWith","attr","oldAttrs","newAttrs","j","longestPositiveIncreasingSubsequence","ns","newStart","seq","is","pre","len","findGreatestIndexLEQ","lo","hi","mid","floor","makeChildrenEqualKeyed","newData","oldData","_node","finalNode","prevStart","loop","prevEnd","newEnd","prevStartNode","prevEndNode","fixes","previousSibling","insertBefore","next","oldKeys","newKeys","Map","toDelete","reusingNodes","has","longestSeq","nodes","tmpD","lisIdx","require$$3","event","eventLis","val","undefined","sifrrOldState","children","onUpdate","Loader","elemName","url","fetch","Error","all","elementName","_html","add","file","htmlUrl","then","resp","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","executeScripts","js","_executed","catch","executeHTMLScripts","html","querySelectorAll","src","newScript","body","currentTempate","instance","_all","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","ShadyCSS","useShadowRoot","shady","prepareTemplate","_stateMap","Parser","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JSON","parse","onAttributeChange","onStateChange","clearState","$","args","sr","$$","HTMLElement","SYNTHETIC_EVENTS","opts","capture","passive","nativeToSyntheticEvent","Promise","resolve","eventHandler","cssMatchEvent","callEach","css","matches","addEventListener","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","SimpleElement","require$$4","require$$5","require$$6","register","customElements","define","elements","message","trace","setup","load","warn","loader","wd","whenDefined","loadingElements","loading"],"mappings":"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"}