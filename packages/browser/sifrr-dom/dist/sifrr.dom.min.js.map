{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/ref.js","../src/dom/constants.js","../src/dom/creator.js","../src/dom/parser.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/update.js","../src/dom/template.js","../src/dom/loader.js","../src/dom/simpleelement.js","../src/dom/event.js","../src/dom/element.js","../src/sifrr.dom.js"],"sourcesContent":["// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\n\nTREE_WALKER.nextNonfilterNode = function(fxn) {\n  let node = this.currentNode;\n  if (fxn && fxn(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nTREE_WALKER.roll = function(n, filter) {\n  let node = this.currentNode;\n  while(--n) {\n    node = this.nextNonfilterNode(filter);\n  }\n  return node;\n};\n\nclass Ref {\n  constructor(idx, ref) {\n    this.idx = idx;\n    this.ref = ref;\n  }\n}\n\nfunction collect(element, stateMap, filter = false) {\n  const refs = [];\n  TREE_WALKER.currentNode = element;\n  stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n  return refs;\n}\n\nfunction create(node, fxn, filter = false) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node, filter)) {\n      indices.push(new Ref(idx+1, ref));\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = TREE_WALKER.nextNonfilterNode(filter);\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create,\n  Ref\n};\n","const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\n// const sfn = window.document.createElement('sifrr-node');\n\nmodule.exports = {\n  // SIFRR_NODE: () => sfn.cloneNode(),\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1\n};\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE } = require('./constants');\n\nfunction simpleElementCreator(node) {\n  if (node.nodeType === ELEMENT_NODE) {\n    if (node.attributes !== undefined) {\n      const attrs = Array.from(node.attributes), l = attrs.length;\n      const ret = [];\n      for (let i = 0; i < l; i++) {\n        const avalue = attrs[i].value;\n        if (avalue[0] === '$') {\n          ret.push({\n            name: attrs[i].name,\n            text: avalue.slice(2, -1)\n          });\n          node.setAttribute(attrs[i].name, '');\n        }\n      }\n      if (ret.length > 0) return ret;\n    }\n    return 0;\n  } else {\n    let nodeData = node.data;\n    if (nodeData[0] === '$') {\n      node.data = '';\n      return nodeData.slice(2, -1);\n    }\n    return 0;\n  }\n}\n\nfunction customElementCreator(el, filter) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    // text node\n    const x = el.data;\n    if (x.indexOf('${') > -1) return {\n      html: false,\n      text: x\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (filter(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.html = true;\n        sm.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n      }\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '$') {\n        attrStateMap.events[attribute.name] = attribute.value;\n      } else if (attribute.value.indexOf('${') >= 0) {\n        if (attribute.name === 'style') {\n          const styles = {};\n          attribute.value.split(';').forEach((s) => {\n            const [n, v] = s.split(/:(?!\\/\\/)/);\n            if (n && v && v.indexOf('${') >= 0) {\n              styles[n.trim()] = v.trim();\n            }\n          });\n          attrStateMap[attribute.name] = styles;\n        } else {\n          attrStateMap[attribute.name] = attribute.value;\n        }\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = {\n  creator: customElementCreator,\n  simpleCreator: simpleElementCreator\n};\n","const { collect, create } = require('./ref');\nconst { creator } = require('./creator');\n\nfunction isHtml(el) {\n  return (el.dataset && el.dataset.sifrrHtml == 'true') ||\n    el.nodeName == 'STYLE' ||\n    (el.dataset && el.dataset.sifrrRepeat);\n}\n\nconst Parser = {\n  collectRefs: (el, stateMap) => collect(el, stateMap, isHtml),\n  createStateMap: (element) => create(element, creator, isHtml),\n  twoWayBind: (e) => {\n    const target = e.path ? e.path[0] : e.target;\n    if (!target.dataset.sifrrBind) return;\n    const value = target.value || target.textContent;\n    let state = {};\n    let root;\n    if (target._root) {\n      root = target._root;\n    } else {\n      root = target;\n      while(!root.isSifrr) root = root.parentNode || root.host;\n      target._root = root;\n    }\n    state[target.dataset.sifrrBind] = value;\n    root.state = state;\n  },\n  evaluateString: (string, element) => {\n    if (string.indexOf('${') < 0) return string;\n    string = string.trim();\n    if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n    return replacer('`' + string + '`');\n\n    function replacer(match) {\n      if (match[0] == '$') match = match.slice(2, -1);\n      let f;\n      if (match.indexOf('return ') >= 0) {\n        f = new Function(match).bind(element);\n      } else {\n        f = new Function('return ' + match).bind(element);\n      }\n      return f();\n    }\n  }\n};\n\nmodule.exports = Parser;\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  const fromValue = element.getAttribute(name);\n  if (fromValue != newValue) {\n    // values are always cast to strings\n    if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n      if (fromValue) element.removeAttribute(name);\n    } else {\n      element.setAttribute(name, newValue);\n    }\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reuseNodes.js\nfunction makeChildrenEqual(parent, newChildren) {\n  // Lesser children now\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL;\n    while(i < newL) {\n      parent.appendChild(newChildren[i]);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (!newNode) return oldNode;\n  if (newNode.type === 'stateChange') {\n    if (!shallowEqual(oldNode.state, newNode.state)) {\n      oldNode.state = newNode.state;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, newNode.childNodes);\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","const { makeChildrenEqual } = require('./makeequal');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateString } = require('./parser');\nconst TEMPLATE = require('./constants').TEMPLATE();\n\nfunction simpleElementUpdate(simpleEl) {\n  const doms = simpleEl._refs, refs = simpleEl.stateMap, l = refs.length;\n  const newState = simpleEl.state, oldState = simpleEl._oldState;\n  for (let i = 0; i < l; i++) {\n    const data = refs[i].ref, dom = doms[i];\n    if (Array.isArray(data)) {\n      const l = data.length;\n      for (let i = 0; i < l; i++) {\n        const attr = data[i];\n        if (oldState[attr.text] !== newState[attr.text]) {\n          if (attr.name === 'class') dom.className = newState[attr.text];\n          else dom.setAttribute(attr.name, newState[attr.text]);\n        }\n      }\n    } else {\n      if (oldState[data] != newState[data]) dom.data = newState[data];\n    }\n  }\n}\n\nfunction customElementUpdate(element) {\n  if (!element._refs) {\n    return false;\n  }\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = element.constructor.stateMap[i].ref;\n    const dom = element._refs[i];\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key === 'events') {\n          for(let event in data.attributes.events) {\n            const eventLis = evaluateString(data.attributes.events[event], element, true);\n            if (data.attributes.events[event].slice(0, 6) === '${this') {\n              dom[event] = eventLis.bind(element);\n            } else {\n              dom[event] = eventLis;\n            }\n          }\n        } else if (key === 'style') {\n          for (let k in data.attributes.style) {\n            dom.style[k] = evaluateString(data.attributes.style[k], element);\n          }\n        } else {\n          const val = evaluateString(data.attributes[key], element);\n          updateAttribute(dom, key, val);\n        }\n      }\n    }\n\n    if (data.html === undefined) continue;\n\n    // update element\n    const newValue = evaluateString(data.text, element);\n    if (!newValue) { dom.textContent = ''; continue; }\n\n    if (data.html) {\n      // html node\n      let children;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.nodeType === 1) {\n        children = Array.prototype.slice.call(newValue.content.childNodes);\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else {\n        TEMPLATE.innerHTML = newValue.toString();\n        children = Array.prototype.slice.call(TEMPLATE.content.childNodes);\n      }\n      makeChildrenEqual(dom, children);\n    } else {\n      // text node\n      if (dom.data != newValue) {\n        dom.data = newValue || '';\n      }\n    }\n  }\n  element.onUpdate();\n}\n\nmodule.exports = {\n  update: customElementUpdate,\n  simpleUpdate: simpleElementUpdate\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) return window.console.log(`${this.elementName} was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script).bind(window)();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file gave error. Trying to get html file for ${this.elementName}.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text).call(window);\n        }\n      });\n    }).catch(e => window.console.error(e));\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst template = require('./template');\nconst { simpleUpdate } = require('./update');\nconst { simpleCreator } = require('./creator');\n\nfunction SimpleElement(content, defaultState = null) {\n  let templ;\n  if (typeof content === 'string') {\n    templ = template(content);\n    content = templ.content.firstElementChild || templ.content.firstChild;\n  } else if (!content.nodeType) {\n    throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n  }\n  // Already sifrr element\n  if (content.isSifrr) return content;\n  if (content.nodeName.indexOf('-') !== -1 ||\n    // for '<tag is=custom-element></tag>'\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') >= 0)\n  ) {\n    // render node to make it sifrr element\n    window.document.body.appendChild(content);\n    content.remove();\n    return content;\n  }\n  content.stateMap = create(content, simpleCreator);\n  content._refs = collect(content, content.stateMap);\n  Object.defineProperty(content, 'state', {\n    get: () => content._state,\n    set: (v) => {\n      content._oldState = Object.assign({}, content._state);\n      content._state = Object.assign(content._state || {}, v);\n      simpleUpdate(content);\n    }\n  });\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep = true) {\n    const clone = content.cloneNode(deep);\n    clone.stateMap = content.stateMap;\n    clone._refs = collect(clone, content.stateMap);\n    Object.defineProperty(clone, 'state', {\n      get: () => clone._state,\n      set: (v) => {\n        clone._oldState = Object.assign({}, clone._state);\n        clone._state = Object.assign(clone._state || {}, v);\n        simpleUpdate(clone);\n      }\n    });\n    if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","// Taken from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    let dom = target;\n    while(dom) {\n      const eventHandler = dom[`$${name}`];\n      if (eventHandler) {\n        eventHandler(e, target);\n      }\n      cssMatchEvent(e, name, dom, target);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts: opts\n};\n\nmodule.exports = Event;\n","const Parser = require('./parser');\nconst { update } = require('./update');\nconst Loader = require('./loader');\nconst SimpleElement = require('./simpleelement');\nconst { opts } = require('./event');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      this._ctemp = this._ctemp || this.template;\n      if (window.ShadyCSS && this.useShadowRoot && !this._ctemp.shady) {\n        window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        this._ctemp.shady = true;\n      }\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.ctemp.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        // this._oldState = {};\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.ctemp.content.cloneNode(true);\n        if (this.constructor.useShadowRoot) {\n          this._refs = Parser.collectRefs(content, this.constructor.stateMap);\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n          this.shadowRoot.addEventListener('change', Parser.twoWayBind, opts);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useShadowRoot) {\n        this.textContent = '';\n        this._refs = Parser.collectRefs(this.__content, this.constructor.stateMap);\n        this.appendChild(this.__content);\n      }\n      if (!this.hasAttribute('data-sifrr-state') || !this.constructor.useShadowRoot) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      if (this.shadowRoot) this.shadowRoot.removeEventListener('change', Parser.twoWayBind, opts);\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      // return Json.deepClone(this._state);\n      return this._state;\n    }\n\n    set state(v) {\n      // this._oldState = this.state;\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep) {\n      return this.cloneNode(deep);\n    }\n\n    clearState() {\n      // this._oldState = this.state;\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n\n    static addArrayToDom(key, template) {\n      this._arrayToDom = this._arrayToDom || {};\n      // state of simple element is single array item, compatible with sifrr element\n      this._arrayToDom[this.elementName] = this._arrayToDom[this.elementName] || {};\n      this._arrayToDom[this.elementName][key] = SimpleElement(template);\n    }\n\n    arrayToDom(key, newState = this.state[key]) {\n      this._domL = this._domL || {};\n      const oldL = this._domL[key] || 0;\n      const domArray = [];\n      const newL = newState.length;\n      let temp;\n      try {\n        temp = this.constructor._arrayToDom[this.constructor.elementName][key];\n        if (!temp) throw Error('');\n      } catch(e) {\n        return window.console.error(`[error]: No arrayToDom data of '${key}' added in ${this.constructor.elementName}.`);\n      }\n      for (let i = 0; i < newL; i++) {\n        if (i < oldL) {\n          domArray.push({ type: 'stateChange', state: newState[i] });\n        } else {\n          const el = temp.sifrrClone(true);\n          el.state = newState[i];\n          domArray.push(el);\n        }\n      }\n      this._domL[key] = newL;\n      return domArray;\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\nSifrrDom.makeEqual = require('./dom/makeequal');\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  let loader = new SifrrDom.Loader(elemName, url);\n  SifrrDom.loadingElements.push(customElements.whenDefined(elemName));\n  return loader.executeScripts(js);\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["TREE_WALKER","window","document","createTreeWalker","NodeFilter","SHOW_ALL","nextNonfilterNode","fxn","node","this","currentNode","nextSibling","parentNode","nextNode","roll","n","filter","Ref","constructor","idx","ref","collect","element","stateMap","refs","map","x","push","create","indices","temp","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","require$$0","creator","el","nodeType","data","indexOf","html","text","sm","innerHTML","replace","attrs","attributes","l","length","attrStateMap","events","i","attribute","name","value","styles","split","forEach","s","v","trim","Object","keys","simpleCreator","undefined","Array","from","ret","avalue","slice","setAttribute","nodeData","require$$1","isHtml","dataset","sifrrHtml","nodeName","sifrrRepeat","collectRefs","createStateMap","twoWayBind","e","target","path","sifrrBind","textContent","root","state","_root","isSifrr","host","evaluateString","string","match","replacer","f","Function","bind","newValue","fromValue","getAttribute","removeAttribute","shallowEqual","a","b","key","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","Math","min","item","head","firstChild","makeEqual","oldNode","newNode","type","replaceWith","attr","oldAttrs","newAttrs","updateAttribute","j","hasAttribute","specified","require$$2","update","_refs","dom","event","eventLis","k","style","val","children","isArray","prototype","call","content","toString","onUpdate","simpleUpdate","simpleEl","doms","newState","oldState","_oldState","className","str","extra","tmp","String","raw","Loader","elemName","url","fetch","Error","all","elementName","_html","add","me","file","htmlUrl","then","resp","template","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","join","executeScripts","js","_executed","console","log","catch","error","executeHTMLScripts","querySelectorAll","src","newScript","body","instance","_all","defaultState","templ","firstElementChild","TypeError","remove","defineProperty","get","_state","set","assign","sifrrClone","deep","clone","SYNTHETIC_EVENTS","opts","capture","passive","cssMatchEvent","callEach","fxns","css","matches","addEventListener","Promise","resolve","composedPath","eventHandler","nativeToSyntheticEvent","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","ShadyCSS","useShadowRoot","shady","prepareTemplate","_stateMap","Parser","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","removeEventListener","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JSON","parse","onAttributeChange","onStateChange","clearState","$","args","sr","$$","_arrayToDom","SimpleElement","arrayToDom","_domL","domArray","HTMLElement","SifrrDom","Element","require$$3","require$$4","require$$5","require$$6","register","customElements","define","elements","message","trace","setup","load","loader","loadingElements","whenDefined","loading"],"mappings":"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"}