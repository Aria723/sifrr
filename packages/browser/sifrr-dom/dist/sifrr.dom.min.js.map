{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/ref.js","../src/dom/constants.js","../src/dom/parser.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/update.js","../src/dom/template.js","../src/dom/loader.js","../src/dom/simpleelement.js","../src/dom/event.js","../src/dom/element.js","../src/sifrr.dom.js"],"sourcesContent":["// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\n\nTREE_WALKER.nextNonfilterNode = function(fxn) {\n  let node = this.currentNode;\n  if (fxn && fxn(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nTREE_WALKER.roll = function(n, filter) {\n  let node = this.currentNode;\n  while(--n) {\n    node = this.nextNonfilterNode(filter);\n  }\n  return node;\n};\n\nclass Ref {\n  constructor(idx, ref) {\n    this.idx = idx;\n    this.ref = ref;\n  }\n}\n\nfunction collect(element, stateMap, filter = false) {\n  const refs = [];\n  TREE_WALKER.currentNode = element;\n  stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n  return refs;\n}\n\nfunction create(node, fxn, filter = false) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node)) {\n      indices.push(new Ref(idx+1, ref));\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = TREE_WALKER.nextNonfilterNode(filter);\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create,\n  Ref\n};\n","const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\n// const sfn = window.document.createElement('sifrr-node');\n\nmodule.exports = {\n  // SIFRR_NODE: () => sfn.cloneNode(),\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1\n};\n","const { collect, create } = require('./ref');\nconst { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE } = require('./constants');\n\nfunction isHtml(el) {\n  return (el.dataset && el.dataset.sifrrHtml == 'true') ||\n    el.nodeName == 'TEXTAREA' ||\n    el.nodeName == 'STYLE' ||\n    (el.dataset && el.dataset.sifrrRepeat);\n}\n\nfunction creator(el) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    // text node\n    const x = el.data;\n    if (x.indexOf('${') > -1) return {\n      html: false,\n      text: x\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (isHtml(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.html = true;\n        sm.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n      }\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '$') {\n        attrStateMap.events[attribute.name] = attribute.value;\n      } else if (attribute.value.indexOf('${') >= 0) {\n        if (attribute.name === 'style') {\n          const styles = {};\n          attribute.value.split(';').forEach((s) => {\n            const [n, v] = s.split(/:(?!\\/\\/)/);\n            if (n && v && v.indexOf('${') >= 0) {\n              styles[n.trim()] = v.trim();\n            }\n          });\n          attrStateMap[attribute.name] = styles;\n        } else {\n          attrStateMap[attribute.name] = attribute.value;\n        }\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nconst Parser = {\n  collectRefs: (el, stateMap) => collect(el, stateMap, isHtml),\n  createStateMap: (element) => create(element, creator, isHtml),\n  twoWayBind: (e) => {\n    const target = e.path ? e.path[0] : e.target;\n    if (!target.dataset.sifrrBind) return;\n    const value = target.value || target.textContent;\n    let state = {};\n    let root;\n    if (target._root) {\n      root = target._root;\n    } else {\n      root = target;\n      while(!root.isSifrr) root = root.parentNode || root.host;\n      target._root = root;\n    }\n    state[target.dataset.sifrrBind] = value;\n    root.state = state;\n  },\n  evaluateString: (string, element) => {\n    if (string.indexOf('${') < 0) return string;\n    string = string.trim();\n    if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n    return replacer('`' + string + '`');\n\n    function replacer(match) {\n      if (match[0] == '$') match = match.slice(2, -1);\n      let f;\n      if (match.indexOf('return ') >= 0) {\n        f = new Function(match).bind(element);\n      } else {\n        f = new Function('return ' + match).bind(element);\n      }\n      return f();\n    }\n  }\n};\n\nmodule.exports = Parser;\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  const fromValue = element.getAttribute(name);\n  if (fromValue != newValue) {\n    // values are always cast to strings\n    if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n      if (fromValue) element.removeAttribute(name);\n    } else {\n      element.setAttribute(name, newValue);\n    }\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reuseNodes.js\nfunction makeChildrenEqual(parent, newChildren) {\n  // Lesser children now\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL;\n    while(i < newL) {\n      parent.appendChild(newChildren[i]);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (newNode === null) return oldNode;\n  if (newNode.type === 'stateChange') {\n    if (!shallowEqual(oldNode.state, newNode.state)) {\n      oldNode.state = newNode.state;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, newNode.childNodes);\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","const { makeChildrenEqual } = require('./makeequal');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateString } = require('./parser');\nconst TEMPLATE = require('./constants').TEMPLATE();\n\nmodule.exports = (element) => {\n  if (!element._refs) {\n    return false;\n  }\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = element.constructor.stateMap[i].ref;\n    const dom = element._refs[i];\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key === 'events') {\n          for(let event in data.attributes.events) {\n            const eventLis = evaluateString(data.attributes.events[event], element, true);\n            if (data.attributes.events[event].slice(0, 6) === '${this') {\n              dom[event] = eventLis.bind(element);\n            } else {\n              dom[event] = eventLis;\n            }\n          }\n        } else if (key === 'style') {\n          for (let k in data.attributes.style) {\n            dom.style[k] = evaluateString(data.attributes.style[k], element);\n          }\n        } else {\n          const val = evaluateString(data.attributes[key], element);\n          updateAttribute(dom, key, val);\n        }\n      }\n    }\n\n    if (data.html === undefined) continue;\n\n    // update element\n    const newValue = evaluateString(data.text, element);\n    if (!newValue) { dom.textContent = ''; continue; }\n\n    if (data.html) {\n      // html node\n      let children;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.nodeType === 1) {\n        children = Array.prototype.slice.call(newValue.content.childNodes);\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else {\n        TEMPLATE.innerHTML = newValue.toString();\n        children = Array.prototype.slice.call(TEMPLATE.content.childNodes);\n      }\n      makeChildrenEqual(dom, children);\n    } else {\n      // text node\n      if (dom.data != newValue) {\n        dom.data = newValue || '';\n      }\n    }\n  }\n  element.onUpdate();\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) return window.console.log(`${this.elementName} was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script).bind(window)();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file gave error. Trying to get html file for ${this.elementName}.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text).call(window);\n        }\n      });\n    }).catch(e => window.console.error(e));\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst template = require('./template');\nconst { ELEMENT_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/index.js\nfunction creator(node) {\n  if (node.nodeType === ELEMENT_NODE) {\n    if (node.attributes !== undefined) {\n      const attrs = Array.from(node.attributes), l = attrs.length;\n      const ret = [];\n      for (let i = 0; i < l; i++) {\n        const avalue = attrs[i].value;\n        if (avalue[0] === '$') {\n          ret.push({\n            name: attrs[i].name,\n            text: avalue.slice(2, -1)\n          });\n          node.setAttribute(attrs[i].name, '');\n        }\n      }\n      if (ret.length > 0) return ret;\n    }\n    return 0;\n  } else {\n    let nodeData = node.data;\n    if (nodeData[0] === '$') {\n      node.data = '';\n      return nodeData.slice(2, -1);\n    }\n    return 0;\n  }\n}\n\nfunction updateState(simpleEl) {\n  const doms = simpleEl._refs, refs = simpleEl.stateMap, l = refs.length;\n  const newState = simpleEl.state, oldState = simpleEl._oldState;\n  for (let i = 0; i < l; i++) {\n    const data = refs[i].ref, dom = doms[i];\n    if (Array.isArray(data)) {\n      const l = data.length;\n      for (let i = 0; i < l; i++) {\n        const attr = data[i];\n        if (oldState[attr.text] !== newState[attr.text]) {\n          if (attr.name === 'class') dom.className = newState[attr.text];\n          else dom.setAttribute(attr.name, newState[attr.text]);\n        }\n      }\n    } else {\n      if (oldState[data] != newState[data]) dom.data = newState[data];\n    }\n  }\n}\n\nfunction SimpleElement(content, defaultState = null) {\n  let templ;\n  if (typeof content === 'string') {\n    templ = template(content);\n    content = templ.content.firstElementChild || templ.content.firstChild;\n  } else if (!content.nodeType) {\n    throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n  }\n  // Already sifrr element\n  if (content.isSifrr) return content;\n  if (content.nodeName.indexOf('-') !== -1 ||\n    // for '<tag is=custom-element></tag>'\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') >= 0)\n  ) {\n    // render node to make it sifrr element\n    window.document.body.appendChild(content);\n    content.remove();\n    return content;\n  }\n  content.stateMap = create(content, creator);\n  content._refs = collect(content, content.stateMap);\n  Object.defineProperty(content, 'state', {\n    get: () => content._state,\n    set: (v) => {\n      content._oldState = Object.assign({}, content._state);\n      content._state = Object.assign(content._state || {}, v);\n      updateState(content);\n    }\n  });\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep = true) {\n    const clone = content.cloneNode(deep);\n    clone.stateMap = content.stateMap;\n    clone._refs = collect(clone, content.stateMap);\n    Object.defineProperty(clone, 'state', {\n      get: () => clone._state,\n      set: (v) => {\n        clone._oldState = Object.assign({}, clone._state);\n        clone._state = Object.assign(clone._state || {}, v);\n        updateState(clone);\n      }\n    });\n    if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","// Taken from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    let dom = target;\n    while(dom) {\n      const eventHandler = dom[`$${name}`];\n      if (eventHandler) {\n        eventHandler(e, target);\n      }\n      cssMatchEvent(e, name, dom, target);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts: opts\n};\n\nmodule.exports = Event;\n","const Parser = require('./parser');\nconst update = require('./update');\nconst Loader = require('./loader');\nconst SimpleElement = require('./simpleelement');\nconst { opts } = require('./event');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      this._ctemp = this._ctemp || this.template;\n      if (window.ShadyCSS && this.useShadowRoot && !this._ctemp.shady) {\n        window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        this._ctemp.shady = true;\n      }\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.ctemp.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        // this._oldState = {};\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.ctemp.content.cloneNode(true);\n        if (this.constructor.useShadowRoot) {\n          this._refs = Parser.collectRefs(content, this.constructor.stateMap);\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n          this.shadowRoot.addEventListener('change', Parser.twoWayBind, opts);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useShadowRoot) {\n        this.textContent = '';\n        this._refs = Parser.collectRefs(this.__content, this.constructor.stateMap);\n        this.appendChild(this.__content);\n      }\n      if (!this.hasAttribute('data-sifrr-state') || !this.constructor.useShadowRoot) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      if (this.shadowRoot) this.shadowRoot.removeEventListener('change', Parser.twoWayBind, opts);\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      // return Json.deepClone(this._state);\n      return this._state;\n    }\n\n    set state(v) {\n      // this._oldState = this.state;\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep) {\n      return this.cloneNode(deep);\n    }\n\n    clearState() {\n      // this._oldState = this.state;\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n\n    static addArrayToDom(key, template) {\n      this._arrayToDom = this._arrayToDom || {};\n      // state of simple element is single array item, compatible with sifrr element\n      this._arrayToDom[this.elementName] = this._arrayToDom[this.elementName] || {};\n      this._arrayToDom[this.elementName][key] = SimpleElement(template);\n    }\n\n    arrayToDom(key, newState = this.state[key]) {\n      this._domL = this._domL || {};\n      const oldL = this._domL[key] || 0;\n      const domArray = [];\n      const newL = newState.length;\n      let temp;\n      try {\n        temp = this.constructor._arrayToDom[this.constructor.elementName][key];\n        if (!temp) throw Error('');\n      } catch(e) {\n        return window.console.error(`[error]: No arrayToDom data of '${key}' added in ${this.constructor.elementName}.`);\n      }\n      for (let i = 0; i < newL; i++) {\n        if (i < oldL) {\n          domArray.push({ type: 'stateChange', state: newState[i] });\n        } else {\n          const el = temp.sifrrClone(true);\n          el.state = newState[i];\n          domArray.push(el);\n        }\n      }\n      this._domL[key] = newL;\n      return domArray;\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\nSifrrDom.makeEqual = require('./dom/makeequal');\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  let loader = new SifrrDom.Loader(elemName, url);\n  SifrrDom.loadingElements.push(customElements.whenDefined(elemName));\n  return loader.executeScripts(js);\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["TREE_WALKER","window","document","createTreeWalker","NodeFilter","SHOW_ALL","nextNonfilterNode","fxn","node","this","currentNode","nextSibling","parentNode","nextNode","roll","n","filter","Ref","constructor","idx","ref","collect","element","stateMap","refs","map","x","push","create","indices","temp","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","require$$0","require$$1","isHtml","el","dataset","sifrrHtml","nodeName","sifrrRepeat","creator","nodeType","data","indexOf","html","text","sm","innerHTML","replace","attrs","attributes","l","length","attrStateMap","events","i","attribute","name","value","styles","split","forEach","s","v","trim","Object","keys","collectRefs","createStateMap","twoWayBind","e","target","path","sifrrBind","textContent","root","state","_root","isSifrr","host","evaluateString","string","match","replacer","f","slice","Function","bind","newValue","fromValue","getAttribute","setAttribute","removeAttribute","shallowEqual","a","b","key","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","Math","min","item","head","firstChild","makeEqual","oldNode","newNode","type","replaceWith","attr","oldAttrs","newAttrs","updateAttribute","j","hasAttribute","specified","require$$2","_refs","dom","event","eventLis","k","style","val","undefined","children","Array","isArray","prototype","call","content","toString","onUpdate","str","extra","tmp","from","String","raw","Loader","elemName","url","fetch","Error","all","elementName","_html","add","me","file","htmlUrl","then","resp","template","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","join","executeScripts","js","_executed","console","log","catch","error","executeHTMLScripts","querySelectorAll","src","newScript","body","instance","_all","ret","avalue","nodeData","updateState","simpleEl","doms","newState","oldState","_oldState","className","defaultState","templ","firstElementChild","TypeError","remove","defineProperty","get","_state","set","assign","sifrrClone","deep","clone","SYNTHETIC_EVENTS","opts","capture","passive","cssMatchEvent","callEach","fxns","css","matches","addEventListener","Promise","resolve","composedPath","eventHandler","nativeToSyntheticEvent","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","ShadyCSS","useShadowRoot","shady","prepareTemplate","_stateMap","Parser","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","__content","connectedCallback","update","onConnect","disconnectedCallback","removeEventListener","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JSON","parse","onAttributeChange","onStateChange","clearState","$","args","sr","$$","_arrayToDom","SimpleElement","arrayToDom","_domL","domArray","HTMLElement","SifrrDom","Element","require$$3","require$$4","require$$5","require$$6","register","customElements","define","elements","message","trace","setup","load","loader","loadingElements","whenDefined","loading"],"mappings":";wTAEA,MAAMA,EAAcC,OAAOC,SAASC,iBAAiBF,OAAOC,SAAUD,OAAOG,WAAWC,SAAU,MAAM,GAExGL,EAAYM,kBAAoB,SAASC,OACnCC,EAAOC,KAAKC,mBAEdF,EADED,GAAOA,EAAIC,GACNC,KAAKE,gBAAkBF,KAAKG,aAAcH,KAAKE,eAC1CF,KAAKI,YAIrBb,EAAYc,KAAO,SAASC,EAAGC,OACzBR,EAAOC,KAAKC,mBACRK,GACNP,EAAOC,KAAKH,kBAAkBU,UAEzBR,GAGT,MAAMS,EACJC,YAAYC,EAAKC,QACVD,IAAMA,OACNC,IAAMA,GA4Bf,MAAiB,CACfC,QAzBF,SAAiBC,EAASC,EAAUP,GAAS,SACrCQ,EAAO,UACbxB,EAAYU,YAAcY,EAC1BC,EAASE,IAAIC,GAAKF,EAAKG,KAAK3B,EAAYc,KAAKY,EAAEP,IAAKH,KAC7CQ,GAsBPI,OAnBF,SAAgBpB,EAAMD,EAAKS,GAAS,OAChBI,EAAdS,EAAU,GAASV,EAAM,MAC7BnB,EAAYU,YAAcF,EACpBA,IAEAY,EAAMb,EAAIC,KACZqB,EAAQF,KAAK,IAAIV,EAAIE,EAAI,EAAGC,IAC5BD,EAAM,GAENA,IAEFX,EAAOR,EAAYM,kBAAkBU,UAGhCa,GAMPZ,IAAAA,GCtDF,MAAMa,EAAO7B,OAAOC,SAAS6B,cAAc,YACrCC,EAAS/B,OAAOC,SAAS6B,cAAc,UAG7C,MAAiB,CAEfE,SAAU,IAAMH,EAAKI,WAAU,GAC/BC,OAAQ,IAAMH,EAAOE,WAAU,GAC/BE,UAAW,EACXC,aAAc,EACdC,aAAc,GCVhB,cAAQjB,SAASO,GAAWW,GACtBH,UAAEA,EAAFC,aAAaA,EAAbC,aAA2BA,GAAiBE,EAElD,SAASC,EAAOC,UACNA,EAAGC,SAAmC,QAAxBD,EAAGC,QAAQC,WAChB,YAAfF,EAAGG,UACY,SAAfH,EAAGG,UACFH,EAAGC,SAAWD,EAAGC,QAAQG,YAG9B,SAASC,EAAQL,MACXA,EAAGM,WAAaZ,GAAaM,EAAGM,WAAaX,EAAc,OAEvDX,EAAIgB,EAAGO,QACTvB,EAAEwB,QAAQ,OAAS,EAAG,MAAO,CAC/BC,MAAM,EACNC,KAAM1B,QAEH,GAAIgB,EAAGM,WAAaV,EAAc,OACjCe,EAAK,MAEPZ,EAAOC,GAAK,OACRY,EAAYZ,EAAGY,UACjBA,EAAUJ,QAAQ,OAAS,IAC7BG,EAAGF,MAAO,EACVE,EAAGD,KAAOE,EAAUC,QAAQ,eAAgB,aAI1CC,EAAQd,EAAGe,WAAYC,EAAIF,EAAMG,OACjCC,EAAe,CAAEC,OAAQ,QAC1B,IAAIC,EAAI,EAAGA,EAAIJ,EAAGI,IAAK,OACpBC,EAAYP,EAAMM,MACE,MAAtBC,EAAUC,KAAK,GACjBJ,EAAaC,OAAOE,EAAUC,MAAQD,EAAUE,WAC3C,GAAIF,EAAUE,MAAMf,QAAQ,OAAS,KACnB,UAAnBa,EAAUC,KAAkB,OACxBE,EAAS,GACfH,EAAUE,MAAME,MAAM,KAAKC,QAASC,UAC3BtD,EAAGuD,GAAKD,EAAEF,MAAM,aACnBpD,GAAKuD,GAAKA,EAAEpB,QAAQ,OAAS,IAC/BgB,EAAOnD,EAAEwD,QAAUD,EAAEC,UAGzBX,EAAaG,EAAUC,MAAQE,OAE/BN,EAAaG,EAAUC,MAAQD,EAAUE,SAIC,IAA5CO,OAAOC,KAAKb,EAAaC,QAAQF,eAAqBC,EAAaC,OACnEW,OAAOC,KAAKb,GAAcD,OAAS,IAAGN,EAAGI,WAAaG,GAEtDY,OAAOC,KAAKpB,GAAIM,OAAS,EAAG,OAAON,SAElC,EAyCT,MAtCe,CACbqB,YAAa,CAAChC,EAAInB,IAAaF,EAAQqB,EAAInB,EAAUkB,GACrDkC,eAAiBrD,GAAYM,EAAON,EAASyB,EAASN,GACtDmC,WAAaC,UACLC,EAASD,EAAEE,KAAOF,EAAEE,KAAK,GAAKF,EAAEC,WACjCA,EAAOnC,QAAQqC,UAAW,aACzBf,EAAQa,EAAOb,OAASa,EAAOG,gBAEjCC,EADAC,EAAQ,MAERL,EAAOM,MACTF,EAAOJ,EAAOM,UACT,KACLF,EAAOJ,GACAI,EAAKG,SAASH,EAAOA,EAAKtE,YAAcsE,EAAKI,KACpDR,EAAOM,MAAQF,EAEjBC,EAAML,EAAOnC,QAAQqC,WAAaf,EAClCiB,EAAKC,MAAQA,GAEfI,eAAgB,CAACC,EAAQlE,YACnBkE,EAAOtC,QAAQ,MAAQ,EAAUsC,GACrCA,EAASA,EAAOjB,QACLkB,MAAM,+BAAuCC,EAASF,GAC1DE,EAAS,IAAMF,EAAS,cAEtBE,EAASD,OAEZE,QADY,KAAZF,EAAM,KAAWA,EAAQA,EAAMG,MAAM,GAAI,KAG3CD,EADEF,EAAMvC,QAAQ,YAAc,EAC1B,IAAI2C,SAASJ,GAAOK,KAAKxE,GAEzB,IAAIuE,SAAS,UAAYJ,GAAOK,KAAKxE,WCxFhC,CAACA,EAAS0C,EAAM+B,WACzBC,EAAY1E,EAAQ2E,aAAajC,GACnCgC,GAAaD,IAEC,QAAZA,GAAkC,aAAZA,GAAuC,SAAZA,GAAwBA,EAG3EzE,EAAQ4E,aAAalC,EAAM+B,GAFvBC,GAAW1E,EAAQ6E,gBAAgBnC,IAO/B,SAARA,GAAwC,UAApB1C,EAAQuB,UAA4C,SAApBvB,EAAQuB,WAAsBvB,EAAQ2C,MAAQ8B,ICGxG,MAhBa,CACXK,aAAc,CAACC,EAAGC,SACZ,IAAIC,KAAOF,OACRE,KAAOD,IAAMD,EAAEE,IAAQD,EAAEC,UACrB,MAGP,IAAIA,KAAOD,OACRC,KAAOF,IAAMA,EAAEE,IAAQD,EAAEC,UACrB,SAGJ,ICXX,MAAMH,aAAEA,GAAiB7D,aACjBH,eAAWC,GAAiBG,EAGpC,SAASgE,EAAkBC,EAAQC,SAE3BC,EAAOF,EAAOG,WAAWjD,OAAQkD,EAAOH,EAAY/C,UACtDgD,EAAOE,EAAM,KACX/C,EAAI6C,OACF7C,EAAI+C,GACRJ,EAAOK,YAAYL,EAAOM,WAC1BjD,SAGG,GAAI6C,EAAOE,EAAM,KAClB/C,EAAI6C,OACF7C,EAAI+C,GACRJ,EAAOO,YAAYN,EAAY5C,IAC/BA,UAIEJ,EAAIuD,KAAKC,IAAIL,EAAMF,OAErB,IAAWQ,EAAPrD,EAAI,EAASsD,EAAOX,EAAOY,WAAYvD,EAAIJ,EAAGI,IAGpDsD,EAAOE,EAAUF,EAFjBD,EAAOT,EAAY5C,IAEUnD,YAIjC,SAAS2G,EAAUC,EAASC,MACV,OAAZA,EAAkB,OAAOD,KACR,gBAAjBC,EAAQC,YACLrB,EAAamB,EAAQpC,MAAOqC,EAAQrC,SACvCoC,EAAQpC,MAAQqC,EAAQrC,OAEnBoC,KAGLA,EAAQ1E,WAAa2E,EAAQ3E,gBAC/B0E,EAAQG,YAAYF,GACbA,KAGLD,EAAQvE,WAAaZ,GAAamF,EAAQvE,WAAaX,SACrDkF,EAAQtE,OAASuE,EAAQvE,OAAMsE,EAAQtE,KAAOuE,EAAQvE,MACnDsE,EAILC,EAAQrC,QAAOoC,EAAQpC,MAAQqC,EAAQrC,WAGuBwC,EAA9DC,EAAWL,EAAQ9D,WAAYoE,EAAWL,EAAQ/D,eACjD,IAAIK,EAAI+D,EAASlE,OAAS,EAAGG,GAAK,IAAKA,EAC1CgE,EAAgBP,EAASM,EAAS/D,GAAGE,KAAM6D,EAAS/D,GAAGG,WAIpD,IAAI8D,EAAIH,EAASjE,OAAS,EAAGoE,GAAK,IAAKA,EAC1CJ,EAAOC,EAASG,GACXP,EAAQQ,aAAaL,EAAK3D,QAA4B,IAAnB2D,EAAKM,WAAqBV,EAAQpB,gBAAgBwB,EAAK3D,aAIjGwC,EAAkBe,EAASC,EAAQZ,YAE5BW,EAGT,MAAiB,CACfD,UAAAA,EACAd,kBAAAA,GC1EF,wBAAQA,GAAsBjE,GAExBgD,eAAEA,GAAmB/C,EACrBP,EAAWiG,EAAuBjG,WAExC,MAAkBX,QACXA,EAAQ6G,aACJ,QAGHzE,EAAIpC,EAAQ6G,MAAMxE,WACnB,IAAIG,EAAI,EAAGA,EAAIJ,EAAGI,IAAK,OACpBb,EAAO3B,EAAQJ,YAAYK,SAASuC,GAAG1C,IACvCgH,EAAM9G,EAAQ6G,MAAMrE,MAGtBb,EAAKQ,eACH,IAAI8C,KAAOtD,EAAKQ,cACN,WAAR8C,MACE,IAAI8B,KAASpF,EAAKQ,WAAWI,OAAQ,OACjCyE,EAAW/C,EAAetC,EAAKQ,WAAWI,OAAOwE,GAAQ/G,GAAS,GACtB,WAA9C2B,EAAKQ,WAAWI,OAAOwE,GAAOzC,MAAM,EAAG,GACzCwC,EAAIC,GAASC,EAASxC,KAAKxE,GAE3B8G,EAAIC,GAASC,OAGZ,GAAY,UAAR/B,MACJ,IAAIgC,KAAKtF,EAAKQ,WAAW+E,MAC5BJ,EAAII,MAAMD,GAAKhD,EAAetC,EAAKQ,WAAW+E,MAAMD,GAAIjH,OAErD,OACCmH,EAAMlD,EAAetC,EAAKQ,WAAW8C,GAAMjF,GACjDwG,EAAgBM,EAAK7B,EAAKkC,WAKdC,IAAdzF,EAAKE,KAAoB,eAGvB4C,EAAWR,EAAetC,EAAKG,KAAM9B,MACtCyE,KAED9C,EAAKE,KAAM,KAETwF,EACAC,MAAMC,QAAQ9C,GAChB4C,EAAW5C,EACoB,IAAtBA,EAAS/C,SAClB2F,EAAWC,MAAME,UAAUlD,MAAMmD,KAAKhD,EAASiD,QAAQpC,YAC9Cb,EAAS/C,SAClB2F,EAAW,CAAC5C,IAEZ9D,EAASqB,UAAYyC,EAASkD,WAC9BN,EAAWC,MAAME,UAAUlD,MAAMmD,KAAK9G,EAAS+G,QAAQpC,aAEzDJ,EAAkB4B,EAAKO,QAGnBP,EAAInF,MAAQ8C,IACdqC,EAAInF,KAAO8C,GAAY,SAnBVqC,EAAInD,YAAc,GAuBrC3D,EAAQ4H,YCjEV,eAAQjH,GAAaM,EAErB,MAAiB,CAAC4G,KAAQC,WAClBC,EAAMpH,OACO,iBAARkH,OAEJ,CAAA,IAAIA,EAAI,IAAwB,iBAAXA,EAAI,GAEzB,OAAIA,EAAI,IACbP,MAAMU,KAAKH,GAAK/E,QAASC,IACvBgF,EAAIL,QAAQhC,YAAY3C,KAEnBgF,GAEAF,EAPPA,EAAMI,OAAOC,IAAIL,KAAQC,UAS3BD,EAAMA,EACH5F,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACjBA,QAAQ,kBAAmB,MAC9B8F,EAAI/F,UAAY6F,EACTE,GCnBT,MAAMI,EACJvI,YAAYwI,EAAUC,OACfC,EAAO,MAAMC,MAAM,mDACpBpJ,KAAKS,YAAY4I,IAAIJ,GAAW,OAAOjJ,KAAKS,YAAY4I,IAAIJ,QAC3DK,YAAcL,OACdC,IAAMA,gBAIPlJ,KAAKuJ,MAAO,OAAOvJ,KAAKuJ,MAC5BP,EAAOQ,IAAIxJ,KAAKsJ,YAAatJ,YACvByJ,EAAKzJ,iBACNuJ,MAAQJ,EAAMO,KAAK1J,KAAK2J,SAC1BC,KAAMC,GAASA,EAAKlH,QACpBiH,KAAMF,GAASI,EAASJ,GAAMnB,SAASqB,KAAMrB,IAC5CkB,EAAGK,SAAWvB,EAAQwB,cAAc,YAC7BxB,IAEJvI,KAAKuJ,sBAIRvJ,KAAKgK,IAAYhK,KAAKgK,KAC1BhB,EAAOQ,IAAIxJ,KAAKsJ,YAAatJ,WACxBgK,IAAMb,EAAMO,KAAK1J,KAAKiK,OACxBL,KAAMC,GAASA,EAAKlH,QAChB3C,KAAKgK,0BAILhK,KAAKkJ,QAAU1J,OAAO0K,MAAMC,IAAIC,OAAOC,QAAU,eAAerK,KAAKsJ,YAAY5F,MAAM,KAAK4G,KAAK,+BAIjGtK,KAAKkJ,QAAU1J,OAAO0K,MAAMC,IAAIC,OAAOC,QAAU,eAAerK,KAAKsJ,YAAY5F,MAAM,KAAK4G,KAAK,UAG1GC,eAAeC,UACTxK,KAAKyK,UAAkBjL,OAAOkL,QAAQC,OAAO3K,KAAKsJ,0CACjDmB,WAAY,EACZD,EAGIxK,KAAKwK,GAAGZ,KAAMrI,QACf6D,SAAS7D,GAAQ8D,KAAK7F,YACzBoL,MAAOxG,IACR5E,OAAOkL,QAAQG,MAAMzG,GACrB5E,OAAOkL,QAAQC,uDAAuD3K,KAAKsJ,gBACpEtJ,KAAK8K,uBAPP9K,KAAK8K,sBAYhBA,4BACS9K,KAAK0C,KAAKkH,KAAMF,IACrBA,EAAKqB,iBAAiB,UAAUpH,QAASpC,OACnCA,EAAOyJ,IAAK,OAERC,EAAYnJ,EAAuBJ,SACzCuJ,EAAUD,IAAMzJ,EAAOyJ,IACvBC,EAAUjE,KAAOzF,EAAOyF,KACxBxH,OAAOC,SAASyL,KAAK3E,YAAY0E,YAE7B7F,SAAS7D,EAAOoB,MAAM2F,KAAK9I,YAGlCoL,MAAMxG,GAAK5E,OAAOkL,QAAQG,MAAMzG,eAG1B6E,EAAUkC,GACnBnC,EAAOoC,KAAKnC,GAAYkC,0BAIjBnC,EAAOoC,MAIlBpC,EAAOoC,KAAO,GAEd,MAAiBpC,ECnFjB,cAAQpI,SAASO,GAAWW,gBAEpBD,GAAiBE,EAGzB,SAASO,EAAQvC,MACXA,EAAKwC,WAAaV,EAAc,SACVoG,IAApBlI,EAAKiD,WAA0B,OAC3BD,EAAQoF,MAAMU,KAAK9I,EAAKiD,YAAaC,EAAIF,EAAMG,OAC/CmI,EAAM,OACP,IAAIhI,EAAI,EAAGA,EAAIJ,EAAGI,IAAK,OACpBiI,EAASvI,EAAMM,GAAGG,MACN,MAAd8H,EAAO,KACTD,EAAInK,KAAK,CACPqC,KAAMR,EAAMM,GAAGE,KACfZ,KAAM2I,EAAOnG,MAAM,GAAI,KAEzBpF,EAAK0F,aAAa1C,EAAMM,GAAGE,KAAM,QAGjC8H,EAAInI,OAAS,EAAG,OAAOmI,SAEtB,EACF,KACDE,EAAWxL,EAAKyC,WACA,MAAhB+I,EAAS,IACXxL,EAAKyC,KAAO,GACL+I,EAASpG,MAAM,GAAI,IAErB,GAIX,SAASqG,EAAYC,SACbC,EAAOD,EAAS/D,MAAO3G,EAAO0K,EAAS3K,SAAUmC,EAAIlC,EAAKmC,OAC1DyI,EAAWF,EAAS/G,MAAOkH,EAAWH,EAASI,cAChD,IAAIxI,EAAI,EAAGA,EAAIJ,EAAGI,IAAK,OACpBb,EAAOzB,EAAKsC,GAAG1C,IAAKgH,EAAM+D,EAAKrI,MACjC8E,MAAMC,QAAQ5F,GAAO,OACjBS,EAAIT,EAAKU,WACV,IAAIG,EAAI,EAAGA,EAAIJ,EAAGI,IAAK,OACpB6D,EAAO1E,EAAKa,GACduI,EAAS1E,EAAKvE,QAAUgJ,EAASzE,EAAKvE,QACtB,UAAduE,EAAK3D,KAAkBoE,EAAImE,UAAYH,EAASzE,EAAKvE,MACpDgF,EAAIlC,aAAayB,EAAK3D,KAAMoI,EAASzE,EAAKvE,cAI/CiJ,EAASpJ,IAASmJ,EAASnJ,KAAOmF,EAAInF,KAAOmJ,EAASnJ,KAuDhE,MAlDA,SAAuB+F,EAASwD,EAAe,UACzCC,KACmB,iBAAZzD,EACTyD,EAAQlC,EAASvB,GACjBA,EAAUyD,EAAMzD,QAAQ0D,mBAAqBD,EAAMzD,QAAQ3B,gBACtD,IAAK2B,EAAQhG,eACZ2J,UAAU,mFAGd3D,EAAQ3D,QAAgB2D,GACW,IAAnCA,EAAQnG,SAASK,QAAQ,MAE1B8F,EAAQ/C,cAAgB+C,EAAQ/C,aAAa,OAAS+C,EAAQ/C,aAAa,MAAM/C,QAAQ,MAAQ,GAGlGjD,OAAOC,SAASyL,KAAK3E,YAAYgC,GACjCA,EAAQ4D,SACD5D,IAETA,EAAQzH,SAAWK,EAAOoH,EAASjG,GACnCiG,EAAQb,MAAQ9G,EAAQ2H,EAASA,EAAQzH,UACzCiD,OAAOqI,eAAe7D,EAAS,QAAS,CACtC8D,IAAK,IAAM9D,EAAQ+D,OACnBC,IAAM1I,IACJ0E,EAAQsD,UAAY9H,OAAOyI,OAAO,GAAIjE,EAAQ+D,QAC9C/D,EAAQ+D,OAASvI,OAAOyI,OAAOjE,EAAQ+D,QAAU,GAAIzI,GACrD2H,EAAYjD,MAGZwD,IAAcxD,EAAQ7D,MAAQqH,GAElCxD,EAAQkE,WAAa,SAASC,GAAO,SAC7BC,EAAQpE,EAAQ9G,UAAUiL,UAChCC,EAAM7L,SAAWyH,EAAQzH,SACzB6L,EAAMjF,MAAQ9G,EAAQ+L,EAAOpE,EAAQzH,UACrCiD,OAAOqI,eAAeO,EAAO,QAAS,CACpCN,IAAK,IAAMM,EAAML,OACjBC,IAAM1I,IACJ8I,EAAMd,UAAY9H,OAAOyI,OAAO,GAAIG,EAAML,QAC1CK,EAAML,OAASvI,OAAOyI,OAAOG,EAAML,QAAU,GAAIzI,GACjD2H,EAAYmB,MAGZpE,EAAQ7D,QAAOiI,EAAMjI,MAAQ6D,EAAQ7D,OAClCiI,GAGFpE,ICnGT,MAAMqE,EAAmB,GACnBC,EAAO,CAAEC,SAAS,EAAMC,SAAS,GAiBjCC,EAAgB,CAAC5I,EAAGb,EAAMoE,EAAKtD,cAC1B4I,EAASC,GAChBA,EAAKvJ,QAAS7D,GAAQA,EAAIsE,EAAGC,EAAQsD,QAElC,IAAIwF,KAAOP,EAAiBrJ,IACH,mBAAhBoE,EAAIyF,SAA0BzF,EAAIyF,QAAQD,IAClC,IAAjBxF,EAAIpF,UAA0B,aAAR4K,IAAqBF,EAASL,EAAiBrJ,GAAM4J,KA+BlF,MA3Bc,CACZ9D,IAAKuD,EACLpD,IAAMjG,IACAqJ,EAAiBrJ,KACrB/D,OAAO6N,iBAAiB9J,EAAMqE,GA7BH,EAACxD,EAAGb,IAC1B+J,QAAQC,QAAQ,YACflJ,EAASD,EAAEoJ,aAAepJ,EAAEoJ,eAAe,GAAKpJ,EAAEC,WACpDsD,EAAMtD,OACJsD,GAAK,OACH8F,EAAe9F,MAAQpE,KACzBkK,GACFA,EAAarJ,EAAGC,GAElB2I,EAAc5I,EAAGb,EAAMoE,EAAKtD,GAC5BsD,EAAMA,EAAIxH,YAAcwH,EAAI9C,OATT,IA4BkB6I,CAAuB9F,EAAOrE,GAAOsJ,GAC5ED,EAAiBrJ,GAAQ,IAClB,GAEToK,YAAa,CAACpK,EAAM4J,EAAKrN,WACjBoN,EAAON,EAAiBrJ,GAAM4J,IAAQ,UACxCD,EAAKzK,QAAQ3C,GAAO,GAAGoN,EAAKhM,KAAKpB,GACrC8M,EAAiBrJ,GAAM4J,GAAOD,GACvB,GAETU,eAAgB,CAACrK,EAAM4J,EAAKrN,WACpBoN,EAAON,EAAiBrJ,GAAM4J,IAAQ,GAAI9J,EAAI6J,EAAKzK,QAAQ3C,UAC7DuD,GAAK,GAAG6J,EAAKW,OAAOxK,EAAG,GAC3BuJ,EAAiBrJ,GAAM4J,GAAOD,GACvB,GAETY,QAAS,CAAC7L,EAAIsB,EAAMwK,KACA,iBAAP9L,IAAiBA,EAAKxC,SAASsK,cAAc9H,IACxDA,EAAG+L,cAAc,IAAIxO,OAAOyO,MAAM1K,EAAMQ,OAAOyI,OAAO,CAAE0B,SAAS,EAAMC,UAAU,GAAQJ,MAE3FlB,KAAMA,GCjDR,WAAQA,GAAS/K,EAwKjB,MAtKA,SAASsM,EAAoBC,UACpB,cAAcA,iBACJC,UACNF,EAAoBE,yCAIpB,CAAC,oBAAoBC,OAAOvO,KAAKwO,8CAIjC,gCAICxF,EAAOK,IAAIrJ,KAAKsJ,cAAgB,CAAEQ,UAAU,IAASA,wCAIxD2E,OAASzO,KAAKyO,QAAUzO,KAAK8J,SAC9BtK,OAAOkP,UAAY1O,KAAK2O,gBAAkB3O,KAAKyO,OAAOG,QACxDpP,OAAOkP,SAASG,gBAAgB7O,KAAKyO,OAAQzO,KAAKsJ,kBAC7CmF,OAAOG,OAAQ,GAEf5O,KAAKyO,yCAIPK,UAAY9O,KAAK8O,WAAaC,EAAO7K,eAAelE,KAAKgP,MAAMzG,SAC7DvI,KAAK8O,0CAIL9O,KAAKuD,KAAKT,QAAQ,kBAAmB,SAASmM,gDAI9CjP,KAAKkP,MAGdzO,yBAEMT,KAAKS,YAAYuO,MAAO,MAErB1C,OAASvI,OAAOyI,OAAO,GAAIxM,KAAKS,YAAYsL,aAAc/L,KAAK0E,aAC9D6D,EAAUvI,KAAKS,YAAYuO,MAAMzG,QAAQ9G,WAAU,GACrDzB,KAAKS,YAAYkO,oBACdjH,MAAQqH,EAAO9K,YAAYsE,EAASvI,KAAKS,YAAYK,eACrDqO,aAAa,CAChBC,KAAM,cAEHC,WAAW9I,YAAYgC,QACvB8G,WAAWhC,iBAAiB,SAAU0B,EAAO5K,WAAY0I,SAEzDyC,UAAY/G,GAKvBgH,oBACMvP,KAAKS,YAAYkO,qBACdnK,YAAc,QACdkD,MAAQqH,EAAO9K,YAAYjE,KAAKsP,UAAWtP,KAAKS,YAAYK,eAC5DyF,YAAYvG,KAAKsP,YAEnBtP,KAAKuH,aAAa,qBAAwBvH,KAAKS,YAAYkO,eAAe3O,KAAKwP,cAC/EC,YAGPA,aAEAC,uBACM1P,KAAKqP,YAAYrP,KAAKqP,WAAWM,oBAAoB,SAAUZ,EAAO5K,WAAY0I,QACjF+C,eAGPA,gBAEAC,yBAAyBC,EAAUC,EAAQC,GACxB,qBAAbF,SACGpL,MAAQuL,KAAKC,MAAMF,SAErBG,kBAAkBL,EAAUC,EAAQC,GAG3CG,wCAISnQ,KAAKsM,iBAGJzI,GAEJ7D,KAAKsM,SAAWzI,GAAGE,OAAOyI,OAAOxM,KAAKsM,OAAQzI,QAC7C2L,cACAY,gBAGPA,iBAEAZ,SACEA,EAAOxP,MAGTyI,YAEA7D,QAAQrB,EAAO,aACTA,GAAaA,IAASvD,KAAKS,YAAY6I,YAI7CmD,WAAWC,UACF1M,KAAKyB,UAAUiL,GAGxB2D,kBAEO/D,OAAS,QACTkD,SAGPc,EAAEC,EAAMC,GAAK,UACPxQ,KAAKS,YAAYkO,eAAiB6B,EAAWxQ,KAAKqP,WAAWtF,cAAcwG,GACnEvQ,KAAK+J,cAAcwG,GAGjCE,GAAGF,EAAMC,GAAK,UACRxQ,KAAKS,YAAYkO,eAAiB6B,EAAWxQ,KAAKqP,WAAWtE,iBAAiBwF,GACtEvQ,KAAK+K,iBAAiBwF,wBAGfzK,EAAKgE,QACnB4G,YAAc1Q,KAAK0Q,aAAe,QAElCA,YAAY1Q,KAAKsJ,aAAetJ,KAAK0Q,YAAY1Q,KAAKsJ,cAAgB,QACtEoH,YAAY1Q,KAAKsJ,aAAaxD,GAAO6K,EAAc7G,GAG1D8G,WAAW9K,EAAK6F,EAAW3L,KAAK0E,MAAMoB,SAC/B+K,MAAQ7Q,KAAK6Q,OAAS,SACrB3K,EAAOlG,KAAK6Q,MAAM/K,IAAQ,EAC1BgL,EAAW,GACX1K,EAAOuF,EAASzI,WAClB7B,WAEFA,EAAOrB,KAAKS,YAAYiQ,YAAY1Q,KAAKS,YAAY6I,aAAaxD,IACvD,MAAMsD,MAAM,IACvB,MAAMhF,UACC5E,OAAOkL,QAAQG,yCAAyC/E,eAAiB9F,KAAKS,YAAY6I,oBAE9F,IAAIjG,EAAI,EAAGA,EAAI+C,EAAM/C,OACpBA,EAAI6C,EACN4K,EAAS5P,KAAK,CAAE8F,KAAM,cAAetC,MAAOiH,EAAStI,SAChD,OACCpB,EAAKZ,EAAKoL,YAAW,GAC3BxK,EAAGyC,MAAQiH,EAAStI,GACpByN,EAAS5P,KAAKe,eAGb4O,MAAM/K,GAAOM,EACX0K,IAKI1C,CAAoB5O,OAAOuR,aC3K5C,IAAIC,EAAW,CAGfA,SAAoB,GACpBA,gBAA2B,WAG3BA,EAASC,QAAUnP,EACnBkP,EAASjC,OAAShN,EAClBiP,EAAShI,OAASvB,EAClBuJ,EAASL,cAAgBO,EACzBF,EAAS/C,MAAQkD,EAEjBH,EAASnK,UAAYuK,EAGrBJ,EAASlH,SAAWuH,EAGpBL,EAASM,SAAW,EAACL,EAASlD,KAC5BkD,EAAQ/B,MAAQ8B,EAAS5G,OAAOuE,oBAC1BpL,EAAO0N,EAAQ3H,gBAChB/F,QACG6F,MAAM,gDAAiD6H,GACxD,GAAIzR,OAAO+R,eAAelF,IAAI9I,SAC7B6F,iCAAiC7F,yDAClC,GAAIA,EAAKd,QAAQ,KAAO,QACvB2G,iCAAiC7F,6DAGrC/D,OAAO+R,eAAeC,OAAOjO,EAAM0N,EAASlD,GAC5CiD,EAASS,SAASlO,GAAQ0N,GACnB,EACP,MAAOpG,UACPrL,OAAOkL,QAAQG,wCAAwCtH,OAAUsH,EAAM6G,UAAW7G,EAAM8G,QACjF,KAMbX,EAASY,MAAQ,SAASxH,MACxB4G,EAAS5G,OAASrG,OAAOyI,OAAO,CAC9BnC,QAAS,GACTsE,eAAe,GACdvE,GACoC,iBAA5B4G,EAAS5G,OAAOC,QAAsB,MAAMjB,MAAM,8BAC7D4H,EAAS/C,MAAMzE,IAAI,SACnBwH,EAAS/C,MAAMzE,IAAI,UACnBwH,EAAS/C,MAAMN,YAAY,SAAU,WAAYqD,EAASjC,OAAO5K,YACjE6M,EAAS/C,MAAMN,YAAY,QAAS,WAAYqD,EAASjC,OAAO5K,aAIlE6M,EAASa,KAAO,SAAS5I,GAAUC,IAAEA,EAAFsB,GAAOA,GAAK,GAAS,QAClDsH,EAAS,IAAId,EAAShI,OAAOC,EAAUC,UAC3C8H,EAASe,gBAAgB7Q,KAAKqQ,eAAeS,YAAY/I,IAClD6I,EAAOvH,eAAeC,IAG/BwG,EAASiB,QAAU,KACV3E,QAAQjE,IAAI2H,EAASe,kBAGbf"}