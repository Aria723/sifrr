{"version":3,"file":"sifrr.dom.min.js","sources":["../src/utils/json.js","../src/dom/ref.js","../src/dom/constants.js","../src/dom/parser.js","../src/dom/updateattribute.js","../src/dom/makeequal.js","../src/dom/update.js","../src/dom/template.js","../src/dom/loader.js","../src/dom/simpleelement.js","../src/dom/event.js","../src/dom/element.js","../src/sifrr.dom.js"],"sourcesContent":["const Json = {\n  parse: (data) => {\n    let ans = {};\n    if (typeof data == 'string') {\n      try {\n        ans = JSON.parse(data);\n      } catch(e) {\n        return data;\n      }\n      return Json.parse(ans);\n    } else if (Array.isArray(data)) {\n      ans = [];\n      data.forEach((v, i) => {\n        ans[i] = Json.parse(v);\n      });\n    } else if (typeof data == 'object') {\n      for (const k in data) {\n        ans[k] = Json.parse(data[k]);\n      }\n    } else {\n      return data;\n    }\n    return ans;\n  },\n  stringify: (data) => {\n    if (typeof data == 'string') {\n      return data;\n    } else {\n      return JSON.stringify(data);\n    }\n  },\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    return true;\n  },\n  deepClone: (json) => {\n    if (Array.isArray(json)) return json.map((i) => Json.deepClone(i));\n    if (typeof json !== 'object' || json === null) return json;\n    let clone = {};\n    for (let key in json) {\n      clone[key] = Json.deepClone(json[key]);\n    }\n    return clone;\n  }\n};\n\nmodule.exports = Json;\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\n\nTREE_WALKER.nextNonfilterNode = function(fxn) {\n  let node = this.currentNode;\n  if (fxn && fxn(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nTREE_WALKER.roll = function(n, filter) {\n  let node = this.currentNode;\n  while(--n) {\n    node = this.nextNonfilterNode(filter);\n  }\n  return node;\n};\n\nclass Ref {\n  constructor(idx, ref) {\n    this.idx = idx;\n    this.ref = ref;\n  }\n}\n\nfunction collect(element, stateMap, filter = false) {\n  const refs = [];\n  TREE_WALKER.currentNode = element;\n  stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n  return refs;\n}\n\nfunction create(node, fxn, filter = false) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node)) {\n      indices.push(new Ref(idx+1, ref));\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = TREE_WALKER.nextNonfilterNode(filter);\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create,\n  Ref\n};\n","const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\n// const sfn = window.document.createElement('sifrr-node');\n\nmodule.exports = {\n  // SIFRR_NODE: () => sfn.cloneNode(),\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1\n};\n","const { collect, create } = require('./ref');\nconst { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE } = require('./constants');\n\nfunction isHtml(el) {\n  return (el.dataset && el.dataset.sifrrHtml == 'true') ||\n    el.contentEditable == 'true' ||\n    el.nodeName == 'TEXTAREA' ||\n    el.nodeName == 'STYLE' ||\n    (el.dataset && el.dataset.sifrrRepeat);\n}\n\nfunction creator(el) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    // text node\n    const x = el.data;\n    if (x.indexOf('${') > -1) return {\n      html: false,\n      text: x\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (isHtml(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.html = true;\n        sm.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n      }\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '$') {\n        attrStateMap.events[attribute.name] = attribute.value;\n      } else if (attribute.value.indexOf('${') >= 0) {\n        if (attribute.name === 'style') {\n          const styles = {};\n          attribute.value.split(';').forEach((s) => {\n            const [n, v] = s.split(/:(?!\\/\\/)/);\n            if (n && v && v.indexOf('${') >= 0) {\n              styles[n.trim()] = v.trim();\n            }\n          });\n          attrStateMap[attribute.name] = styles;\n        } else {\n          attrStateMap[attribute.name] = attribute.value;\n        }\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nconst Parser = {\n  collectRefs: (el, stateMap) => collect(el, stateMap, isHtml),\n  createStateMap: (element) => create(element, creator, isHtml),\n  twoWayBind: (e) => {\n    const target = e.path ? e.path[0] : e.target;\n    if (!target.dataset.sifrrBind) return;\n    const value = target.value === undefined ? target.innerHTML : target.value;\n    let state = {};\n    let root;\n    if (target._root) {\n      root = target._root;\n    } else {\n      root = target;\n      while(!root.isSifrr) root = root.parentNode || root.host;\n      target._root = root;\n    }\n    state[target.dataset.sifrrBind] = value;\n    root.state = state;\n  },\n  evaluateString: (string, element) => {\n    if (string.indexOf('${') < 0) return string;\n    string = string.trim();\n    if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n    return replacer('`' + string + '`');\n\n    function replacer(match) {\n      if (match[0] == '$') match = match.slice(2, -1);\n      let f;\n      if (match.indexOf('return ') >= 0) {\n        f = new Function(match).bind(element);\n      } else {\n        f = new Function('return ' + match).bind(element);\n      }\n      return f();\n    }\n  }\n};\n\nmodule.exports = Parser;\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  const fromValue = element.getAttribute(name);\n  if (fromValue != newValue) {\n    // values are always cast to strings\n    if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n      if (fromValue) element.removeAttribute(name);\n    } else {\n      element.setAttribute(name, newValue);\n    }\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n};\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reuseNodes.js\nfunction makeChildrenEqual(parent, newChildren) {\n  // Lesser children now\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL;\n    while(i < newL) {\n      parent.appendChild(newChildren[i]);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (newNode === null) return oldNode;\n  if (newNode.type === 'stateChange') {\n    if (!shallowEqual(oldNode.state, newNode.state)) {\n      oldNode.state = newNode.state;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, newNode.childNodes);\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","const { makeChildrenEqual } = require('./makeequal');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateString } = require('./parser');\nconst TEMPLATE = require('./constants').TEMPLATE();\n\nmodule.exports = (element) => {\n  if (!element._refs) {\n    return false;\n  }\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    const data = element.constructor.stateMap[i].ref;\n    const dom = element._refs[i];\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key === 'events') {\n          for(let event in data.attributes.events) {\n            const eventLis = evaluateString(data.attributes.events[event], element, true);\n            if (data.attributes.events[event].slice(0, 6) === '${this') {\n              dom[event] = eventLis.bind(element);\n            } else {\n              dom[event] = eventLis;\n            }\n          }\n        } else if (key === 'style') {\n          for (let k in data.attributes.style) {\n            dom.style[k] = evaluateString(data.attributes.style[k], element);\n          }\n        } else {\n          const val = evaluateString(data.attributes[key], element);\n          updateAttribute(dom, key, val);\n        }\n      }\n    }\n\n    if (data.html === undefined) continue;\n\n    // update element\n    const newValue = evaluateString(data.text, element);\n    if (!newValue) { dom.textContent = ''; continue; }\n\n    if (data.html) {\n      // html node\n      let children;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.nodeType === 1) {\n        children = Array.prototype.slice.call(newValue.content.childNodes);\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else {\n        // Replace html tags in input from input/contenteditable/textarea\n        TEMPLATE.innerHTML = newValue.toString()\n        // All closing tags\n          .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n        // Self closing tags (void elements) from https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n          .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n        children = Array.prototype.slice.call(TEMPLATE.content.childNodes);\n      }\n      makeChildrenEqual(dom, children);\n    } else {\n      // text node\n      if (dom.data != newValue) {\n        dom.data = newValue || '';\n      }\n    }\n  }\n  element.onUpdate();\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl)\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) return window.console.log(`${this.elementName} was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script).bind(window)();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file gave error. Trying to get html file for ${this.elementName}.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text).call(window);\n        }\n      });\n    }).catch(e => window.console.error(e));\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst template = require('./template');\nconst { ELEMENT_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/index.js\nfunction creator(node) {\n  if (node.nodeType === ELEMENT_NODE) {\n    if (node.attributes !== undefined) {\n      const attrs = Array.from(node.attributes), l = attrs.length;\n      const ret = [];\n      for (let i = 0; i < l; i++) {\n        const avalue = attrs[i].value;\n        if (avalue[0] === '$') {\n          ret.push({\n            name: attrs[i].name,\n            text: avalue.slice(2, -1)\n          });\n          node.setAttribute(attrs[i].name, '');\n        }\n      }\n      if (ret.length > 0) return ret;\n    }\n    return 0;\n  } else {\n    let nodeData = node.data;\n    if (nodeData[0] === '$') {\n      node.data = '';\n      return nodeData.slice(2, -1);\n    }\n    return 0;\n  }\n}\n\nfunction updateState(simpleEl) {\n  const doms = simpleEl._refs, refs = simpleEl.stateMap, l = refs.length;\n  const newState = simpleEl.state, oldState = simpleEl._oldState;\n  for (let i = 0; i < l; i++) {\n    const data = refs[i].ref, dom = doms[i];\n    if (Array.isArray(data)) {\n      const l = data.length;\n      for (let i = 0; i < l; i++) {\n        const attr = data[i];\n        if (oldState[attr.text] !== newState[attr.text]) {\n          if (attr.name === 'class') dom.className = newState[attr.text];\n          else dom.setAttribute(attr.name, newState[attr.text]);\n        }\n      }\n    } else {\n      if (oldState[data] != newState[data]) dom.data = newState[data];\n    }\n  }\n}\n\nfunction SimpleElement(content, defaultState = null) {\n  let templ;\n  if (typeof content === 'string') {\n    templ = template(content);\n    content = templ.content.firstElementChild || templ.content.firstChild;\n  } else if (!content.nodeType) {\n    throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n  }\n  // Already sifrr element\n  if (content.isSifrr) return content;\n  if (content.nodeName.indexOf('-') !== -1 ||\n    // for '<tag is=custom-element></tag>'\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') >= 0)\n  ) {\n    // render node to make it sifrr element\n    window.document.body.appendChild(content);\n    content.remove();\n    return content;\n  }\n  content.stateMap = create(content, creator);\n  content._refs = collect(content, content.stateMap);\n  Object.defineProperty(content, 'state', {\n    get: () => content._state,\n    set: (v) => {\n      content._oldState = Object.assign({}, content._state);\n      content._state = Object.assign(content._state || {}, v);\n      updateState(content);\n    }\n  });\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep = true) {\n    const clone = content.cloneNode(deep);\n    clone.stateMap = content.stateMap;\n    clone._refs = collect(clone, content.stateMap);\n    Object.defineProperty(clone, 'state', {\n      get: () => clone._state,\n      set: (v) => {\n        clone._oldState = Object.assign({}, clone._state);\n        clone._state = Object.assign(clone._state || {}, v);\n        updateState(clone);\n      }\n    });\n    if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","// Taken from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    let dom = target;\n    while(dom) {\n      const eventHandler = dom[`$${name}`];\n      if (eventHandler) {\n        eventHandler(e, target);\n      }\n      cssMatchEvent(e, name, dom, target);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, target, dom));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts: opts\n};\n\nmodule.exports = Event;\n","const Parser = require('./parser');\nconst update = require('./update');\nconst JsonExt = require('../utils/json');\nconst Loader = require('./loader');\nconst SimpleElement = require('./simpleelement');\nconst { opts } = require('./event');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      this._ctemp = this._ctemp || this.template;\n      if (window.ShadyCSS && this.useShadowRoot && !this._ctemp.shady) {\n        window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        this._ctemp.shady = true;\n      }\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.ctemp.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        // this._oldState = {};\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const content = this.constructor.ctemp.content.cloneNode(true);\n        if (this.constructor.useShadowRoot) {\n          this._refs = Parser.collectRefs(content, this.constructor.stateMap);\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n          this.shadowRoot.addEventListener('change', Parser.twoWayBind, opts);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useShadowRoot) {\n        this.textContent = '';\n        this._refs = Parser.collectRefs(this.__content, this.constructor.stateMap);\n        this.appendChild(this.__content);\n      }\n      if (!this.hasAttribute('data-sifrr-state') || !this.constructor.useShadowRoot) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      if (this.shadowRoot) this.shadowRoot.removeEventListener('change', Parser.twoWayBind, opts);\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JsonExt.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      // return JsonExt.deepClone(this._state);\n      return this._state;\n    }\n\n    set state(v) {\n      // this._oldState = this.state;\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep) {\n      return this.cloneNode(deep);\n    }\n\n    clearState() {\n      // this._oldState = this.state;\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n\n    static addArrayToDom(key, template) {\n      this._arrayToDom = this._arrayToDom || {};\n      // state of simple element is single array item, compatible with sifrr element\n      this._arrayToDom[this.elementName] = this._arrayToDom[this.elementName] || {};\n      this._arrayToDom[this.elementName][key] = SimpleElement(template);\n    }\n\n    arrayToDom(key, newState = this.state[key]) {\n      this._domL = this._domL || {};\n      const oldL = this._domL[key] || 0;\n      const domArray = [];\n      const newL = newState.length;\n      let temp;\n      try {\n        temp = this.constructor._arrayToDom[this.constructor.elementName][key];\n        if (!temp) throw Error('');\n      } catch(e) {\n        return window.console.error(`[error]: No arrayToDom data of '${key}' added in ${this.constructor.elementName}.`);\n      }\n      for (let i = 0; i < newL; i++) {\n        if (i < oldL) {\n          domArray.push({ type: 'stateChange', state: newState[i] });\n        } else {\n          const el = temp.sifrrClone(true);\n          el.state = newState[i];\n          domArray.push(el);\n        }\n      }\n      this._domL[key] = newL;\n      return domArray;\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","const JsonExt = require('./utils/json');\n\n// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\nSifrrDom.makeEqual = require('./dom/makeequal');\nSifrrDom.Json = JsonExt;\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true } = {}) {\n  let loader = new SifrrDom.Loader(elemName, url);\n  SifrrDom.loadingElements.push(customElements.whenDefined(elemName));\n  return loader.executeScripts(js);\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["Json","parse","data","ans","JSON","e","Array","isArray","forEach","v","i","k","stringify","shallowEqual","a","b","key","deepClone","json","map","clone","TREE_WALKER","window","document","createTreeWalker","NodeFilter","SHOW_ALL","nextNonfilterNode","fxn","node","this","currentNode","nextSibling","parentNode","nextNode","roll","n","filter","Ref","constructor","idx","ref","collect","element","stateMap","refs","x","push","create","indices","temp","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","require$$0","require$$1","isHtml","el","dataset","sifrrHtml","contentEditable","nodeName","sifrrRepeat","creator","nodeType","indexOf","html","text","sm","innerHTML","replace","attrs","attributes","l","length","attrStateMap","events","attribute","name","value","styles","split","s","trim","Object","keys","collectRefs","createStateMap","twoWayBind","target","path","sifrrBind","undefined","root","state","_root","isSifrr","host","evaluateString","string","match","replacer","f","slice","Function","bind","newValue","fromValue","getAttribute","setAttribute","removeAttribute","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","Math","min","item","head","firstChild","makeEqual","oldNode","newNode","type","replaceWith","attr","oldAttrs","newAttrs","updateAttribute","j","hasAttribute","specified","require$$2","_refs","dom","event","eventLis","style","val","children","prototype","call","content","toString","textContent","onUpdate","str","extra","tmp","from","String","raw","Loader","elemName","url","fetch","Error","all","elementName","_html","add","me","file","htmlUrl","then","resp","template","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","join","executeScripts","js","_executed","console","log","catch","error","executeHTMLScripts","querySelectorAll","src","newScript","body","instance","_all","ret","avalue","nodeData","updateState","simpleEl","doms","newState","oldState","_oldState","className","defaultState","templ","firstElementChild","TypeError","remove","defineProperty","get","_state","set","assign","sifrrClone","deep","SYNTHETIC_EVENTS","opts","capture","passive","cssMatchEvent","callEach","fxns","css","matches","addEventListener","Promise","resolve","composedPath","eventHandler","nativeToSyntheticEvent","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","ShadyCSS","useShadowRoot","shady","prepareTemplate","_stateMap","Parser","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","__content","connectedCallback","update","onConnect","disconnectedCallback","removeEventListener","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JsonExt","onAttributeChange","onStateChange","clearState","$","args","sr","$$","_arrayToDom","SimpleElement","arrayToDom","_domL","domArray","HTMLElement","SifrrDom","Element","require$$3","require$$4","require$$5","require$$6","register","customElements","define","elements","message","trace","setup","load","loader","loadingElements","whenDefined","loading"],"mappings":"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"}