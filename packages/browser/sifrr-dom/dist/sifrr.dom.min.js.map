{"version":3,"file":"sifrr.dom.min.js","sources":["../src/dom/constants.js","../src/dom/ref.js","../src/dom/template.js","../src/dom/updateattribute.js","../src/utils/json.js","../src/dom/makeequal.js","../src/dom/keyed.js","../src/dom/bindings.js","../src/dom/update.js","../src/dom/simpleelement.js","../src/dom/repeatref.js","../src/dom/creator.js","../src/dom/parser.js","../src/dom/loader.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js"],"sourcesContent":["const temp = window.document.createElement('template');\nconst script = window.document.createElement('script');\nconst reg = '(\\\\${(?:(?:[^{}$]|{(?:[^{}$])*})*)})';\n\nmodule.exports = {\n  TEMPLATE: () => temp.cloneNode(false),\n  SCRIPT: () => script.cloneNode(false),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1,\n  OUTER_REGEX: new RegExp(reg, 'g'),\n  STATE_REGEX: /^\\$\\{this\\.state\\.([a-zA-Z0-9_$]+)\\}$/,\n  HTML_ATTR: 'data-sifrr-html',\n  REPEAT_ATTR: 'data-sifrr-repeat',\n  KEY_ATTR: 'data-sifrr-key'\n};\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(window.document, window.NodeFilter.SHOW_ALL, null, false);\nconst { HTML_ATTR } = require('./constants');\n\nfunction isHtml(el) {\n  return el.hasAttribute && el.hasAttribute(HTML_ATTR);\n}\n\nTREE_WALKER.nextFilteredNode = function() {\n  let node = this.currentNode;\n  if (isHtml(node)){\n    node = this.nextSibling() || (this.parentNode(), this.nextSibling());\n  } else node = this.nextNode();\n  return node;\n};\n\nTREE_WALKER.roll = function(n, next = 'nextFilteredNode') {\n  let node = this.currentNode;\n  while(--n) {\n    node = this[next]();\n  }\n  return node;\n};\n\nfunction collect(element, stateMap, next) {\n  const refs = [], l = stateMap.length;\n  TREE_WALKER.currentNode = element;\n  for (let i = 0; i < l; i++) {\n    refs.push(TREE_WALKER.roll(stateMap[i].idx, next));\n  }\n  return refs;\n}\n\nfunction create(node, fxn) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    // eslint-disable-next-line no-cond-assign\n    if (ref = fxn(node, isHtml)) {\n      indices.push({ idx: idx+1, ref });\n      idx = 1;\n    } else {\n      idx++;\n    }\n    node = TREE_WALKER.nextFilteredNode(node);\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  collect,\n  create\n};\n","const { TEMPLATE } = require('./constants');\n\nmodule.exports = (str, ...extra) => {\n  const tmp = TEMPLATE();\n  if (typeof str === 'string') {\n    // nothing\n  } else if (str[0] && typeof str[0] === 'string') {\n    str = String.raw(str, ...extra);\n  } else if (str[0]) {\n    Array.from(str).forEach((s) => {\n      tmp.content.appendChild(s);\n    });\n    return tmp;\n  } else if (str.nodeType && !str.content) {\n    tmp.content.appendChild(str);\n    return tmp;\n  } else {\n    return str;\n  }\n  str = str\n    .replace(/>\\n+/g, '>')\n    .replace(/\\s+</g, '<')\n    .replace(/>\\s+/g, '>')\n    .replace(/(\\\\)?\\$(\\\\)?\\{/g, '${');\n  tmp.innerHTML = str;\n  return tmp;\n};\n","// Attribute related gotchas\nmodule.exports = (element, name, newValue) => {\n  const fromValue = element.getAttribute(name);\n  if (newValue === false || newValue === null || newValue === undefined) element.removeAttribute(name);\n  else if (fromValue !== newValue) {\n    if (name === 'class') element.className = newValue;\n    else element.setAttribute(name, newValue);\n  }\n\n  // select/input's value doesn't change on changing value attribute\n  if (name == 'value' && (element.nodeName == 'SELECT' || element.nodeName == 'INPUT')) element.value = newValue;\n};\n","const Json = {\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nmodule.exports = Json;\n","const updateAttribute = require('./updateattribute');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\nfunction makeChildrenEqual(parent, newChildren, createFn) {\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  // Fast path for clear\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // More Children now\n  if (oldL < newL) {\n    let i = oldL, addition;\n    while(i < newL) {\n      addition = newChildren[i];\n      if (!newChildren[i].nodeType) addition = createFn(newChildren[i]);\n      parent.appendChild(addition);\n      i++;\n    }\n  // Lesser children now\n  } else if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  }\n\n  // Fast path for create\n  if (oldL === 0) return;\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (!newNode.nodeType) {\n    if (!shallowEqual(oldNode.state, newNode)) {\n      oldNode.state = newNode;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  // Text or comment node\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  const oldAttrs = oldNode.attributes, newAttrs = newNode.attributes;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    if (!newNode.hasAttribute(oldAttrs[j].name)) oldNode.removeAttribute(oldAttrs[j].name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, Array.prototype.slice.call(newNode.childNodes));\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual,\n  makeChildrenEqual\n};\n","/* eslint-disable max-lines */\nconst { makeEqual } = require('./makeequal');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reconcile.js\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses manipukates dom only when required\n\nfunction makeChildrenEqualKeyed(parent, newData, createFn, key) {\n  // Fast path for clear\n  const newL = newData.length;\n  if (newL === 0) {\n    parent.textContent = '';\n    return;\n  }\n\n  // Fast path for create\n  const oldL = parent.childNodes.length;\n  if (oldL === 0) {\n    for(let i = 0; i < newL; i++) {\n      parent.appendChild(createFn(newData[i]));\n    }\n    return;\n  }\n\n  // reconciliation\n  let prevStart = 0,\n    newStart = 0,\n    loop = true,\n    prevEnd = oldL - 1, newEnd = newL - 1,\n    prevStartNode = parent.firstChild,\n    prevEndNode = parent.lastChild,\n    finalNode,\n    a, b, _node;\n\n  fixes: while(loop) {\n    loop = false;\n\n    // Skip prefix\n    a = prevStartNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      makeEqual(prevStartNode, b);\n      prevStart++;\n      prevStartNode = prevStartNode.nextSibling;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newStart];\n    }\n\n    // Skip suffix\n    a = prevEndNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      makeEqual(prevEndNode, b);\n      prevEnd--;\n      finalNode = prevEndNode;\n      prevEndNode = prevEndNode.previousSibling;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newEnd];\n    }\n\n    // Fast path to swap backward\n    a = prevEndNode.state, b = newData[newStart];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevEndNode, b);\n      _node = prevEndNode.previousSibling;\n      parent.insertBefore(prevEndNode, prevStartNode);\n      prevEndNode = _node;\n      prevEnd--;\n      newStart++;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevEndNode.state, b = newData[newStart];\n    }\n\n    // Fast path to swap forward\n    a = prevStartNode.state, b = newData[newEnd];\n    while(a[key] === b[key]) {\n      loop = true;\n      makeEqual(prevStartNode, b);\n      _node = prevStartNode.nextSibling;\n      parent.insertBefore(prevStartNode, prevEndNode.nextSibling);\n      finalNode = prevStartNode;\n      prevEndNode = prevStartNode.previousSibling;\n      prevStartNode = _node;\n      prevStart++;\n      newEnd--;\n      if (prevEnd < prevStart || newEnd < newStart) break fixes;\n      a = prevStartNode.state, b = newData[newEnd];\n    }\n  }\n\n  // Fast path for shrink\n  if (newEnd < newStart) {\n    if (prevStart <= prevEnd) {\n      let next;\n      while(prevStart <= prevEnd) {\n        if (prevEnd === 0) {\n          parent.removeChild(prevEndNode);\n        } else {\n          next = prevEndNode.previousSibling;\n          parent.removeChild(prevEndNode);\n          prevEndNode = next;\n        }\n        prevEnd--;\n      }\n    }\n    return;\n  }\n\n  // Fast path for add\n  if (prevEnd < prevStart) {\n    if (newStart <= newEnd) {\n      while(newStart <= newEnd) {\n        _node = createFn(newData[newStart]);\n        parent.insertBefore(_node, prevEndNode.nextSibling);\n        prevEndNode = _node;\n        newStart++;\n      }\n    }\n    return;\n  }\n\n  const oldKeys = new Array(newEnd + 1 - newStart), newKeys = new Map(), nodes = [], toDelete = [];\n\n  for(let i = newStart; i <= newEnd; i++) {\n    // Positions for reusing nodes from current DOM state\n    oldKeys[i] = -1;\n    // Index to resolve position from current to new\n    newKeys.set(newData[i][key], i);\n  }\n\n  let reusingNodes = 0;\n  while (prevStart <= prevEnd) {\n    if (newKeys.has(prevStartNode.state[key])) {\n      oldKeys[newKeys.get(prevStartNode.state[key])] = prevStart;\n      reusingNodes++;\n    } else {\n      toDelete.push(prevStartNode);\n    }\n    nodes[prevStart] = prevStartNode;\n    prevStartNode = prevStartNode.nextSibling;\n    prevStart++;\n  }\n\n  // Fast path for full replace\n  if (reusingNodes === 0) {\n    for(let i = newStart; i <= newEnd; i++) {\n      // Add extra nodes\n      parent.insertBefore(createFn(newData[i]), prevStartNode);\n    }\n    // Remove extra nodes\n    for(let i = 0; i < toDelete.length; i++) {\n      parent.removeChild(toDelete[i]);\n    }\n    return;\n  }\n\n  const longestSeq = longestPositiveIncreasingSubsequence(oldKeys, newStart);\n\n  let lisIdx = longestSeq.length - 1, tmpD;\n  for(let i = newEnd; i >= newStart; i--) {\n    if(longestSeq[lisIdx] === i) {\n      finalNode = nodes[oldKeys[i]];\n      makeEqual(finalNode, newData[i]);\n      lisIdx--;\n    } else {\n      if (oldKeys[i] === -1) {\n        tmpD = createFn(newData[i]);\n      } else {\n        tmpD = nodes[oldKeys[i]];\n        makeEqual(tmpD, newData[i]);\n      }\n      parent.insertBefore(tmpD, finalNode);\n      finalNode = tmpD;\n    }\n  }\n\n  for(let i = 0; i < toDelete.length; i++) {\n    parent.removeChild(toDelete[i]);\n  }\n}\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n  let seq = [],\n    is  = [],\n    l   = -1,\n    pre = new Array(ns.length);\n\n  for (let i = newStart, len = ns.length; i < len; i++) {\n    let n = ns[i];\n    if (n < 0) continue;\n    let j = findGreatestIndexLEQ(seq, n);\n    if (j !== -1) pre[i] = is[j];\n    if (j === l) {\n      l++;\n      seq[l] = n;\n      is[l]  = i;\n    } else if (n < seq[j + 1]) {\n      seq[j + 1] = n;\n      is[j + 1] = i;\n    }\n  }\n\n  for (let i = is[l]; l >= 0; i = pre[i], l--) {\n    seq[l] = i;\n  }\n\n  return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n  // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n  // therefore, they actually start out of range: (-1, last + 1)\n  let lo = -1,\n    hi = seq.length;\n\n  // fast path for simple increasing sequences\n  if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n  while (hi - lo > 1) {\n    let mid = Math.floor((lo + hi) / 2);\n    if (seq[mid] > n) {\n      hi = mid;\n    } else {\n      lo = mid;\n    }\n  }\n\n  return lo;\n}\n\nmodule.exports = {\n  makeChildrenEqualKeyed,\n  longestPositiveIncreasingSubsequence\n};\n","const { OUTER_REGEX, STATE_REGEX } = require('./constants');\n\nfunction replacer(match) {\n  let f;\n  if (match.indexOf('return ') >= 0) {\n    f = match;\n  } else {\n    f = 'return ' + match;\n  }\n  try {\n    return new Function(f);\n  } catch(e) {\n    window.console.log(`Error processing binding: \\`${f}\\``);\n    return '';\n  }\n}\n\nfunction evaluate(fxn, el) {\n  try {\n    if (typeof fxn === 'string') return fxn;\n    else return fxn.call(el);\n  } catch(e) {\n    const str = fxn.toString();\n    window.console.log(`Error evaluating: \\`${str.slice(str.indexOf('{') + 1, str.lastIndexOf('}'))}\\` for element`, el);\n    window.console.error(e);\n  }\n}\n\nconst Bindings = {\n  getBindingFxns: (string) => {\n    const splitted = string.split(OUTER_REGEX), l = splitted.length, ret = [];\n    for (let i = 0; i < l; i++) {\n      if (splitted[i][0] === '$' && splitted[i][1] === '{') {\n        ret.push(replacer(splitted[i].slice(2, -1)));\n      } else if (splitted[i]) ret.push(splitted[i]);\n    }\n    if (ret.length === 1) return ret[0];\n    return ret;\n  },\n  getStringBindingFxn: (string) => {\n    const match = string.match(STATE_REGEX);\n    if (match) return match[1];\n    return Bindings.getBindingFxns(string);\n  },\n  evaluateBindings: (fxns, element) => {\n    if (typeof fxns === 'function') return evaluate(fxns, element);\n    return fxns.map(fxn => evaluate(fxn, element)).join('');\n  },\n  evaluate: evaluate,\n  replacer: replacer\n};\n\nmodule.exports = Bindings;\n","const { makeChildrenEqual } = require('./makeequal');\nconst { makeChildrenEqualKeyed } = require('./keyed');\nconst updateAttribute = require('./updateattribute');\nconst { evaluateBindings } = require('./bindings');\nconst { TEMPLATE, KEY_ATTR } = require('./constants');\n\nfunction customElementUpdate(element, stateMap) {\n  if (!element._refs) {\n    return false;\n  }\n  stateMap = stateMap || element.constructor.stateMap;\n  let data, dom, newValue;\n  // Update nodes\n  const l = element._refs.length;\n  for (let i = 0; i < l; i++) {\n    data = stateMap[i].ref;\n    dom = element._refs[i];\n\n    // Fast path for text nodes\n    if (data.type === 0) {\n      // state node\n      newValue = element.state[data.text];\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    } else if (data.type === 1) {\n      // text node\n      newValue = evaluateBindings(data.text, element);\n      if (dom.data != newValue) dom.data = newValue;\n      continue;\n    }\n\n    // update attributes\n    if (data.attributes) {\n      for(let key in data.attributes) {\n        if (key !== 'events') {\n          const val = evaluateBindings(data.attributes[key], element);\n          updateAttribute(dom, key, val);\n        } else {\n          if (!dom._sifrrEventSet) {\n            for(let event in data.attributes.events) {\n              dom[event] = evaluateBindings(data.attributes.events[event], element);\n            }\n            dom._root = element;\n            dom._sifrrEventSet = true;\n          }\n        }\n      }\n    }\n\n    if (data.text === undefined) continue;\n\n    // update element\n    newValue = evaluateBindings(data.text, element);\n\n    if (data.type === 3) {\n      // repeat\n      const key = dom.getAttribute(KEY_ATTR);\n      if (key) makeChildrenEqualKeyed(dom, newValue, (state) => data.se.sifrrClone(true, state), key);\n      else makeChildrenEqual(dom, newValue, (state) => data.se.sifrrClone(true, state));\n    } else {\n      // html node\n      let children;\n      if (Array.isArray(newValue)) {\n        children = newValue;\n      } else if (newValue.content && newValue.content.nodeType === 11) {\n        children = Array.prototype.slice.call(newValue.content.childNodes);\n      } else if (newValue.nodeType) {\n        children = [newValue];\n      } else if (typeof newValue === 'string') {\n        const temp = TEMPLATE();\n        temp.innerHTML = newValue.toString();\n        children = Array.prototype.slice.call(temp.content.childNodes);\n      } else {\n        children = Array.prototype.slice.call(newValue);\n      }\n      makeChildrenEqual(dom, children);\n    }\n  }\n  if (element.onUpdate) element.onUpdate();\n}\n\nmodule.exports = customElementUpdate;\n","const template = require('./template');\nconst update = require('./update');\nconst Parser = require('./parser');\n\nfunction SimpleElement(content, defaultState = null) {\n  if (!content.nodeType && typeof content !== 'string') {\n    if (!content[0] || !content[0].nodeType) {\n      throw TypeError('First argument for SimpleElement should be of type string or DOM element');\n    }\n  }\n  const templ = template(content);\n  content = templ.content.firstElementChild || templ.content.firstChild;\n  // Already sifrr element\n  if (content.isSifrr || content.nodeName.indexOf('-') !== -1 ||\n    (content.getAttribute && content.getAttribute('is') && content.getAttribute('is').indexOf('-') !== -1)\n  ) {\n    return content;\n  }\n  const stateMap = Parser.createStateMap(content, false);\n  function setProps(me) {\n    me._refs = Parser.collectRefsSimple(me, stateMap);\n    Object.defineProperty(me, 'state', {\n      get: () => me._state,\n      set: (v) => {\n        me._state = Object.assign(me._state || {}, v);\n        update(me, stateMap);\n      }\n    });\n  }\n  setProps(content);\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep = true, newState) {\n    const clone = content.cloneNode(deep);\n    setProps(clone);\n    if (newState) clone.state = newState;\n    else if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const simpleElement = require('./simpleelement');\nconst { getBindingFxns } = require('./bindings');\n\nmodule.exports = (sm, el, attr) => {\n  sm.type = 3;\n  sm.se = simpleElement(el.childNodes);\n  sm.text = getBindingFxns(el.getAttribute(attr));\n  el.textContent = '';\n  el.removeAttribute(attr);\n};\n","const { TEXT_NODE, COMMENT_NODE, ELEMENT_NODE, REPEAT_ATTR } = require('./constants');\nconst repeatref = require('./repeatref');\n// ref types:\n// 0: state\n// 1: text\n// 2: html\n// 3: arrayToDom\nconst { getBindingFxns, getStringBindingFxn } = require('./bindings');\n\nfunction customElementCreator(el, filter) {\n  if (el.nodeType === TEXT_NODE || el.nodeType === COMMENT_NODE) {\n    // text node\n    const x = el.data;\n    if (x.indexOf('${') > -1) {\n      const binding = getStringBindingFxn(x.trim());\n      if (typeof binding !== 'string') {\n        return {\n          type: 1,\n          text: binding\n        };\n      } else {\n        return {\n          type: 0,\n          text: binding\n        };\n      }\n    }\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const sm = {};\n    // Html ?\n    if (filter(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        sm.type = 2;\n        sm.text = getBindingFxns(innerHTML.replace(/<!--((?:(?!-->).)+)-->/g, '$1').trim());\n      }\n    } else if (el.hasAttribute(REPEAT_ATTR)) {\n      repeatref(sm, el, REPEAT_ATTR);\n    }\n    // attributes\n    const attrs = el.attributes, l = attrs.length;\n    const attrStateMap = { events: {} };\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.name[0] === '_') {\n        attrStateMap.events[attribute.name] = getBindingFxns(attribute.value);\n      } else if (attribute.value.indexOf('${') >= 0) {\n        // Don't treat style differently because same performance https://jsperf.com/style-property-vs-style-attribute/2\n        attrStateMap[attribute.name] = getBindingFxns(attribute.value);\n      }\n    }\n    if (Object.keys(attrStateMap.events).length === 0) delete attrStateMap.events;\n    if (Object.keys(attrStateMap).length > 0) sm.attributes = attrStateMap;\n\n    if (Object.keys(sm).length > 0) return sm;\n  }\n  return 0;\n}\n\nmodule.exports = customElementCreator;\n","const { collect, create } = require('./ref');\nconst creator = require('./creator');\n\nconst Parser = {\n  collectRefs: collect,\n  collectRefsSimple: (element, stateMap) => collect(element, stateMap, 'nextNode'),\n  createStateMap: (element) => create(element, creator),\n  twoWayBind: (e) => {\n    const target = e.composedPath ? e.composedPath()[0] : e.target;\n    if (!target.hasAttribute('data-sifrr-bind') || target._root === null) return;\n    const value = target.value || target.textContent;\n    let state = {};\n    if (!target._root) {\n      let root;\n      root = target;\n      while(root && !root.isSifrr) root = root.parentNode || root.host;\n      if (root) target._root = root;\n      else target._root = null;\n    }\n    state[target.getAttribute('data-sifrr-bind')] = value;\n    if (target._root) target._root.state = state;\n  }\n};\n\nmodule.exports = Parser;\n","const fetch = require('@sifrr/fetch');\nconst template = require('./template');\n\nclass Loader {\n  constructor(elemName, url, onProgress) {\n    if (!fetch) throw Error('Sifrr.Dom.load requires Sifrr.Fetch to work.');\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName];\n    this.elementName = elemName;\n    this.url = url;\n    this.onProgress = onProgress;\n  }\n\n  get html() {\n    if (this._html) return this._html;\n    Loader.add(this.elementName, this);\n    const me = this;\n    this._html = fetch.file(this.htmlUrl, { onProgress: this.onProgress })\n      .then((resp) => resp.text())\n      .then((file) => template(file).content).then((content) => {\n        me.template = content.querySelector('template');\n        return content;\n      });\n    return this._html;\n  }\n\n  get js() {\n    if (this._js) return this._js;\n    Loader.add(this.elementName, this);\n    this._js = fetch.file(this.jsUrl, { onProgress: this.onProgress })\n      .then((resp) => resp.text());\n    return this._js;\n  }\n\n  get htmlUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  get jsUrl() {\n    return this.url || `${window.Sifrr.Dom.config.baseUrl + '/'}elements/${this.elementName.split('-').join('/')}.js`;\n  }\n\n  executeScripts(js) {\n    if (this._executed) throw Error(`'${this.elementName}' element's javascript was already executed`);\n    this._executed = true;\n    if (!js) {\n      return this.executeHTMLScripts();\n    } else {\n      return this.js.then((script) => {\n        new Function(script + `\\n //# sourceURL=${this.jsUrl}`).call();\n      }).catch((e) => {\n        window.console.error(e);\n        window.console.log(`JS file for '${this.elementName}' gave error. Trying to get html file.`);\n        return this.executeHTMLScripts();\n      });\n    }\n  }\n\n  executeHTMLScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        if (script.src) {\n          // Appending script node directly doesn't work\n          const newScript = require('./constants').SCRIPT();\n          newScript.src = script.src;\n          newScript.type = script.type;\n          window.document.body.appendChild(newScript);\n        } else {\n          new Function(script.text + `\\n //# sourceURL=${this.htmlUrl}`).call({ currentTempate: file.querySelector('template') });\n        }\n      });\n    }).catch(e => { throw e; });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\n\nmodule.exports = Loader;\n","const Parser = require('./parser');\nconst update = require('./update');\nconst Loader = require('./loader');\nconst { makeChildrenEqual } = require('./makeequal');\n\nfunction elementClassFactory(baseClass) {\n  return class extends baseClass {\n    static extends(htmlElementClass) {\n      return elementClassFactory(htmlElementClass);\n    }\n\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n\n    static observedAttrs() {\n      return [];\n    }\n\n    static get template() {\n      return (Loader.all[this.elementName] || { template: false }).template;\n    }\n\n    static get ctemp() {\n      this._ctemp = this._ctemp || this.template;\n      if (window.ShadyCSS && this.useShadowRoot && !this._ctemp.shady) {\n        window.ShadyCSS.prepareTemplate(this._ctemp, this.elementName);\n        this._ctemp.shady = true;\n      }\n      return this._ctemp;\n    }\n\n    static get stateMap() {\n      this._stateMap = this._stateMap || Parser.createStateMap(this.ctemp.content);\n      return this._stateMap;\n    }\n\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n\n    static get useShadowRoot() {\n      return this.useSR;\n    }\n\n    constructor() {\n      super();\n      if (this.constructor.ctemp) {\n        this._state = Object.assign({}, this.constructor.defaultState, this.state);\n        const stateMap = this.constructor.stateMap, content = this.constructor.ctemp.content.cloneNode(true);\n        this._refs = Parser.collectRefs(content, stateMap);\n        if (this.constructor.useShadowRoot) {\n          this.attachShadow({\n            mode: 'open'\n          });\n          this.shadowRoot.appendChild(content);\n        } else {\n          this.__content = content;\n        }\n      }\n    }\n\n    connectedCallback() {\n      if(!this.constructor.useShadowRoot && this.__content) {\n        makeChildrenEqual(this, Array.prototype.slice.call(this.__content.childNodes));\n        delete this.__content;\n      }\n      if (!this.hasAttribute('data-sifrr-state')) this.update();\n      this.onConnect();\n    }\n\n    onConnect() {}\n\n    disconnectedCallback() {\n      this.onDisconnect();\n    }\n\n    onDisconnect() {}\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = JSON.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n\n    onAttributeChange() {}\n\n    get state() {\n      return this._state;\n    }\n\n    set state(v) {\n      if (this._state !== v) Object.assign(this._state, v);\n      this.update();\n      this.onStateChange();\n    }\n\n    onStateChange() {}\n\n    update() {\n      update(this);\n    }\n\n    onUpdate() {}\n\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;\n      else return true;\n    }\n\n    sifrrClone(deep, state) {\n      const clone = this.cloneNode(deep);\n      clone._state = state;\n      return clone;\n    }\n\n    clearState() {\n      this._state = {};\n      this.update();\n    }\n\n    $(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n      else return this.querySelector(args);\n    }\n\n    $$(args, sr = true) {\n      if (this.constructor.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n      else return this.querySelectorAll(args);\n    }\n  };\n}\n\nmodule.exports = elementClassFactory(window.HTMLElement);\n","// Inspired from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\nconst opts = { capture: true, passive: true };\n\nconst nativeToSyntheticEvent = (e, name) => {\n  const target = e.composedPath ? e.composedPath()[0] : e.target;\n  let dom = target;\n  while(dom) {\n    Promise.resolve((() => {\n      const eventHandler = dom[`_${name}`] || (dom.hasAttribute ? dom.getAttribute(`_${name}`) : null);\n      if (typeof eventHandler === 'function') {\n        eventHandler.call(dom._root || window, e, target);\n      } else if (typeof eventHandler === 'string') {\n        new Function('event', 'target', eventHandler).call(dom._root || window, event, target);\n      }\n      cssMatchEvent(e, name, dom, target);\n    })());\n    dom = dom.parentNode || dom.host;\n  }\n};\n\nconst cssMatchEvent = (e, name, dom, target) => {\n  Promise.resolve((() => {\n    function callEach(fxns) {\n      fxns.forEach((fxn) => fxn(e, target, dom));\n    }\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  })());\n};\n\nconst Event = {\n  all: SYNTHETIC_EVENTS,\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.addEventListener(name, event => nativeToSyntheticEvent(event, name), opts);\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    if (typeof el === 'string') el = document.querySelector(el);\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  },\n  opts,\n  nativeToSyntheticEvent\n};\n\nmodule.exports = Event;\n","// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\nSifrrDom.loadingElements = [];\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\nSifrrDom.makeEqual = require('./dom/makeequal');\n\n// HTML to template\nSifrrDom.template = require('./dom/template');\n\n// Register Custom Element Function\nSifrrDom.register = (Element, options) => {\n  Element.useSR = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    throw Error('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    throw Error(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    throw Error(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element, options);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.error(`Error creating Custom Element: ${name} - ${error.message}`, error.trace);\n      return false;\n    }\n  }\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  HTMLElement.prototype.$ = HTMLElement.prototype.querySelector;\n  HTMLElement.prototype.$$ = HTMLElement.prototype.querySelectorAll;\n  SifrrDom.config = Object.assign({\n    baseUrl: '',\n    useShadowRoot: true\n  }, config);\n  if (typeof SifrrDom.config.baseUrl !== 'string') throw Error('baseUrl should be a string');\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, { url, js = true, onProgress } = {}) {\n  if (window.customElements.get(elemName)) { return window.console.warn(`Error loading Element: ${elemName} - Custom Element with this name is already defined.`); }\n  let loader = new SifrrDom.Loader(elemName, url, onProgress);\n  const wd = customElements.whenDefined(elemName);\n  SifrrDom.loadingElements.push(wd);\n  return loader.executeScripts(js).then(() => {\n    if (!window.customElements.get(elemName)) {\n      window.console.warn(`Executing '${elemName}' file didn't register the element. Ignore if you are registering element in a promise or async function.`);\n    }\n  }).catch(e => {\n    SifrrDom.loadingElements.splice(SifrrDom.loadingElements.indexOf(wd), 1);\n    throw e;\n  });\n};\n\nSifrrDom.loading = () => {\n  return Promise.all(SifrrDom.loadingElements);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["temp","window","document","createElement","script","TEMPLATE","cloneNode","SCRIPT","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","OUTER_REGEX","RegExp","STATE_REGEX","HTML_ATTR","REPEAT_ATTR","KEY_ATTR","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","require$$0","isHtml","el","hasAttribute","nextFilteredNode","node","this","currentNode","nextSibling","parentNode","nextNode","roll","n","next","collect","element","stateMap","refs","l","length","i","push","idx","create","fxn","ref","indices","str","extra","tmp","Array","from","forEach","s","content","appendChild","nodeType","String","raw","replace","innerHTML","name","newValue","fromValue","getAttribute","removeAttribute","className","setAttribute","nodeName","value","shallowEqual","a","b","key","require$$1","makeChildrenEqual","parent","newChildren","createFn","oldL","childNodes","newL","textContent","addition","removeChild","lastChild","Math","min","item","head","firstChild","makeEqual","oldNode","newNode","state","replaceWith","data","oldAttrs","attributes","newAttrs","updateAttribute","j","prototype","slice","call","longestPositiveIncreasingSubsequence","ns","newStart","seq","is","pre","len","findGreatestIndexLEQ","lo","hi","mid","floor","makeChildrenEqualKeyed","newData","finalNode","_node","prevStart","loop","prevEnd","newEnd","prevStartNode","prevEndNode","fixes","previousSibling","insertBefore","oldKeys","newKeys","Map","nodes","toDelete","set","reusingNodes","has","get","longestSeq","tmpD","lisIdx","replacer","match","f","indexOf","Function","e","console","log","evaluate","toString","lastIndexOf","error","Bindings","getBindingFxns","string","splitted","split","ret","getStringBindingFxn","evaluateBindings","fxns","map","join","require$$2","require$$3","_refs","dom","constructor","type","val","_sifrrEventSet","event","events","_root","undefined","text","se","sifrrClone","children","isArray","onUpdate","defaultState","TypeError","templ","template","firstElementChild","isSifrr","Parser","createStateMap","setProps","me","collectRefsSimple","Object","defineProperty","_state","v","assign","update","deep","newState","clone","sm","attr","simpleElement","filter","x","binding","trim","repeatref","attrs","attrStateMap","attribute","keys","collectRefs","creator","twoWayBind","target","composedPath","root","host","Loader","elemName","url","onProgress","fetch","Error","all","elementName","_html","add","file","htmlUrl","then","resp","querySelector","_js","jsUrl","Sifrr","Dom","config","baseUrl","executeScripts","js","_executed","catch","executeHTMLScripts","html","querySelectorAll","src","newScript","body","currentTempate","instance","_all","elementClassFactory","baseClass","htmlElementClass","concat","observedAttrs","_ctemp","ShadyCSS","useShadowRoot","shady","prepareTemplate","_stateMap","ctemp","toLowerCase","useSR","attachShadow","mode","shadowRoot","__content","connectedCallback","onConnect","disconnectedCallback","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JSON","parse","onAttributeChange","onStateChange","clearState","$","args","sr","$$","HTMLElement","SYNTHETIC_EVENTS","opts","capture","passive","nativeToSyntheticEvent","Promise","resolve","eventHandler","cssMatchEvent","callEach","css","matches","addEventListener","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","SimpleElement","require$$4","require$$5","require$$6","register","customElements","define","elements","message","trace","setup","load","warn","loader","wd","whenDefined","loadingElements","loading"],"mappings":"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"}