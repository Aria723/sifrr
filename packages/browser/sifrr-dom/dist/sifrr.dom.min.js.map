{"version":3,"file":"sifrr.dom.min.js","sources":["../src/utils/url.js","../src/utils/json.js","../src/dom/update.js","../src/dom/constants.js","../src/dom/makeequal.js","../src/dom/ref.js","../src/dom/parser.js","../../sifrr-fetch/dist/sifrr.fetch.js","../src/dom/loader.js","../src/dom/simpleelement.js","../src/dom/element.js","../src/dom/event.js","../src/sifrr.dom.js"],"sourcesContent":["const URLExt = {\n  absolute: (base, relative) => {\n    let stack = base.split('/'),\n      parts = relative.split('/');\n    stack.pop();\n    for (let i = 0; i < parts.length; i++) {\n      if (parts[i] == '.')\n        continue;\n      if (parts[i] == '..')\n        stack.pop();\n      else\n        stack.push(parts[i]);\n    }\n    return stack.join('/');\n  },\n  getRoutes: (url) => {\n    if (url[0] != '/') {\n      url = '/' + url;\n    }\n    let qIndex = url.indexOf('?');\n    if (qIndex != -1) {\n      url = url.substring(0, qIndex);\n    }\n    return url.split('/');\n  }\n};\n\nmodule.exports = URLExt;\n","const Json = {\n  parse: (data) => {\n    let ans = {};\n    if (typeof data == 'string') {\n      try {\n        ans = JSON.parse(data);\n      } catch(e) {\n        return data;\n      }\n      return Json.parse(ans);\n    } else if (Array.isArray(data)) {\n      ans = [];\n      data.forEach((v, i) => {\n        ans[i] = Json.parse(v);\n      });\n    } else if (typeof data == 'object') {\n      for (const k in data) {\n        ans[k] = Json.parse(data[k]);\n      }\n    } else {\n      return data;\n    }\n    return ans;\n  },\n  stringify: (data) => {\n    if (typeof data == 'string') {\n      return data;\n    } else {\n      return JSON.stringify(data);\n    }\n  },\n  shallowEqual: (a, b) => {\n    for(let key in a) {\n      if(!(key in b) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    for(let key in b) {\n      if(!(key in a) || a[key] != b[key]) {\n        return false;\n      }\n    }\n    return true;\n  },\n  deepClone: (json) => {\n    if (Array.isArray(json)) return json.map((i) => Json.deepClone(i));\n    if (typeof json !== 'object' || json === null) return json;\n    let clone = {};\n    for (let key in json) {\n      clone[key] = Json.deepClone(json[key]);\n    }\n    return clone;\n  }\n};\n\nmodule.exports = Json;\n","// Attribute related gotchas\nfunction updateAttribute(element, name, newValue) {\n  if (name === 'class') {\n    const fromValue = element.className;\n    if (fromValue != newValue) {\n      // values are always cast to strings\n      if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n        element.className = '';\n      } else {\n        element.className = newValue;\n      }\n    }\n  } else {\n    const fromValue = element.getAttribute(name);\n    if (fromValue != newValue) {\n      // values are always cast to strings\n      if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n        if (fromValue) element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, newValue);\n      }\n    }\n\n    // select/input's value doesn't change on changing value attribute\n    if ((element.nodeName == 'SELECT' || element.nodeName == 'INPUT') && name == 'value') element.value = newValue;\n  }\n}\n\nmodule.exports = {\n  updateAttribute: updateAttribute,\n};\n","module.exports = {\n  SIFRR_NODE: window.document.createElement('template'),\n  TEXT_NODE: 3,\n  COMMENT_NODE: 8,\n  ELEMENT_NODE: 1\n};\n","const { updateAttribute } = require('./update');\nconst { shallowEqual } = require('../utils/json');\nconst { TEXT_NODE, COMMENT_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/reuseNodes.js\nfunction makeChildrenEqual(parent, newChildren) {\n  // Lesser children now\n  const oldL = parent.childNodes.length, newL = newChildren.length;\n  if (oldL > newL) {\n    let i = oldL;\n    while(i > newL) {\n      parent.removeChild(parent.lastChild);\n      i--;\n    }\n  // More Children now\n  } else if (oldL < newL) {\n    let i = oldL;\n    while(i < newL) {\n      parent.appendChild(newChildren[i]);\n      i++;\n    }\n  }\n\n  const l = Math.min(newL, oldL);\n  // Make old children equal to new children\n  for(let i = 0, item, head = parent.firstChild; i < l; i++) {\n    item = newChildren[i];\n    // make two nodes equal\n    head = makeEqual(head, item).nextSibling;\n  }\n}\n\nfunction makeEqual(oldNode, newNode) {\n  if (newNode === null) return oldNode;\n  if (newNode.type === 'stateChange') {\n    if (!shallowEqual(oldNode.state, newNode.state)) {\n      oldNode.state = newNode.state;\n    }\n    return oldNode;\n  }\n\n  if (oldNode.nodeName !== newNode.nodeName) {\n    oldNode.replaceWith(newNode);\n    return newNode;\n  }\n\n  if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n    if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n    return oldNode;\n  }\n\n  // copy sifrr state\n  if (newNode.state) oldNode.state = newNode.state;\n\n  // copy Attributes\n  let oldAttrs = oldNode.attributes, newAttrs = newNode.attributes, attr;\n  for (let i = newAttrs.length - 1; i >= 0; --i) {\n    updateAttribute(oldNode, newAttrs[i].name, newAttrs[i].value);\n  }\n\n  // Remove any extra attributes\n  for (let j = oldAttrs.length - 1; j >= 0; --j) {\n    attr = oldAttrs[j];\n    if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n  }\n\n  // make children equal\n  makeChildrenEqual(oldNode, newNode.childNodes);\n\n  return oldNode;\n}\n\nmodule.exports = {\n  makeEqual: makeEqual,\n  makeChildrenEqual: makeChildrenEqual\n};\n","// based on https://github.com/Freak613/stage0/blob/master/index.js\n\nconst TREE_WALKER = window.document.createTreeWalker(document, NodeFilter.SHOW_ALL, null, false);\nTREE_WALKER.roll = function(n, filter = false) {\n  let node = this.currentNode;\n  while(--n) {\n    if (filter && filter(node)){\n      node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n    } else node = TREE_WALKER.nextNode();\n  }\n  return node;\n};\n\nfunction collect(element, stateMap = element.stateMap, filter) {\n  const refs = [];\n  TREE_WALKER.currentNode = element;\n  stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n  return refs;\n}\n\nclass Ref {\n  constructor(idx, ref) {\n    this.idx = idx;\n    this.ref = ref;\n  }\n}\n\nfunction create(node, fxn, filter = false) {\n  let indices = [], ref, idx = 0;\n  TREE_WALKER.currentNode = node;\n  while(node) {\n    if (ref = fxn(node)) {\n      indices.push(new Ref(idx+1, ref));\n      idx = 1;\n    } else {\n      idx++;\n    }\n    if (filter && filter(node)){\n      node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n    } else node = TREE_WALKER.nextNode();\n  }\n\n  return indices;\n}\n\nmodule.exports = {\n  walker: TREE_WALKER,\n  collect: collect,\n  create: create,\n  klass: Ref\n};\n","const { makeChildrenEqual } = require('./makeequal');\nconst { updateAttribute } = require('./update');\nconst { collect, create } = require('./ref');\nconst { SIFRR_NODE, TEXT_NODE, COMMENT_NODE, ELEMENT_NODE } = require('./constants');\n\nfunction isHtml(el) {\n  return (el.dataset && el.dataset.sifrrHtml == 'true') ||\n    el.contentEditable == 'true' ||\n    el.nodeName == 'TEXTAREA' ||\n    el.nodeName == 'STYLE' ||\n    (el.dataset && el.dataset.sifrrRepeat);\n}\n\nfunction creator(el) {\n  if (el.nodeType === TEXT_NODE) {\n    // text node\n    const x = el.nodeValue;\n    if (x.indexOf('${') > -1) return {\n      html: false,\n      text: x\n    };\n  } else if (el.nodeType === COMMENT_NODE && el.nodeValue.trim()[0] == '$') {\n    // comment\n    return {\n      html: false,\n      text: el.nodeValue.trim()\n    };\n  } else if (el.nodeType === ELEMENT_NODE) {\n    const ref = {};\n    // Html ?\n    if (isHtml(el)) {\n      const innerHTML = el.innerHTML;\n      if (innerHTML.indexOf('${') >= 0) {\n        ref.html = true;\n        ref.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n      }\n    }\n    // attributes\n    const attrs = el.attributes || [], l = attrs.length;\n    const attrStateMap = {};\n    for (let i = 0; i < l; i++) {\n      const attribute = attrs[i];\n      if (attribute.value.indexOf('${') >= 0) {\n        attrStateMap[attribute.name] = attribute.value;\n      }\n    }\n    if (Object.keys(attrStateMap).length > 0) ref.attributes = attrStateMap;\n\n    if (Object.keys(ref).length > 0) return ref;\n  }\n  return 0;\n}\n\nconst Parser = {\n  collectRefs: (el, stateMap) => collect(el, stateMap, isHtml),\n  createStateMap: (element) => {\n    let node;\n    if (element.useShadowRoot) node = element.shadowRoot;\n    else node = element;\n\n    return create(node, creator, isHtml);\n  },\n  updateState: (element) => {\n    if (!element._refs) {\n      return false;\n    }\n    // Update nodes\n    const l = element._refs.length;\n    for (let i = 0; i < l; i++) {\n      const data = element.constructor.stateMap[i].ref;\n      const dom = element._refs[i];\n\n      // update attributes\n      if (data.attributes) {\n        for(let key in data.attributes) {\n          const val = Parser.evaluateString(data.attributes[key], element);\n          updateAttribute(dom, key, val);\n        }\n      }\n\n      if (data.html === undefined) continue;\n\n      // update element\n      const newValue = Parser.evaluateString(data.text, element);\n      if (!newValue) { dom.textContent = ''; continue; }\n\n      if (data.html) {\n        // html node\n        let children;\n        if (Array.isArray(newValue)) {\n          children = newValue;\n        } else if (newValue.nodeType) {\n          children = [newValue];\n        } else {\n          const docFrag = SIFRR_NODE.cloneNode();\n          // Replace html tags in input from input/contenteditable/textarea\n          docFrag.innerHTML = newValue.toString()\n            // All closing tags\n            .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n            // Self closing tags (void elements) from https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n            .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n          children = Array.prototype.slice.call(docFrag.content.childNodes);\n        }\n        if (children.length < 1) dom.textContent = '';\n        else makeChildrenEqual(dom, children);\n      } else {\n        // text node\n        if (dom.nodeValue != newValue) {\n          dom.nodeValue = newValue;\n        }\n      }\n    }\n  },\n  twoWayBind: (e) => {\n    const target = e.path ? e.path[0] : e.target;\n    if (!target.dataset.sifrrBind) return;\n    const value = target.value === undefined ? target.innerHTML : target.value;\n    let state = {};\n    state[target.dataset.sifrrBind] = value;\n    target.getRootNode().host.state = state;\n  },\n  evaluateString: (string, element) => {\n    if (string.indexOf('${') < 0) return string;\n    string = string.trim();\n    if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n    return replacer('`' + string + '`');\n\n    function replacer(match) {\n      if (match[0] == '$') match = match.slice(2, -1);\n      let f;\n      if (match.indexOf('return ') >= 0) {\n        f = new Function(match).bind(element);\n      } else {\n        f = new Function('return ' + match).bind(element);\n      }\n      return f();\n    }\n  }\n};\n\nmodule.exports = Parser;\n","/*! Sifrr.Fetch v0.0.1-alpha - sifrr project */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Fetch = factory());\n}(this, (function () { 'use strict';\n\n  class Request {\n    constructor(type, url, options) {\n      this.type = type;\n      this._options = options;\n      this._url = url;\n    }\n    get response() {\n      return window.fetch(this.url, this.options).then(resp => {\n        let contentType = resp.headers.get('content-type');\n        if (resp.ok) {\n          if (contentType && contentType.includes('application/json')) {\n            resp = resp.json();\n          }\n          return resp;\n        } else {\n          let error = Error(resp.statusText);\n          error.response = resp;\n          throw error;\n        }\n      });\n    }\n    get url() {\n      let params = delete this._options.params;\n      if (params && Object.keys(params).length > 0) {\n        return this._url + '?' + Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n      } else {\n        return this._url;\n      }\n    }\n    get options() {\n      const options = Object.assign({\n        method: this.type,\n        mode: 'cors',\n        redirect: 'follow'\n      }, this._options);\n      options.headers = Object.assign({\n        'accept': 'application/json'\n      }, this._options.headers || {});\n      return options;\n    }\n  }\n  var request = Request;\n\n  class SifrrFetch {\n    static get(url, options = {}) {\n      return new request('GET', url, options).response;\n    }\n    static post(url, options = {}) {\n      return new request('POST', url, options).response;\n    }\n    static put(url, options = {}) {\n      return new request('PUT', url, options).response;\n    }\n    static delete(url, options = {}) {\n      return new request('DELETE', url, options).response;\n    }\n    static file(url, options = {}) {\n      options.headers = options.headers || {};\n      options.headers.accept = options.headers.accept || '*/*';\n      return new request('GET', url, options).response;\n    }\n  }\n  var sifrr_fetch = SifrrFetch;\n\n  return sifrr_fetch;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.fetch.js.map\n","const fetch = require('@sifrr/fetch');\n\nclass Loader {\n  constructor(elemName, config = {}) {\n    if (this.constructor.all[elemName]) return this.constructor.all[elemName].instance;\n    this.elementName = elemName;\n    this.config = config;\n    this.constructor.urls[elemName] = this.htmlUrl;\n  }\n\n  get html() {\n    const me = this;\n    return fetch.file(this.htmlUrl)\n      .then((resp) => resp.text())\n      .then((file) => new window.DOMParser().parseFromString(file, 'text/html'))\n      .then((html) => {\n        Loader.add(me.elementName, { instance: me, template: html.querySelector('template')});\n        return html;\n      });\n  }\n\n  get htmlUrl() {\n    return this.config.url || `${this.config.baseUrl || '/'}elements/${this.elementName.split('-').join('/')}.html`;\n  }\n\n  executeScripts() {\n    return this.html.then((file) => {\n      file.querySelectorAll('script').forEach((script) => {\n        const fxn = new Function(script.text).bind(window);\n        fxn();\n      });\n    });\n  }\n\n  static add(elemName, instance) {\n    Loader._all[elemName] = instance;\n  }\n\n  static get all() {\n    return Loader._all;\n  }\n}\n\nLoader._all = {};\nLoader.urls = {};\n\nmodule.exports = Loader;\n","const { collect, create } = require('./ref');\nconst { SIFRR_NODE } = require('./constants');\n\n// Inspired from https://github.com/Freak613/stage0/blob/master/index.js\nfunction creator(node) {\n  if (node.nodeType !== 3) {\n    if (node.attributes !== undefined) {\n      const attrs = Array.from(node.attributes), l = attrs.length;\n      const ret = [];\n      for (let i = 0; i < l; i++) {\n        const avalue = attrs[i].value;\n        if (avalue[0] === '$') {\n          ret.push({\n            name: attrs[i].name,\n            text: avalue.slice(2, -1)\n          });\n        }\n      }\n      if (ret.length > 0) return ret;\n    }\n    return 0;\n  } else {\n    let nodeData = node.nodeValue;\n    if (nodeData[0] === '$') {\n      node.nodeValue = '';\n      return nodeData.slice(2, -1);\n    }\n    return 0;\n  }\n}\n\nfunction updateState(simpleEl) {\n  const doms = simpleEl._refs, refs = simpleEl.stateMap, l = refs.length;\n  const newState = simpleEl.state, oldState = simpleEl._oldState;\n  for (let i = 0; i < l; i++) {\n    const data = refs[i].ref, dom = doms[i];\n    if (Array.isArray(data)) {\n      const l = data.length;\n      for (let i = 0; i < l; i++) {\n        const attr = data[i];\n        if (oldState[attr.text] !== newState[attr.text]) {\n          if (attr.name === 'class') dom.className = newState[attr.text] || '';\n          else dom.setAttribute(attr.name, newState[attr.text]);\n        }\n      }\n    } else {\n      if (oldState[data] != newState[data]) dom.nodeValue = newState[data];\n    }\n  }\n}\n\nfunction SimpleElement(content, defaultState) {\n  if (typeof content === 'string') {\n    SIFRR_NODE.innerHTML = content;\n    content = SIFRR_NODE.content.firstElementChild || SIFRR_NODE.content.firstChild;\n  }\n  if (content.isSifrr && content.isSifrr()) return content;\n  content.stateMap = create(content, creator);\n  content._refs = collect(content, content.stateMap);\n  Object.defineProperty(content, 'state', {\n    get: () => content._state,\n    set: (v) => {\n      content._oldState = Object.assign({}, content._state);\n      content._state = Object.assign(content._state || {}, v);\n      updateState(content);\n    }\n  });\n  if (defaultState) content.state = defaultState;\n\n  content.sifrrClone = function(deep) {\n    const clone = content.cloneNode(deep);\n    clone.stateMap = content.stateMap;\n    clone._refs = collect(clone, content.stateMap);\n    Object.defineProperty(clone, 'state', {\n      get: () => clone._state,\n      set: (v) => {\n        clone._oldState = Object.assign({}, clone._state);\n        clone._state = Object.assign(clone._state || {}, v);\n        updateState(clone);\n      }\n    });\n    if (content.state) clone.state = content.state;\n    return clone;\n  };\n\n  return content;\n}\n\nmodule.exports = SimpleElement;\n","const Parser = require('./parser');\nconst JsonExt = require('../utils/json');\nconst Loader = require('./loader');\nconst SimpleElement = require('./simpleelement');\n\nclass Element extends window.HTMLElement {\n  static get observedAttributes() {\n    return ['data-sifrr-state'].concat(this.observedAttrs());\n  }\n\n  static observedAttrs() {\n    return [];\n  }\n\n  static get template() {\n    return Loader.all[this.elementName].template;\n  }\n\n  static get stateMap() {\n    this._stateMap = this._stateMap || Parser.createStateMap(this.template.content);\n    return this._stateMap;\n  }\n\n  static get elementName() {\n    return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  static onStateChange() {}\n\n  constructor() {\n    super();\n    // this._oldState = {};\n    this._state = Object.assign({}, this.constructor.defaultState, this.state);\n    const content = this.constructor.template.content.cloneNode(true);\n    this._refs = Parser.collectRefs(content, this.constructor.stateMap);\n    this.useShadowRoot = this.constructor.template.dataset.sr === 'false' ? false : !!window.document.head.attachShadow && this.constructor.useShadowRoot;\n    if (this.useShadowRoot) {\n      this.attachShadow({\n        mode: 'open'\n      });\n      this.shadowRoot.appendChild(content);\n      this.shadowRoot.addEventListener('change', Parser.twoWayBind);\n    } else this.appendChild(content);\n  }\n\n  connectedCallback() {\n    if(!this.hasAttribute('data-sifrr-state')) this.updateState();\n    this.onConnect();\n  }\n\n  onConnect() {}\n\n  disconnectedCallback() {\n    if (this.useShadowRoot) this.shadowRoot.removeEventListener('change', Parser.twoWayBind);\n    this.onDisconnect();\n  }\n\n  onDisconnect() {}\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    if (attrName === 'data-sifrr-state') {\n      this.state = JsonExt.parse(newVal);\n    }\n    this.onAttributeChange(attrName, oldVal, newVal);\n  }\n\n  onAttributeChange() {}\n\n  get state() {\n    // return JsonExt.deepClone(this._state);\n    return this._state;\n  }\n\n  set state(v) {\n    // this._oldState = this.state;\n    Object.assign(this._state, v);\n    this.updateState();\n  }\n\n  updateState() {\n    Parser.updateState(this);\n    this.onStateChange();\n    this.constructor.onStateChange(this);\n  }\n\n  onStateChange() {}\n\n  isSifrr(name = null) {\n    if (name) return name === this.constructor.elementName;\n    else return true;\n  }\n\n  sifrrClone(deep) {\n    const clone = this.cloneNode(deep);\n    clone.state = this.state;\n    return clone;\n  }\n\n  clearState() {\n    // this._oldState = this.state;\n    this._state = {};\n    this.updateState();\n  }\n\n  qs(args, sr = true) {\n    if (this.useShadowRoot && sr) return this.shadowRoot.querySelector(args);\n    else return this.querySelector(args);\n  }\n\n  qsAll(args, sr = true) {\n    if (this.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);\n    else return this.querySelectorAll(args);\n  }\n\n  static addArrayToDom(key, template) {\n    this._arrayToDom = this._arrayToDom || {};\n    // state of simple element is single array item, compatible with sifrr element\n    this._arrayToDom[key] = SimpleElement(template);\n  }\n\n  arrayToDom(key, newState = this.state[key]) {\n    this._domL = this._domL || {};\n    const oldL = this._domL[key] || 0;\n    const domArray = [];\n    const newL = newState.length;\n    for (let i = 0; i < newL; i++) {\n      if (i < oldL) {\n        domArray.push({ type: 'stateChange', state: newState[i] });\n      } else {\n        const el = this.constructor._arrayToDom[key].sifrrClone(true);\n        el.state = newState[i];\n        domArray.push(el);\n      }\n    }\n    this._domL[key] = newL;\n    return domArray;\n  }\n}\n\nmodule.exports = Element;\n","// Taken from https://github.com/Freak6133/stage0/blob/master/syntheticEvents.js\nconst SYNTHETIC_EVENTS = {};\n\nconst nativeToSyntheticEvent = (e, name) => {\n  return Promise.resolve((() => {\n    let dom = e.path ? e.path[0] : e.target;\n    while(dom) {\n      const eventHandler = dom[`$${name}`];\n      if (eventHandler) {\n        eventHandler(e, dom);\n      }\n      cssMatchEvent(e, name, dom);\n      dom = dom.parentNode || dom.host;\n    }\n  })());\n};\n\nconst cssMatchEvent = (e, name, dom) => {\n  function callEach(fxns) {\n    fxns.forEach((fxn) => fxn(e, dom));\n  }\n  for (let css in SYNTHETIC_EVENTS[name]) {\n    if ((typeof dom.matches === 'function' && dom.matches(css)) ||\n      (dom.nodeType === 9 && css === 'document')) callEach(SYNTHETIC_EVENTS[name][css]);\n  }\n};\n\nconst Event = {\n  add: (name) => {\n    if (SYNTHETIC_EVENTS[name]) return false;\n    window.document.addEventListener(name, event => nativeToSyntheticEvent(event, name), { capture: true, passive: true });\n    SYNTHETIC_EVENTS[name] = {};\n    return true;\n  },\n  addListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [];\n    if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  removeListener: (name, css, fxn) => {\n    const fxns = SYNTHETIC_EVENTS[name][css] || [], i = fxns.indexOf(fxn);\n    if (i >= 0) fxns.splice(i, 1);\n    SYNTHETIC_EVENTS[name][css] = fxns;\n    return true;\n  },\n  trigger: (el, name, options) => {\n    el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n  }\n};\n\nmodule.exports = Event;\n","const UrlExt = require('./utils/url');\nconst JsonExt = require('./utils/json');\n\n// Empty SifrrDom\nlet SifrrDom = {};\n\n// For elements\nSifrrDom.elements = {};\n\n// Classes\nSifrrDom.Element = require('./dom/element');\nSifrrDom.Parser = require('./dom/parser');\nSifrrDom.makeEqual = require('./dom/makeequal');\nSifrrDom.Loader = require('./dom/loader');\nSifrrDom.SimpleElement = require('./dom/simpleelement');\nSifrrDom.Event = require('./dom/event');\n\n// Register Custom Element Function\nSifrrDom.register = function(Element) {\n  Element.useShadowRoot = SifrrDom.config.useShadowRoot;\n  const name = Element.elementName;\n  if (!name) {\n    window.console.warn('Error creating Custom Element: No name given.', Element);\n  } else if (window.customElements.get(name)) {\n    window.console.warn(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n  } else if (name.indexOf('-') < 1) {\n    window.console.warn(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n  } else {\n    try {\n      window.customElements.define(name, Element);\n      SifrrDom.elements[name] = Element;\n      return true;\n    } catch (error) {\n      window.console.warn(`Error creating Custom Element: ${name} - ${error}`);\n      return false;\n    }\n  }\n  return false;\n};\n\n// Initialize SifrrDom\nSifrrDom.setup = function(config) {\n  SifrrDom.config = Object.assign({\n    baseUrl: '/',\n    useShadowRoot: true\n  }, config);\n  SifrrDom.Event.add('input');\n  SifrrDom.Event.add('change');\n  SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n  SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n};\n\n// Load Element HTML and execute script in it\nSifrrDom.load = function(elemName, config = { baseUrl: SifrrDom.config.baseUrl }) {\n  return new Promise((res) => {\n    let loader = new SifrrDom.Loader(elemName, config);\n    loader.executeScripts().then(() => res());\n  });\n};\n\nSifrrDom.Url = UrlExt;\nSifrrDom.Json = JsonExt;\n// Relative path to element html\nSifrrDom.relativeTo = function(elemName, relativeUrl) {\n  if (typeof elemName === 'string') return SifrrDom.Url.absolute(SifrrDom.Loader.urls[elemName], relativeUrl);\n};\n\nmodule.exports = SifrrDom;\n"],"names":["absolute","base","relative","stack","split","parts","pop","i","length","push","join","getRoutes","url","qIndex","indexOf","substring","Json","parse","data","ans","JSON","e","Array","isArray","forEach","v","k","stringify","shallowEqual","a","b","key","deepClone","json","map","clone","updateAttribute","element","name","newValue","className","fromValue","getAttribute","setAttribute","removeAttribute","nodeName","value","SIFRR_NODE","window","document","createElement","TEXT_NODE","COMMENT_NODE","ELEMENT_NODE","require$$0","require$$1","require$$2","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","l","Math","min","item","head","firstChild","makeEqual","nextSibling","oldNode","newNode","type","state","replaceWith","nodeType","attr","oldAttrs","attributes","newAttrs","j","hasAttribute","specified","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","roll","n","filter","node","this","currentNode","parentNode","nextNode","Ref","constructor","idx","ref","walker","collect","stateMap","refs","x","create","fxn","indices","klass","require$$3","isHtml","el","dataset","sifrrHtml","contentEditable","sifrrRepeat","creator","nodeValue","html","text","trim","innerHTML","replace","attrs","attrStateMap","attribute","Object","keys","Parser","collectRefs","createStateMap","useShadowRoot","shadowRoot","updateState","_refs","dom","val","evaluateString","undefined","children","docFrag","cloneNode","toString","prototype","slice","call","content","textContent","twoWayBind","target","path","sifrrBind","getRootNode","host","string","match","replacer","f","Function","bind","resp","Loader","elemName","config","all","instance","elementName","urls","htmlUrl","me","fetch","file","then","DOMParser","parseFromString","add","template","querySelector","baseUrl","executeScripts","querySelectorAll","script","_all","from","ret","avalue","nodeData","simpleEl","doms","newState","oldState","_oldState","defaultState","firstElementChild","isSifrr","defineProperty","get","_state","set","assign","sifrrClone","deep","HTMLElement","concat","observedAttrs","_stateMap","toLowerCase","sr","attachShadow","mode","addEventListener","connectedCallback","onConnect","disconnectedCallback","removeEventListener","onDisconnect","attributeChangedCallback","attrName","oldVal","newVal","JsonExt","onAttributeChange","onStateChange","clearState","qs","args","qsAll","_arrayToDom","SimpleElement","arrayToDom","_domL","domArray","SYNTHETIC_EVENTS","cssMatchEvent","callEach","fxns","css","matches","event","Promise","resolve","eventHandler","nativeToSyntheticEvent","capture","passive","addListener","removeListener","splice","trigger","options","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","require$$4","require$$5","register","customElements","console","warn","define","elements","error","setup","load","res","Url","UrlExt","relativeTo","relativeUrl"],"mappings":"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"}