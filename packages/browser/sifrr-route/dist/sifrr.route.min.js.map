{"version":3,"file":"sifrr.route.min.js","sources":["../src/regexpath.js","../src/sifrr.route.js"],"sourcesContent":["class RegexPath {\n  constructor(path, options = {}) {\n    this.options = Object.assign({ delimiter: '/' }, options);\n    this.path = path;\n  }\n\n  get regex() {\n    this._regex = this._regex || new RegExp('^' + this.path\n      .replace(/:[A-Za-z0-9_]{0,}\\?$/g, '([^/]{0,})?')\n      .replace(/:[A-Za-z0-9_]{0,}\\?/g, '([^/]{0,})')\n      .replace(/\\*\\*/g, '(.{0,})')\n      .replace(/\\*/g, '([^/]{0,})')\n      .replace(/:[A-Za-z0-9_]{0,}/g, '([^/]{0,})') + '$');\n    return this._regex;\n  }\n\n  get dataMap() {\n    if (this._dataMap) return this._dataMap;\n    this._dataMap = [];\n    this.path.split('/').forEach((r) => {\n      if (r[0] === ':' || r === '*' || r === '**') {\n        this._dataMap.push(r);\n      }\n    });\n    return this._dataMap;\n  }\n\n  test(route) {\n    const data = {\n        '*': [],\n        '**': []\n      }, match = this.regex.exec(route);\n    if (match) {\n      this.dataMap.forEach((d, i) => {\n        if (d === '*') {\n          data['*'].push(match[i + 1]);\n        } else if (d === '**') {\n          data['**'].push(match[i + 1]);\n        } else {\n          data[d.substr(1)] = match[i + 1];\n        }\n      });\n    }\n    data.star = data['*'];\n    data.doubleStar = data['**'];\n    return {\n      match: !!match,\n      data: data\n    };\n  }\n}\n\nmodule.exports = RegexPath;\n","const template = Sifrr.Dom.html`<style>\n  :host {\n    display: none;\n  }\n  :host(.active) {\n    display: block;\n    opacity: 0;\n    animation: slide 0.3s ease forwards;\n  }\n  @keyframes slide {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n</style>\n<slot></slot>`;\n\nconst RegexPath = require('./regexpath');\n\nSifrr.Dom.Event.add('click');\nconst SifrrRoutes = [];\nclass SifrrRoute extends Sifrr.Dom.Element {\n  static get template() {\n    return template;\n  }\n\n  static observedAttrs() {\n    return ['data-sifrr-path'];\n  }\n\n  onConnect() {\n    this.loaded = false;\n    SifrrRoutes.push(this);\n  }\n\n  onDisconnect() {\n    SifrrRoutes.splice(SifrrRoutes.indexOf(this), 1);\n  }\n\n  onAttributeChange(attrName) {\n    if (attrName == 'data-sifrr-path') {\n      this.refresh();\n    }\n  }\n\n  get routeRegex() {\n    this._routeRegex = this._routeRegex || new RegexPath(this.dataset.sifrrPath);\n    return this._routeRegex;\n  }\n\n  refresh() {\n    const location = window.location.pathname;\n    const parsed = this.routeRegex.test(location);\n    if (parsed.match) {\n      this.activate();\n      this.state = parsed.data;\n      this.$$('[data-sifrr-route-state=true]', false).forEach((el) => {\n        el.dataset.sifrrState = JSON.stringify({ route: parsed.data });\n      });\n    } else this.deactivate();\n  }\n\n  activate() {\n    if (!this.loaded) {\n      this.loaded = true;\n      if (this.dataset.sifrrElements && this.dataset.sifrrElements.indexOf('-') > 0) {\n        const tags = this.dataset.sifrrElements.split(',');\n        tags\n          .filter((value, index, self) => self.indexOf(value) === index)\n          .forEach((tag) => {\n            Sifrr.Dom.load(tag);\n          });\n      }\n    }\n    this.classList.add('active');\n  }\n\n  deactivate() {\n    this.classList.remove('active');\n  }\n\n  static refreshAll() {\n    SifrrRoutes.forEach((sfr) => {\n      sfr.refresh();\n    });\n    this.onRouteChange();\n  }\n\n  static onRouteChange() {}\n}\n\nSifrr.Dom.register(SifrrRoute);\n\ndocument.addEventListener('click', (e) => {\n  const target = e.path ? e.path[0] : e.target;\n  if (e.metaKey || e.ctrlKey) return;\n  if (!target.matches('a') || target.host !== window.location.host || (target.target && target.target !== '_self')) return;\n  e.preventDefault();\n  const title = target.getAttribute('title') || 'Title';\n  const state = {\n    location: target.pathname,\n    title: title\n  };\n  // replace title with default title for your webapp, maybe your app name\n  document.title = title;\n  history.pushState(state, title, target.pathname);\n  SifrrRoute.refreshAll();\n});\n\nwindow.addEventListener('popstate', (event) => {\n  if (event.state && event.state.title) document.title = event.state.title;\n  SifrrRoute.refreshAll();\n});\n"],"names":["constructor","path","options","Object","assign","delimiter","_regex","this","RegExp","replace","_dataMap","split","forEach","r","push","test","route","data","match","regex","exec","dataMap","d","i","substr","star","doubleStar","template","Sifrr","Dom","html","Event","add","SifrrRoutes","SifrrRoute","Element","onConnect","loaded","onDisconnect","splice","indexOf","onAttributeChange","attrName","refresh","_routeRegex","RegexPath","dataset","sifrrPath","location","window","pathname","parsed","routeRegex","activate","state","$$","el","sifrrState","JSON","stringify","deactivate","sifrrElements","filter","value","index","self","tag","load","classList","remove","sfr","onRouteChange","register","document","addEventListener","e","target","metaKey","ctrlKey","matches","host","preventDefault","title","getAttribute","history","pushState","refreshAll","event"],"mappings":"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"}