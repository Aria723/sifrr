{"version":3,"file":"index.bundled.js","sources":["../../node_modules/@sifrr/dom/dist/sifrr.dom.js","index.js"],"sourcesContent":["/*! Sifrr.Dom v0.0.1-alpha - sifrr project - 2018/12/26 20:57:42 UTC */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sifrr = global.Sifrr || {}, global.Sifrr.Dom = factory());\n}(this, (function () { 'use strict';\n\n  const URLExt = {\n    absolute: (base, relative) => {\n      let stack = base.split('/'),\n          parts = relative.split('/');\n      stack.pop();\n      for (let i = 0; i < parts.length; i++) {\n        if (parts[i] == '.') continue;\n        if (parts[i] == '..') stack.pop();else stack.push(parts[i]);\n      }\n      return stack.join('/');\n    },\n    getRoutes: url => {\n      if (url[0] != '/') {\n        url = '/' + url;\n      }\n      let qIndex = url.indexOf('?');\n      if (qIndex != -1) {\n        url = url.substring(0, qIndex);\n      }\n      return url.split('/');\n    }\n  };\n  var url = URLExt;\n\n  function updateAttribute(element, name, newValue) {\n    if (name === 'class') {\n      const fromValue = element.className;\n      if (fromValue != newValue) {\n        if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n          element.className = '';\n        } else {\n          element.className = newValue;\n        }\n      }\n    } else {\n      const fromValue = element.getAttribute(name);\n      if (fromValue != newValue) {\n        if (newValue == 'null' || newValue == 'undefined' || newValue == 'false' || !newValue) {\n          if (fromValue) element.removeAttribute(name);\n        } else {\n          element.setAttribute(name, newValue);\n        }\n      }\n      if (element.nodeName == 'SELECT' && name == 'value') element.value = newValue;\n    }\n  }\n  var update = {\n    updateAttribute: updateAttribute\n  };\n\n  const Json = {\n    parse: data => {\n      let ans = {};\n      if (typeof data == 'string') {\n        try {\n          ans = JSON.parse(data);\n        } catch (e) {\n          return data;\n        }\n        return Json.parse(ans);\n      } else if (Array.isArray(data)) {\n        ans = [];\n        data.forEach((v, i) => {\n          ans[i] = Json.parse(v);\n        });\n      } else if (typeof data == 'object') {\n        for (const k in data) {\n          ans[k] = Json.parse(data[k]);\n        }\n      } else {\n        return data;\n      }\n      return ans;\n    },\n    stringify: data => {\n      if (typeof data == 'string') {\n        return data;\n      } else {\n        return JSON.stringify(data);\n      }\n    },\n    shallowEqual: (a, b) => {\n      for (let key in a) {\n        if (!(key in b) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      for (let key in b) {\n        if (!(key in a) || a[key] != b[key]) {\n          return false;\n        }\n      }\n      return true;\n    },\n    deepClone: json => {\n      if (Array.isArray(json)) return json.map(i => Json.deepClone(i));\n      if (typeof json !== 'object' || json === null) return json;\n      let clone = {};\n      for (let key in json) {\n        clone[key] = Json.deepClone(json[key]);\n      }\n      return clone;\n    }\n  };\n  var json = Json;\n\n  var constants = {\n    SIFRR_NODE: window.document.createElement('template'),\n    TEXT_NODE: 3,\n    COMMENT_NODE: 8,\n    ELEMENT_NODE: 1\n  };\n\n  const { updateAttribute: updateAttribute$1 } = update;\n  const { shallowEqual } = json;\n  const { TEXT_NODE, COMMENT_NODE } = constants;\n  function makeChildrenEqual(parent, newChildren) {\n    const oldL = parent.childNodes.length,\n          newL = newChildren.length;\n    if (oldL > newL) {\n      let i = oldL;\n      while (i > newL) {\n        parent.removeChild(parent.lastChild);\n        i--;\n      }\n    } else if (oldL < newL) {\n      let i = oldL;\n      while (i < newL) {\n        parent.appendChild(newChildren[i]);\n        i++;\n      }\n    }\n    const l = Math.min(newL, oldL);\n    for (let i = 0, item, head = parent.firstChild; i < l; i++) {\n      item = newChildren[i];\n      head = makeEqual(head, item).nextSibling;\n    }\n  }\n  function makeEqual(oldNode, newNode) {\n    if (newNode === null) return oldNode;\n    if (newNode.type === 'stateChange') {\n      if (!shallowEqual(oldNode.state, newNode.state)) {\n        oldNode.state = newNode.state;\n      }\n      return oldNode;\n    }\n    if (oldNode.nodeName !== newNode.nodeName) {\n      oldNode.replaceWith(newNode);\n      return newNode;\n    }\n    if (oldNode.nodeType === TEXT_NODE || oldNode.nodeType === COMMENT_NODE) {\n      if (oldNode.data !== newNode.data) oldNode.data = newNode.data;\n      return oldNode;\n    }\n    if (newNode.state) oldNode.state = newNode.state;\n    let oldAttrs = oldNode.attributes,\n        newAttrs = newNode.attributes,\n        attr;\n    for (let i = newAttrs.length - 1; i >= 0; --i) {\n      updateAttribute$1(oldNode, newAttrs[i].name, newAttrs[i].value);\n    }\n    for (let j = oldAttrs.length - 1; j >= 0; --j) {\n      attr = oldAttrs[j];\n      if (!newNode.hasAttribute(attr.name) && attr.specified !== false) oldNode.removeAttribute(attr.name);\n    }\n    makeChildrenEqual(oldNode, newNode.childNodes);\n    return oldNode;\n  }\n  var makeequal = {\n    makeEqual: makeEqual,\n    makeChildrenEqual: makeChildrenEqual\n  };\n\n  const TREE_WALKER = window.document.createTreeWalker(document, NodeFilter.SHOW_ALL, null, false);\n  TREE_WALKER.roll = function (n, filter = false) {\n    let node = this.currentNode;\n    while (--n) {\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return node;\n  };\n  function collect(element, stateMap = element.stateMap, filter) {\n    const refs = [];\n    TREE_WALKER.currentNode = element;\n    stateMap.map(x => refs.push(TREE_WALKER.roll(x.idx, filter)));\n    return refs;\n  }\n  class Ref {\n    constructor(idx, ref) {\n      this.idx = idx;\n      this.ref = ref;\n    }\n  }\n  function create(node, fxn, filter = false) {\n    let indices = [],\n        ref,\n        idx = 0;\n    TREE_WALKER.currentNode = node;\n    while (node) {\n      if (ref = fxn(node)) {\n        indices.push(new Ref(idx + 1, ref));\n        idx = 1;\n      } else {\n        idx++;\n      }\n      if (filter && filter(node)) {\n        node = TREE_WALKER.nextSibling() || TREE_WALKER.parentNode();\n      } else node = TREE_WALKER.nextNode();\n    }\n    return indices;\n  }\n  var ref = {\n    walker: TREE_WALKER,\n    collect: collect,\n    create: create,\n    klass: Ref\n  };\n\n  const { makeChildrenEqual: makeChildrenEqual$1 } = makeequal;\n  const { updateAttribute: updateAttribute$2 } = update;\n  const { collect: collect$1, create: create$1 } = ref;\n  const { SIFRR_NODE, TEXT_NODE: TEXT_NODE$1, COMMENT_NODE: COMMENT_NODE$1, ELEMENT_NODE } = constants;\n  function isHtml(el) {\n    return el.dataset && el.dataset.sifrrHtml == 'true' || el.contentEditable == 'true' || el.nodeName == 'TEXTAREA' || el.nodeName == 'STYLE' || el.dataset && el.dataset.sifrrRepeat;\n  }\n  function creator(el) {\n    if (el.nodeType === TEXT_NODE$1) {\n      const x = el.nodeValue;\n      if (x.indexOf('${') > -1) return {\n        html: false,\n        text: x\n      };\n    } else if (el.nodeType === COMMENT_NODE$1 && el.nodeValue.trim()[0] == '$') {\n      return {\n        html: false,\n        text: el.nodeValue.trim()\n      };\n    } else if (el.nodeType === ELEMENT_NODE) {\n      const ref$$1 = {};\n      if (isHtml(el)) {\n        const innerHTML = el.innerHTML;\n        if (innerHTML.indexOf('${') >= 0) {\n          ref$$1.html = true;\n          ref$$1.text = innerHTML.replace(/<!--(.*)-->/g, '$1');\n        }\n      }\n      const attrs = el.attributes || [],\n            l = attrs.length;\n      const attrStateMap = {};\n      for (let i = 0; i < l; i++) {\n        const attribute = attrs[i];\n        if (attribute.value.indexOf('${') >= 0) {\n          attrStateMap[attribute.name] = attribute.value;\n        }\n      }\n      if (Object.keys(attrStateMap).length > 0) ref$$1.attributes = attrStateMap;\n      if (Object.keys(ref$$1).length > 0) return ref$$1;\n    }\n    return 0;\n  }\n  const Parser = {\n    collectRefs: (el, stateMap) => collect$1(el, stateMap, isHtml),\n    createStateMap: element => {\n      let node;\n      if (element.useShadowRoot) node = element.shadowRoot;else node = element;\n      return create$1(node, creator, isHtml);\n    },\n    updateState: element => {\n      if (!element._refs) {\n        return false;\n      }\n      const l = element._refs.length;\n      for (let i = 0; i < l; i++) {\n        const data = element.constructor.stateMap[i].ref;\n        const dom = element._refs[i];\n        if (data.attributes) {\n          for (let key in data.attributes) {\n            const val = Parser.evaluateString(data.attributes[key], element);\n            updateAttribute$2(dom, key, val);\n          }\n        }\n        if (data.html === undefined) continue;\n        const newValue = Parser.evaluateString(data.text, element);\n        if (!newValue) {\n          dom.textContent = '';continue;\n        }\n        if (data.html) {\n          let children;\n          if (Array.isArray(newValue)) {\n            children = newValue;\n          } else if (newValue.nodeType) {\n            children = [newValue];\n          } else {\n            const docFrag = SIFRR_NODE.cloneNode();\n            docFrag.innerHTML = newValue.toString()\n            .replace(/(&lt;)(((?!&gt;).)*)(&gt;)(((?!&lt;).)*)(&lt;)\\/(((?!&gt;).)*)(&gt;)/g, '<$2>$5</$8>')\n            .replace(/(&lt;)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(((?!&gt;).)*)(&gt;)/g, '<$2$3>');\n            children = Array.prototype.slice.call(docFrag.childNodes);\n          }\n          if (children.length < 1) dom.textContent = '';else makeChildrenEqual$1(dom, children);\n        } else {\n          if (dom.nodeValue != newValue) {\n            dom.nodeValue = newValue;\n          }\n        }\n      }\n      element.onStateChange(element.state);\n    },\n    twoWayBind: e => {\n      const target = e.path ? e.path[0] : e.target;\n      if (!target.dataset.sifrrBind) return;\n      const value = target.value === undefined ? target.innerHTML : target.value;\n      let state = {};\n      state[target.dataset.sifrrBind] = value;\n      target.getRootNode().host.state = state;\n    },\n    evaluateString: (string, element) => {\n      if (string.indexOf('${') < 0) return string;\n      string = string.trim();\n      if (string.match(/^\\${([^{}$]|{([^{}$])*})*}$/)) return replacer(string);\n      return replacer('`' + string + '`');\n      function replacer(match) {\n        if (match[0] == '$') match = match.slice(2, -1);\n        let f;\n        if (match.indexOf('return ') >= 0) {\n          f = new Function(match).bind(element);\n        } else {\n          f = new Function('return ' + match).bind(element);\n        }\n        return f();\n      }\n    }\n  };\n  var parser = Parser;\n\n  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var sifrr_fetch = createCommonjsModule(function (module, exports) {\n    (function (global, factory) {\n      module.exports = factory();\n    })(commonjsGlobal, function () {\n      class Request {\n        constructor(type, url, options) {\n          this.type = type;\n          this._options = options;\n          this._url = url;\n        }\n        get response() {\n          return window.fetch(this.url, this.options).then(resp => {\n            let contentType = resp.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n              resp = resp.json();\n            }\n            if (resp.ok) {\n              return resp;\n            } else {\n              let error = Error(resp.statusText);\n              error.response = resp;\n              throw error;\n            }\n          });\n        }\n        get url() {\n          let params = delete this._options.params;\n          if (params && Object.keys(params).length > 0) {\n            return this._url + '?' + Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\n          } else {\n            return this._url;\n          }\n        }\n        get options() {\n          return Object.assign(this._options, {\n            method: this.type,\n            headers: Object.assign({\n              'accept': 'application/json'\n            }, this._options.headers || {}),\n            mode: 'cors',\n            redirect: 'follow'\n          });\n        }\n      }\n      var request = Request;\n      class SifrrFetch {\n        static get(url, options = {}) {\n          return new request('GET', url, options).response;\n        }\n        static post(url, options = {}) {\n          return new request('POST', url, options).response;\n        }\n        static put(url, options = {}) {\n          return new request('PUT', url, options).response;\n        }\n        static delete(url, options = {}) {\n          return new request('DELETE', url, options).response;\n        }\n        static file(url, options = {}) {\n          options.headers = options.headers || {};\n          options.headers.accept = options.headers.accept || '*/*';\n          return new request('GET', url, options).response;\n        }\n      }\n      var sifrr_fetch = SifrrFetch;\n      return sifrr_fetch;\n    });\n  });\n\n  class Loader {\n    constructor(elemName, config = {}) {\n      if (this.constructor.all[elemName]) return this.constructor.all[elemName].instance;\n      this.elementName = elemName;\n      this.config = config;\n      this.constructor.urls[elemName] = this.htmlUrl;\n    }\n    get html() {\n      const me = this;\n      return sifrr_fetch.file(this.htmlUrl).then(resp => resp.text()).then(file => new window.DOMParser().parseFromString(file, 'text/html')).then(html => {\n        Loader.add(me.elementName, { instance: me, template: html.querySelector('template') });\n        return html;\n      });\n    }\n    get htmlUrl() {\n      return this.config.url || `${this.config.baseUrl || '/'}elements/${this.elementName.split('-').join('/')}.html`;\n    }\n    executeScripts() {\n      return this.html.then(file => {\n        file.querySelectorAll('script').forEach(script => {\n          const fxn = new Function(script.text).bind(window);\n          script.remove();\n          fxn();\n        });\n      });\n    }\n    static add(elemName, instance) {\n      Loader._all[elemName] = instance;\n    }\n    static get all() {\n      return Loader._all;\n    }\n  }\n  Loader._all = {};\n  Loader.urls = {};\n  var loader = Loader;\n\n  const { collect: collect$2, create: create$2 } = ref;\n  const { SIFRR_NODE: SIFRR_NODE$1 } = constants;\n  function creator$1(node) {\n    if (node.nodeType !== 3) {\n      if (node.attributes !== undefined) {\n        const attrs = Array.from(node.attributes),\n              l = attrs.length;\n        const ret = [];\n        for (let i = 0; i < l; i++) {\n          const avalue = attrs[i].value;\n          if (avalue[0] === '$') {\n            ret.push({\n              name: attrs[i].name,\n              text: avalue.slice(2, -1)\n            });\n          }\n        }\n        if (ret.length > 0) return ret;\n      }\n      return 0;\n    } else {\n      let nodeData = node.nodeValue;\n      if (nodeData[0] === '$') {\n        node.nodeValue = '';\n        return nodeData.slice(2, -1);\n      }\n      return 0;\n    }\n  }\n  function updateState(simpleEl) {\n    const doms = simpleEl._refs,\n          refs = simpleEl.stateMap,\n          l = refs.length;\n    const newState = simpleEl.state,\n          oldState = simpleEl._oldState;\n    for (let i = 0; i < l; i++) {\n      const data = refs[i].ref,\n            dom = doms[i];\n      if (Array.isArray(data)) {\n        const l = data.length;\n        for (let i = 0; i < l; i++) {\n          const attr = data[i];\n          if (oldState[attr.text] !== newState[attr.text]) {\n            if (attr.name === 'class') dom.className = newState[attr.text] || '';else dom.setAttribute(attr.name, newState[attr.text]);\n          }\n        }\n      } else {\n        if (oldState[data] != newState[data]) dom.nodeValue = newState[data];\n      }\n    }\n  }\n  function SimpleElement(content, defaultState) {\n    if (typeof content === 'string') {\n      SIFRR_NODE$1.innerHTML = content;\n      content = SIFRR_NODE$1.content.firstElementChild || SIFRR_NODE$1.content.firstChild;\n    }\n    if (content.isSifrr && content.isSifrr()) return content;\n    content.stateMap = create$2(content, creator$1);\n    content._refs = collect$2(content, content.stateMap);\n    Object.defineProperty(content, 'state', {\n      get: () => content._state,\n      set: v => {\n        content._oldState = Object.assign({}, content._state);\n        content._state = Object.assign(content._state || {}, v);\n        updateState(content);\n      }\n    });\n    if (defaultState) content.state = defaultState;\n    content.sifrrClone = function (deep) {\n      const clone = content.cloneNode(deep);\n      clone.stateMap = content.stateMap;\n      clone._refs = collect$2(clone, content.stateMap);\n      Object.defineProperty(clone, 'state', {\n        get: () => clone._state,\n        set: v => {\n          clone._oldState = Object.assign({}, clone._state);\n          clone._state = Object.assign(clone._state || {}, v);\n          updateState(clone);\n        }\n      });\n      if (content.state) clone.state = content.state;\n      return clone;\n    };\n    return content;\n  }\n  var simpleelement = SimpleElement;\n\n  class Element extends window.HTMLElement {\n    static get observedAttributes() {\n      return ['data-sifrr-state'].concat(this.observedAttrs());\n    }\n    static observedAttrs() {\n      return [];\n    }\n    static get template() {\n      return loader.all[this.elementName].template;\n    }\n    static get stateMap() {\n      this._stateMap = this._stateMap || parser.createStateMap(this.template.content);\n      return this._stateMap;\n    }\n    static get elementName() {\n      return this.name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n    constructor() {\n      super();\n      this._state = Object.assign({}, this.constructor.defaultState, this.state);\n      const content = this.constructor.template.content.cloneNode(true);\n      this._refs = parser.collectRefs(content, this.constructor.stateMap);\n      this.useShadowRoot = this.constructor.template.dataset.sr === 'false' ? false : !!window.document.head.attachShadow && this.constructor.useShadowRoot;\n      if (this.useShadowRoot) {\n        this.attachShadow({\n          mode: 'open'\n        });\n        this.shadowRoot.appendChild(content);\n        this.shadowRoot.addEventListener('change', parser.twoWayBind);\n      } else this.appendChild(content);\n    }\n    connectedCallback() {\n      if (!this.hasAttribute('data-sifrr-state')) parser.updateState(this);\n      this.onConnect();\n    }\n    onConnect() {}\n    disconnectedCallback() {\n      if (this.useShadowRoot) this.shadowRoot.removeEventListener('change', parser.twoWayBind);\n      this.onDisconnect();\n    }\n    onDisconnect() {}\n    attributeChangedCallback(attrName, oldVal, newVal) {\n      if (attrName === 'data-sifrr-state') {\n        this.state = json.parse(newVal);\n      }\n      this.onAttributeChange(attrName, oldVal, newVal);\n    }\n    onAttributeChange() {}\n    get state() {\n      return this._state;\n    }\n    set state(v) {\n      Object.assign(this._state, v);\n      parser.updateState(this);\n    }\n    onStateChange() {}\n    isSifrr(name = null) {\n      if (name) return name === this.constructor.elementName;else return true;\n    }\n    sifrrClone(deep) {\n      const clone = this.cloneNode(deep);\n      clone.state = this.state;\n      return clone;\n    }\n    clearState() {\n      this._state = {};\n      parser.updateState(this);\n    }\n    qs(args, sr = true) {\n      if (this.useShadowRoot && sr) return this.shadowRoot.querySelector(args);else return this.querySelector(args);\n    }\n    qsAll(args, sr = true) {\n      if (this.useShadowRoot && sr) return this.shadowRoot.querySelectorAll(args);else return this.querySelectorAll(args);\n    }\n    static addArrayToDom(key, template) {\n      this._arrayToDom = this._arrayToDom || {};\n      this._arrayToDom[key] = simpleelement(template);\n    }\n    arrayToDom(key, newState = this.state[key]) {\n      this._domL = this._domL || {};\n      const oldL = this._domL[key] || 0;\n      const domArray = [];\n      const newL = newState.length;\n      for (let i = 0; i < newL; i++) {\n        if (i < oldL) {\n          domArray.push({ type: 'stateChange', state: newState[i] });\n        } else {\n          const el = this.constructor._arrayToDom[key].sifrrClone(true);\n          el.state = newState[i];\n          domArray.push(el);\n        }\n      }\n      this._domL[key] = newL;\n      return domArray;\n    }\n  }\n  var element = Element;\n\n  const SYNTHETIC_EVENTS = {};\n  const nativeToSyntheticEvent = (e, name) => {\n    return Promise.resolve((() => {\n      let dom = e.path ? e.path[0] : e.target;\n      while (dom) {\n        const eventHandler = dom[`$${name}`];\n        if (eventHandler) {\n          eventHandler(e, dom);\n        }\n        cssMatchEvent(e, name, dom);\n        dom = dom.parentNode || dom.host;\n      }\n    })());\n  };\n  const cssMatchEvent = (e, name, dom) => {\n    function callEach(fxns) {\n      fxns.forEach(fxn => fxn(e, dom));\n    }\n    for (let css in SYNTHETIC_EVENTS[name]) {\n      if (typeof dom.matches === 'function' && dom.matches(css) || dom.nodeType === 9 && css === 'document') callEach(SYNTHETIC_EVENTS[name][css]);\n    }\n  };\n  const Event = {\n    add: name => {\n      if (SYNTHETIC_EVENTS[name]) return false;\n      window.document.addEventListener(name, event => nativeToSyntheticEvent(event, name), { capture: true, passive: true });\n      SYNTHETIC_EVENTS[name] = {};\n      return true;\n    },\n    addListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [];\n      if (fxns.indexOf(fxn) < 0) fxns.push(fxn);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    removeListener: (name, css, fxn) => {\n      const fxns = SYNTHETIC_EVENTS[name][css] || [],\n            i = fxns.indexOf(fxn);\n      if (i >= 0) fxns.splice(i, 1);\n      SYNTHETIC_EVENTS[name][css] = fxns;\n      return true;\n    },\n    trigger: (el, name, options) => {\n      el.dispatchEvent(new window.Event(name, Object.assign({ bubbles: true, composed: true }, options)));\n    }\n  };\n  var event = Event;\n\n  let SifrrDom = {};\n  SifrrDom.elements = {};\n  SifrrDom.Element = element;\n  SifrrDom.Parser = parser;\n  SifrrDom.makeEqual = makeequal;\n  SifrrDom.Loader = loader;\n  SifrrDom.SimpleElement = simpleelement;\n  SifrrDom.Event = event;\n  SifrrDom.register = function (Element) {\n    Element.useShadowRoot = SifrrDom.config.useShadowRoot;\n    const name = Element.elementName;\n    if (!name) {\n      window.console.warn('Error creating Custom Element: No name given.', Element);\n    } else if (window.customElements.get(name)) {\n      window.console.warn(`Error creating Element: ${name} - Custom Element with this name is already defined.`);\n    } else if (name.indexOf('-') < 1) {\n      window.console.warn(`Error creating Element: ${name} - Custom Element name must have one dash '-'`);\n    } else {\n      try {\n        window.customElements.define(name, Element);\n        SifrrDom.elements[name] = Element;\n        return true;\n      } catch (error) {\n        window.console.warn(`Error creating Custom Element: ${name} - ${error}`);\n        return false;\n      }\n    }\n    return false;\n  };\n  SifrrDom.setup = function (config) {\n    SifrrDom.config = Object.assign({\n      baseUrl: '/',\n      useShadowRoot: true\n    }, config);\n    SifrrDom.Event.add('input');\n    SifrrDom.Event.add('change');\n    SifrrDom.Event.addListener('change', 'document', SifrrDom.Parser.twoWayBind);\n    SifrrDom.Event.addListener('input', 'document', SifrrDom.Parser.twoWayBind);\n  };\n  SifrrDom.load = function (elemName, config = { baseUrl: SifrrDom.config.baseUrl }) {\n    return new Promise(res => {\n      let loader$$1 = new SifrrDom.Loader(elemName, config);\n      loader$$1.executeScripts().then(() => res());\n    });\n  };\n  SifrrDom.Url = url;\n  SifrrDom.relativeTo = function (elemName, relativeUrl) {\n    if (typeof elemName === 'string') return SifrrDom.Url.absolute(SifrrDom.Loader.urls[elemName], relativeUrl);\n  };\n  var sifrr_dom = SifrrDom;\n\n  return sifrr_dom;\n\n})));\n/*! (c) @aadityataparia */\n//# sourceMappingURL=sifrr.dom.js.map\n","window.Sifrr = window.Sifrr || {};\nwindow.Sifrr.Dom = require('@sifrr/dom');\n\nconst Sifrr = window.Sifrr;\n\nSifrr.Dom.setup();\nSifrr.Dom.load('sifrr-route');\n"],"names":["module","url","base","relative","stack","split","parts","pop","i","length","push","join","qIndex","indexOf","substring","update","element","name","newValue","fromValue","className","getAttribute","setAttribute","removeAttribute","nodeName","value","Json","data","ans","JSON","parse","e","Array","isArray","forEach","v","k","stringify","a","b","key","json","map","deepClone","clone","constants","window","document","createElement","updateAttribute","updateAttribute$1","shallowEqual","TEXT_NODE","COMMENT_NODE","makeChildrenEqual","parent","newChildren","oldL","childNodes","newL","removeChild","lastChild","appendChild","l","Math","min","item","head","firstChild","makeEqual","nextSibling","oldNode","newNode","type","state","replaceWith","nodeType","attr","oldAttrs","attributes","newAttrs","j","hasAttribute","specified","makeequal","TREE_WALKER","createTreeWalker","NodeFilter","SHOW_ALL","roll","n","filter","node","this","currentNode","parentNode","nextNode","Ref","idx","ref","stateMap","refs","x","fxn","indices","makeChildrenEqual$1","updateAttribute$2","collect","collect$1","create","create$1","SIFRR_NODE","TEXT_NODE$1","COMMENT_NODE$1","ELEMENT_NODE","isHtml","el","dataset","sifrrHtml","contentEditable","sifrrRepeat","creator","nodeValue","trim","ref$$1","innerHTML","html","text","replace","attrs","attrStateMap","attribute","Object","keys","Parser","useShadowRoot","shadowRoot","_refs","constructor","dom","val","evaluateString","undefined","children","docFrag","cloneNode","toString","prototype","slice","call","textContent","onStateChange","target","path","sifrrBind","getRootNode","host","string","match","replacer","f","Function","bind","parser","global","self","sifrr_fetch","exports","request","options","_options","_url","fetch","then","resp","contentType","headers","get","includes","ok","error","Error","statusText","response","params","encodeURIComponent","assign","accept","fn","Loader","elemName","config","all","instance","elementName","urls","htmlUrl","me","file","DOMParser","parseFromString","add","template","querySelector","baseUrl","querySelectorAll","script","remove","_all","loader","collect$2","create$2","SIFRR_NODE$1","creator$1","from","ret","avalue","nodeData","updateState","simpleEl","doms","newState","oldState","_oldState","simpleelement","content","defaultState","firstElementChild","isSifrr","defineProperty","_state","sifrrClone","deep","HTMLElement","concat","observedAttrs","_stateMap","createStateMap","toLowerCase","collectRefs","sr","attachShadow","addEventListener","twoWayBind","onConnect","removeEventListener","onDisconnect","attrName","oldVal","newVal","onAttributeChange","args","_arrayToDom","_domL","domArray","SYNTHETIC_EVENTS","cssMatchEvent","callEach","fxns","css","matches","event","Promise","resolve","eventHandler","nativeToSyntheticEvent","capture","passive","splice","dispatchEvent","Event","bubbles","composed","SifrrDom","Element","SimpleElement","register","customElements","console","warn","define","elements","setup","addListener","load","res","executeScripts","Url","relativeTo","relativeUrl","absolute","factory","Sifrr","Dom","require$$0"],"mappings":"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"}