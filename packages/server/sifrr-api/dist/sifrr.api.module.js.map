{"version":3,"file":"sifrr.api.module.js","sources":["../src/api/model.js","../src/api/expresstographql.js","../src/api/loadroutes.js","../../../../node_modules/mkdirp/index.js","../src/api/createschemafrommodels.js","../src/api/reqtographqlargs.js","../src/sifrr.api.js"],"sourcesContent":["const { attributeFields, defaultListArgs, defaultArgs } = require('graphql-sequelize');\nconst { resolver } = require('graphql-sequelize');\nconst Sequelize = require('sequelize');\n\nclass Model extends Sequelize.Model {\n  static init(options) {\n    this.gqAssociations[this.gqName] = {};\n    this.gqQuery[this.gqName] = {};\n    this.gqMutations[this.gqName] = {};\n    this.gqExtraArgs[this.gqName] = {};\n    const ret = super.init(this.schema, options);\n    ret.onInit();\n    return ret;\n  }\n\n  static belongsToMany(model, options) {\n    const name = options.as || model.gqName + 's';\n    this[name] = super.belongsToMany(model, options);\n    this.gqAssociations[this.gqName][name] = { resolver: resolver(this[name]), returnType: `[${model.gqName}]`, model: model };\n    return this[name];\n  }\n\n  static belongsTo(model, options) {\n    const name = options.as || model.gqName;\n    this[name] = super.belongsTo(model, options);\n    this.gqAssociations[this.gqName][name] = { resolver: resolver(this[name]), returnType: model.gqName, model: model };\n    return this[name];\n  }\n\n  static hasMany(model, options) {\n    const name = options.as || model.gqName + 's';\n    this[name] = super.hasMany(model, options);\n    this.gqAssociations[this.gqName][name] = { resolver: resolver(this[name]), returnType: `[${model.gqName}]`, model: model };\n    return this[name];\n  }\n\n  static hasOne(model, options) {\n    const name = options.as || model.gqName;\n    this[name] = super.hasOne(model, options);\n    this.gqAssociations[this.gqName][name] = { resolver: resolver(this[name]), returnType: model.gqName, model: model };\n    return this[name];\n  }\n\n  static addArg(name, options /* = { args, resolver, returnType } */) {\n    // args = 'id:Int, name:String'\n    this.gqExtraArgs[this.gqName][name] = options;\n  }\n\n  static addMutation(name, options /* = { args, resolver, returnType } */) {\n    // args = 'id:Int, name:String'\n    this.gqMutations[this.gqName][name] = options;\n  }\n\n  static addQuery(name, options /* = { args, resolver, returnType } */) {\n    // args = 'id:Int, name:String'\n    this.gqQuery[this.gqName][name] = options;\n  }\n\n  static get gqName() {\n    return this.name;\n  }\n\n  static get gqSchema() {\n    return this.sequelizeToGqSchema();\n  }\n\n  static get gqAttrs() {\n    return attributeFields(this);\n  }\n\n  static get gqArgs() {\n    return Object.assign(defaultArgs(this), defaultListArgs());\n  }\n\n  static get resolvers() {\n    const q = { Query: this.gqQuery[this.gqName], Mutation: this.gqMutations[this.gqName] };\n\n    q[this.gqName] = {};\n\n    // Associations\n    for (let a in this.gqAssociations[this.gqName]) {\n      const assoc = this.gqAssociations[this.gqName][a];\n      q[this.gqName][a] = assoc.resolver;\n    }\n\n    // Extra\n    for (let a in this.gqExtraArgs[this.gqName]) {\n      const assoc = this.gqExtraArgs[this.gqName][a];\n      q[this.gqName][a] = assoc.resolver;\n    }\n\n    return q;\n  }\n\n  static onInit() {}\n\n  // Default mutation Resolvers\n  static getQueryResolver(_, args, ctx, info) {\n    let include;\n    for (let arg in args.where) {\n      if (arg.indexOf('__') >= 0) {\n        const assocs = arg.split('__');\n        args.where[`$${assocs.join('.')}$`] = args.where[arg];\n        include = this._assocsToInclude(assocs);\n        delete args.where[arg];\n      }\n    }\n    return resolver(this, {\n      before: (findOptions) => {\n        findOptions.include = include;\n        return findOptions;\n      }\n    })(_, args, ctx, info);\n  }\n\n  static createMutationResolver(_, args) {\n    return this.create(args);\n  }\n\n  static updateMutationResolver(_, args) {\n    const options = { where: { id: args.id } };\n    delete args.id;\n    return this.update(args, options).then(() => this.findByPk(options.where.id));\n  }\n\n  static upsertMutationResolver(_, args) {\n    return this.upsert(args).then(() => this.findByPk(args.id));\n  }\n\n  static deleteMutationResolver(_, args) {\n    return this.destroy({ where: args });\n  }\n\n  // Takes arguments from graphql-sequelize or arg: {type: 'type' or ['type']} and coverts them to string 'id:Int, arg:type',\n  // if arg is in required, it will add ! at the end, if arg is in ignore it won't add it\n  static argsToString(args, { required = [], allowed = [], separator = ', ' } = {}) {\n    if (allowed.length > 0) args = filter(args, (arg) => allowed.indexOf(arg) >= 0 || required.indexOf(arg) >= 0);\n\n    let str = [];\n    for (let arg in args) {\n      const bang = required.indexOf(arg) >= 0 ? '!' : '';\n      if (args[arg].returnType) {\n        str.push(`${arg}: ${args[arg].returnType}${bang}`);\n      } else if (args[arg].type.constructor.name === 'GraphQLList') {\n        str.push(`${arg}: [${args[arg].type.ofType.name}]${bang}`);\n      } else if (args[arg].type.constructor.name === 'GraphQLNonNull') {\n        str.push(`${arg}: ${args[arg].type.ofType.name}!`);\n      } else {\n        try {\n          str.push(`${arg}: ${args[arg].type.name || args[arg].type.ofType.name}${bang}`);\n        } catch(e) {\n          if (Array.isArray(args[arg].type)) str.push(`${arg}:[${args[arg].type[0]}]${bang}`);\n          else str.push(`${arg}: ${args[arg].type}${bang}`);\n        }\n      }\n    }\n    return str.join(separator);\n  }\n\n  static sequelizeToGqSchema({ required = [], allowed = [] } = {}) {\n    // Fields - arguments and associations\n    const args = attributeFields(this);\n    const assocs = this.gqAssociations[this.gqName];\n    const extras = this.gqExtraArgs[this.gqName];\n    const me = this;\n    if (allowed.length > 0) {\n      Object.keys(filter(assocs, (assoc) => allowed.indexOf(assoc) < 0)).forEach((a) => {\n        // Remove resolvers for not allowed associations\n        delete me.gqAssociations[me.gqName][a];\n      });\n      Object.keys(filter(extras, (extra) => allowed.indexOf(extra) < 0)).forEach((a) => {\n        // Remove resolvers for not allowed associations\n        delete me.gqExtraArgs[me.gqName][a];\n      });\n    }\n    const total = Object.assign(args, assocs, extras);\n    let sq = `type ${this.gqName} {\n  ${this.argsToString(total, { required, allowed, separator: '\\n  ' })}\n}`;\n    return sq;\n  }\n\n  static _assocsToInclude(assocs, column = true, model = this) {\n    if (column) assocs.pop();\n    const assocName = assocs.shift();\n    const include = [{\n      model: model.gqAssociations[model.gqName][assocName].model,\n      as: assocName\n    }];\n    if (assocs.length > 0) {\n      include[0].include = this._assocsToInclude(assocs, false, model.gqAssociations[model.gqName][assocName].model);\n    }\n    return include;\n  }\n}\n\nfunction filter(json, fxn) {\n  const res = {};\n  for (let k in json) {\n    if (fxn(k)) res[k] = json[k];\n  }\n  return res;\n}\n\nModel.gqAssociations = {};\nModel.gqMutations = {};\nModel.gqQuery = {};\nModel.gqExtraArgs = {};\n\nmodule.exports = Model;\n","const { graphql } = require('graphql');\n\nclass ExpressToGraphql {\n  constructor(schema) {\n    this._schema = schema;\n    this._middlewares = [];\n  }\n\n  resolve(req, query, context = {}) {\n    this._middlewares.forEach((m) => {\n      m(req, context);\n    });\n\n    return graphql({\n      schema: this._schema,\n      source: query,\n      contextValue: context\n    });\n  }\n\n  use(fxn) {\n    this._middlewares.push(fxn);\n  }\n}\n\nmodule.exports = ExpressToGraphql;\n","const fs = require('fs');\nconst path = require('path');\n\nfunction loadRoutes(app, dir, { ignore = [], basePath = '' }) {\n  const paths = [];\n\n  fs\n    .readdirSync(dir)\n    .filter(file =>\n      path.extname(file) === '.js' &&\n      ignore.indexOf(file) < 0\n    )\n    .forEach((file) => {\n      const routes = require(path.join(dir, file));\n      let basePaths = routes.basePath || '';\n      delete routes.basePath;\n      if (typeof basePaths === 'string') basePaths = [basePaths];\n\n      basePaths.forEach((basep) => {\n        for (let method in routes) {\n          const methodRoutes = routes[method];\n          for (let r in methodRoutes) {\n            app[method](basePath + basep + r, methodRoutes[r]);\n            paths.push(basePath + basep + r);\n          }\n        }\n      });\n    });\n\n  return paths;\n}\n\nmodule.exports = loadRoutes;\n","var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n","const { makeExecutableSchema } = require('graphql-tools');\nconst fs = require('fs');\nconst path = require('path');\nconst mkdirp = require('mkdirp');\n\nfunction getTypeDef(qs, resolvers) {\n  let ret = [];\n  for (let q in qs) {\n    const qdet = qs[q];\n    const args = qdet.args ? `(${qdet.args})` : '';\n    ret.push(`${q}${args}: ${qdet.returnType}`);\n    resolvers[q] = qdet.resolver;\n  }\n  return ret.join('\\n  ');\n}\n\nfunction createSchemaFromModels(models, { extra = '', query = {}, mutation = {}, saveSchema = true, schemaPath = './db/schema.graphql' } = {}) {\n  const typeDefs = [], resolvers = {};\n  for(let modelName in models) {\n    typeDefs.push(models[modelName].gqSchema);\n    Object.assign(resolvers, models[modelName].resolvers);\n    Object.assign(query, models[modelName].resolvers.Query);\n    Object.assign(mutation, models[modelName].resolvers.Mutation);\n  }\n  Object.assign(resolvers.Query, query);\n  Object.assign(resolvers.Mutation, mutation);\n\n  const qnew = {}, mnew = {};\n\n  const typeDef = `type Query {\n  ${getTypeDef(resolvers.Query, qnew)}\n}\n\ntype Mutation {\n  ${getTypeDef(resolvers.Mutation, mnew)}\n}\n\nscalar SequelizeJSON\nscalar Date\n${extra}\n`;\n\n  typeDefs.push(typeDef);\n  resolvers.Query = qnew;\n  resolvers.Mutation = mnew;\n\n  if (saveSchema) {\n    schemaPath = path.resolve(schemaPath);\n    mkdirp(path.dirname(schemaPath));\n    const comment = '# THIS FILE WS AUTOGENERATED BY SIFRR-API. DO NOT EDIT THIS FILE DIRECTLY. \\n\\n';\n    fs.writeFileSync(schemaPath, comment + typeDefs.join('\\n\\n'));\n  }\n\n  return makeExecutableSchema({\n    typeDefs,\n    resolvers\n  });\n}\n\nmodule.exports = createSchemaFromModels;\n","function filter(json, fxn) {\n  const res = {};\n  for (let k in json) {\n    if (fxn(k)) res[k] = json[k];\n  }\n  return res;\n}\n\nfunction reqToGraphqlArgs(req, { allowed = [] } = {}) {\n  let args = {};\n  Object.assign(args, req.query, req.body, req.params);\n\n  if (allowed.length > 0) args = filter(args, (arg) => allowed.indexOf(arg) >= 0);\n\n  for (let arg in args) {\n    try {\n      args[arg] = JSON.parse(args[arg]);\n    } catch(e) {\n      // Do nothing if it is not json\n    }\n  }\n\n  const ret = JSON.stringify(args).slice(1, -1).replace(/\"([^(\")\"]+)\":/g,'$1:');\n  return ret ? `(${ret})` : '';\n}\n\nmodule.exports = reqToGraphqlArgs;\n","const SifrrApi = {};\nSifrrApi.Model = require('./api/model');\nSifrrApi.ExpressToGraphql = require('./api/expresstographql');\nSifrrApi.loadRoutes = require('./api/loadroutes');\nSifrrApi.createSchemaFromModels = require('./api/createschemafrommodels');\nSifrrApi.reqToGraphqlArgs = require('./api/reqtographqlargs');\n\nmodule.exports = SifrrApi;\n"],"names":["attributeFields","defaultListArgs","defaultArgs","require$$0","resolver","Model","Sequelize","init","options","gqAssociations","gqName","gqQuery","gqMutations","gqExtraArgs","ret","schema","onInit","belongsToMany","model","name","as","returnType","belongsTo","hasMany","hasOne","addArg","addMutation","addQuery","gqSchema","sequelizeToGqSchema","gqAttrs","gqArgs","Object","assign","resolvers","q","Query","Mutation","a","assoc","getQueryResolver","_","args","ctx","info","include","arg","where","indexOf","assocs","split","join","_assocsToInclude","before","findOptions","createMutationResolver","create","updateMutationResolver","id","update","then","findByPk","upsertMutationResolver","upsert","deleteMutationResolver","destroy","argsToString","required","allowed","separator","length","filter","str","bang","push","type","constructor","ofType","e","Array","isArray","extras","me","keys","forEach","extra","total","sq","column","pop","assocName","shift","json","fxn","res","k","graphql","ExpressToGraphql","_schema","_middlewares","resolve","req","query","context","m","source","contextValue","use","loadRoutes","app","dir","ignore","basePath","paths","fs","readdirSync","file","path","extname","routes","require","basePaths","basep","method","methodRoutes","r","_0777","parseInt","mkdirP","mkdirp","p","opts","f","made","mode","xfs","undefined","process","umask","cb","mkdir","er","code","dirname","stat","er2","isDirectory","sync","mkdirSync","err0","statSync","err1","makeExecutableSchema","getTypeDef","qs","qdet","createSchemaFromModels","models","mutation","saveSchema","schemaPath","typeDefs","modelName","qnew","mnew","typeDef","comment","writeFileSync","reqToGraphqlArgs","body","params","JSON","parse","stringify","slice","replace","SifrrApi","require$$1","require$$2","require$$3","require$$4"],"mappings":";;;;;;;;;;;;;;EAAA,MAAM;EAAEA,EAAAA,eAAF;EAAmBC,EAAAA,eAAnB;EAAoCC,EAAAA;EAApC,IAAoDC,gBAA1D;EACA,MAAM;EAAEC,EAAAA;EAAF,IAAeD,gBAArB;;EAGA,MAAME,KAAN,SAAoBC,SAAS,CAACD,KAA9B,CAAoC;EAClC,SAAOE,IAAP,CAAYC,OAAZ,EAAqB;EACnB,SAAKC,cAAL,CAAoB,KAAKC,MAAzB,IAAmC,EAAnC;EACA,SAAKC,OAAL,CAAa,KAAKD,MAAlB,IAA4B,EAA5B;EACA,SAAKE,WAAL,CAAiB,KAAKF,MAAtB,IAAgC,EAAhC;EACA,SAAKG,WAAL,CAAiB,KAAKH,MAAtB,IAAgC,EAAhC;EACA,UAAMI,GAAG,GAAG,MAAMP,IAAN,CAAW,KAAKQ,MAAhB,EAAwBP,OAAxB,CAAZ;EACAM,IAAAA,GAAG,CAACE,MAAJ;EACA,WAAOF,GAAP;EACD;;EAED,SAAOG,aAAP,CAAqBC,KAArB,EAA4BV,OAA5B,EAAqC;EACnC,UAAMW,IAAI,GAAGX,OAAO,CAACY,EAAR,IAAcF,KAAK,CAACR,MAAN,GAAe,GAA1C;EACA,SAAKS,IAAL,IAAa,MAAMF,aAAN,CAAoBC,KAApB,EAA2BV,OAA3B,CAAb;EACA,SAAKC,cAAL,CAAoB,KAAKC,MAAzB,EAAiCS,IAAjC,IAAyC;EAAEf,MAAAA,QAAQ,EAAEA,QAAQ,CAAC,KAAKe,IAAL,CAAD,CAApB;EAAkCE,MAAAA,UAAU,EAAG,IAAGH,KAAK,CAACR,MAAO,GAA/D;EAAmEQ,MAAAA,KAAK,EAAEA;EAA1E,KAAzC;EACA,WAAO,KAAKC,IAAL,CAAP;EACD;;EAED,SAAOG,SAAP,CAAiBJ,KAAjB,EAAwBV,OAAxB,EAAiC;EAC/B,UAAMW,IAAI,GAAGX,OAAO,CAACY,EAAR,IAAcF,KAAK,CAACR,MAAjC;EACA,SAAKS,IAAL,IAAa,MAAMG,SAAN,CAAgBJ,KAAhB,EAAuBV,OAAvB,CAAb;EACA,SAAKC,cAAL,CAAoB,KAAKC,MAAzB,EAAiCS,IAAjC,IAAyC;EAAEf,MAAAA,QAAQ,EAAEA,QAAQ,CAAC,KAAKe,IAAL,CAAD,CAApB;EAAkCE,MAAAA,UAAU,EAAEH,KAAK,CAACR,MAApD;EAA4DQ,MAAAA,KAAK,EAAEA;EAAnE,KAAzC;EACA,WAAO,KAAKC,IAAL,CAAP;EACD;;EAED,SAAOI,OAAP,CAAeL,KAAf,EAAsBV,OAAtB,EAA+B;EAC7B,UAAMW,IAAI,GAAGX,OAAO,CAACY,EAAR,IAAcF,KAAK,CAACR,MAAN,GAAe,GAA1C;EACA,SAAKS,IAAL,IAAa,MAAMI,OAAN,CAAcL,KAAd,EAAqBV,OAArB,CAAb;EACA,SAAKC,cAAL,CAAoB,KAAKC,MAAzB,EAAiCS,IAAjC,IAAyC;EAAEf,MAAAA,QAAQ,EAAEA,QAAQ,CAAC,KAAKe,IAAL,CAAD,CAApB;EAAkCE,MAAAA,UAAU,EAAG,IAAGH,KAAK,CAACR,MAAO,GAA/D;EAAmEQ,MAAAA,KAAK,EAAEA;EAA1E,KAAzC;EACA,WAAO,KAAKC,IAAL,CAAP;EACD;;EAED,SAAOK,MAAP,CAAcN,KAAd,EAAqBV,OAArB,EAA8B;EAC5B,UAAMW,IAAI,GAAGX,OAAO,CAACY,EAAR,IAAcF,KAAK,CAACR,MAAjC;EACA,SAAKS,IAAL,IAAa,MAAMK,MAAN,CAAaN,KAAb,EAAoBV,OAApB,CAAb;EACA,SAAKC,cAAL,CAAoB,KAAKC,MAAzB,EAAiCS,IAAjC,IAAyC;EAAEf,MAAAA,QAAQ,EAAEA,QAAQ,CAAC,KAAKe,IAAL,CAAD,CAApB;EAAkCE,MAAAA,UAAU,EAAEH,KAAK,CAACR,MAApD;EAA4DQ,MAAAA,KAAK,EAAEA;EAAnE,KAAzC;EACA,WAAO,KAAKC,IAAL,CAAP;EACD;;EAED,SAAOM,MAAP,CAAcN,IAAd,EAAoBX;;EAApB,IAAoE;;EAElE,SAAKK,WAAL,CAAiB,KAAKH,MAAtB,EAA8BS,IAA9B,IAAsCX,OAAtC;EACD;;EAED,SAAOkB,WAAP,CAAmBP,IAAnB,EAAyBX;;EAAzB,IAAyE;;EAEvE,SAAKI,WAAL,CAAiB,KAAKF,MAAtB,EAA8BS,IAA9B,IAAsCX,OAAtC;EACD;;EAED,SAAOmB,QAAP,CAAgBR,IAAhB,EAAsBX;;EAAtB,IAAsE;;EAEpE,SAAKG,OAAL,CAAa,KAAKD,MAAlB,EAA0BS,IAA1B,IAAkCX,OAAlC;EACD;;EAED,aAAWE,MAAX,GAAoB;EAClB,WAAO,KAAKS,IAAZ;EACD;;EAED,aAAWS,QAAX,GAAsB;EACpB,WAAO,KAAKC,mBAAL,EAAP;EACD;;EAED,aAAWC,OAAX,GAAqB;EACnB,WAAO9B,eAAe,CAAC,IAAD,CAAtB;EACD;;EAED,aAAW+B,MAAX,GAAoB;EAClB,WAAOC,MAAM,CAACC,MAAP,CAAc/B,WAAW,CAAC,IAAD,CAAzB,EAAiCD,eAAe,EAAhD,CAAP;EACD;;EAED,aAAWiC,SAAX,GAAuB;EACrB,UAAMC,CAAC,GAAG;EAAEC,MAAAA,KAAK,EAAE,KAAKzB,OAAL,CAAa,KAAKD,MAAlB,CAAT;EAAoC2B,MAAAA,QAAQ,EAAE,KAAKzB,WAAL,CAAiB,KAAKF,MAAtB;EAA9C,KAAV;EAEAyB,IAAAA,CAAC,CAAC,KAAKzB,MAAN,CAAD,GAAiB,EAAjB,CAHqB;;EAMrB,SAAK,IAAI4B,CAAT,IAAc,KAAK7B,cAAL,CAAoB,KAAKC,MAAzB,CAAd,EAAgD;EAC9C,YAAM6B,KAAK,GAAG,KAAK9B,cAAL,CAAoB,KAAKC,MAAzB,EAAiC4B,CAAjC,CAAd;EACAH,MAAAA,CAAC,CAAC,KAAKzB,MAAN,CAAD,CAAe4B,CAAf,IAAoBC,KAAK,CAACnC,QAA1B;EACD,KAToB;;;EAYrB,SAAK,IAAIkC,CAAT,IAAc,KAAKzB,WAAL,CAAiB,KAAKH,MAAtB,CAAd,EAA6C;EAC3C,YAAM6B,KAAK,GAAG,KAAK1B,WAAL,CAAiB,KAAKH,MAAtB,EAA8B4B,CAA9B,CAAd;EACAH,MAAAA,CAAC,CAAC,KAAKzB,MAAN,CAAD,CAAe4B,CAAf,IAAoBC,KAAK,CAACnC,QAA1B;EACD;;EAED,WAAO+B,CAAP;EACD;;EAED,SAAOnB,MAAP,GAAgB,EA1FkB;;;EA6FlC,SAAOwB,gBAAP,CAAwBC,CAAxB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4C;EAC1C,QAAIC,OAAJ;;EACA,SAAK,IAAIC,GAAT,IAAgBJ,IAAI,CAACK,KAArB,EAA4B;EAC1B,UAAID,GAAG,CAACE,OAAJ,CAAY,IAAZ,KAAqB,CAAzB,EAA4B;EAC1B,cAAMC,MAAM,GAAGH,GAAG,CAACI,KAAJ,CAAU,IAAV,CAAf;EACAR,QAAAA,IAAI,CAACK,KAAL,CAAY,IAAGE,MAAM,CAACE,IAAP,CAAY,GAAZ,CAAiB,GAAhC,IAAsCT,IAAI,CAACK,KAAL,CAAWD,GAAX,CAAtC;EACAD,QAAAA,OAAO,GAAG,KAAKO,gBAAL,CAAsBH,MAAtB,CAAV;EACA,eAAOP,IAAI,CAACK,KAAL,CAAWD,GAAX,CAAP;EACD;EACF;;EACD,WAAO1C,QAAQ,CAAC,IAAD,EAAO;EACpBiD,MAAAA,MAAM,EAAGC,WAAD,IAAiB;EACvBA,QAAAA,WAAW,CAACT,OAAZ,GAAsBA,OAAtB;EACA,eAAOS,WAAP;EACD;EAJmB,KAAP,CAAR,CAKJb,CALI,EAKDC,IALC,EAKKC,GALL,EAKUC,IALV,CAAP;EAMD;;EAED,SAAOW,sBAAP,CAA8Bd,CAA9B,EAAiCC,IAAjC,EAAuC;EACrC,WAAO,KAAKc,MAAL,CAAYd,IAAZ,CAAP;EACD;;EAED,SAAOe,sBAAP,CAA8BhB,CAA9B,EAAiCC,IAAjC,EAAuC;EACrC,UAAMlC,OAAO,GAAG;EAAEuC,MAAAA,KAAK,EAAE;EAAEW,QAAAA,EAAE,EAAEhB,IAAI,CAACgB;EAAX;EAAT,KAAhB;EACA,WAAOhB,IAAI,CAACgB,EAAZ;EACA,WAAO,KAAKC,MAAL,CAAYjB,IAAZ,EAAkBlC,OAAlB,EAA2BoD,IAA3B,CAAgC,MAAM,KAAKC,QAAL,CAAcrD,OAAO,CAACuC,KAAR,CAAcW,EAA5B,CAAtC,CAAP;EACD;;EAED,SAAOI,sBAAP,CAA8BrB,CAA9B,EAAiCC,IAAjC,EAAuC;EACrC,WAAO,KAAKqB,MAAL,CAAYrB,IAAZ,EAAkBkB,IAAlB,CAAuB,MAAM,KAAKC,QAAL,CAAcnB,IAAI,CAACgB,EAAnB,CAA7B,CAAP;EACD;;EAED,SAAOM,sBAAP,CAA8BvB,CAA9B,EAAiCC,IAAjC,EAAuC;EACrC,WAAO,KAAKuB,OAAL,CAAa;EAAElB,MAAAA,KAAK,EAAEL;EAAT,KAAb,CAAP;EACD,GA/HiC;;;;EAmIlC,SAAOwB,YAAP,CAAoBxB,IAApB,EAA0B;EAAEyB,IAAAA,QAAQ,GAAG,EAAb;EAAiBC,IAAAA,OAAO,GAAG,EAA3B;EAA+BC,IAAAA,SAAS,GAAG;EAA3C,MAAoD,EAA9E,EAAkF;EAChF,QAAID,OAAO,CAACE,MAAR,GAAiB,CAArB,EAAwB5B,IAAI,GAAG6B,MAAM,CAAC7B,IAAD,EAAQI,GAAD,IAASsB,OAAO,CAACpB,OAAR,CAAgBF,GAAhB,KAAwB,CAAxB,IAA6BqB,QAAQ,CAACnB,OAAT,CAAiBF,GAAjB,KAAyB,CAAtE,CAAb;EAExB,QAAI0B,GAAG,GAAG,EAAV;;EACA,SAAK,IAAI1B,GAAT,IAAgBJ,IAAhB,EAAsB;EACpB,YAAM+B,IAAI,GAAGN,QAAQ,CAACnB,OAAT,CAAiBF,GAAjB,KAAyB,CAAzB,GAA6B,GAA7B,GAAmC,EAAhD;;EACA,UAAIJ,IAAI,CAACI,GAAD,CAAJ,CAAUzB,UAAd,EAA0B;EACxBmD,QAAAA,GAAG,CAACE,IAAJ,CAAU,GAAE5B,GAAI,KAAIJ,IAAI,CAACI,GAAD,CAAJ,CAAUzB,UAAW,GAAEoD,IAAK,EAAhD;EACD,OAFD,MAEO,IAAI/B,IAAI,CAACI,GAAD,CAAJ,CAAU6B,IAAV,CAAeC,WAAf,CAA2BzD,IAA3B,KAAoC,aAAxC,EAAuD;EAC5DqD,QAAAA,GAAG,CAACE,IAAJ,CAAU,GAAE5B,GAAI,MAAKJ,IAAI,CAACI,GAAD,CAAJ,CAAU6B,IAAV,CAAeE,MAAf,CAAsB1D,IAAK,IAAGsD,IAAK,EAAxD;EACD,OAFM,MAEA,IAAI/B,IAAI,CAACI,GAAD,CAAJ,CAAU6B,IAAV,CAAeC,WAAf,CAA2BzD,IAA3B,KAAoC,gBAAxC,EAA0D;EAC/DqD,QAAAA,GAAG,CAACE,IAAJ,CAAU,GAAE5B,GAAI,KAAIJ,IAAI,CAACI,GAAD,CAAJ,CAAU6B,IAAV,CAAeE,MAAf,CAAsB1D,IAAK,GAA/C;EACD,OAFM,MAEA;EACL,YAAI;EACFqD,UAAAA,GAAG,CAACE,IAAJ,CAAU,GAAE5B,GAAI,KAAIJ,IAAI,CAACI,GAAD,CAAJ,CAAU6B,IAAV,CAAexD,IAAf,IAAuBuB,IAAI,CAACI,GAAD,CAAJ,CAAU6B,IAAV,CAAeE,MAAf,CAAsB1D,IAAK,GAAEsD,IAAK,EAA7E;EACD,SAFD,CAEE,OAAMK,CAAN,EAAS;EACT,cAAIC,KAAK,CAACC,OAAN,CAActC,IAAI,CAACI,GAAD,CAAJ,CAAU6B,IAAxB,CAAJ,EAAmCH,GAAG,CAACE,IAAJ,CAAU,GAAE5B,GAAI,KAAIJ,IAAI,CAACI,GAAD,CAAJ,CAAU6B,IAAV,CAAe,CAAf,CAAkB,IAAGF,IAAK,EAA9C,EAAnC,KACKD,GAAG,CAACE,IAAJ,CAAU,GAAE5B,GAAI,KAAIJ,IAAI,CAACI,GAAD,CAAJ,CAAU6B,IAAK,GAAEF,IAAK,EAA1C;EACN;EACF;EACF;;EACD,WAAOD,GAAG,CAACrB,IAAJ,CAASkB,SAAT,CAAP;EACD;;EAED,SAAOxC,mBAAP,CAA2B;EAAEsC,IAAAA,QAAQ,GAAG,EAAb;EAAiBC,IAAAA,OAAO,GAAG;EAA3B,MAAkC,EAA7D,EAAiE;;EAE/D,UAAM1B,IAAI,GAAG1C,eAAe,CAAC,IAAD,CAA5B;EACA,UAAMiD,MAAM,GAAG,KAAKxC,cAAL,CAAoB,KAAKC,MAAzB,CAAf;EACA,UAAMuE,MAAM,GAAG,KAAKpE,WAAL,CAAiB,KAAKH,MAAtB,CAAf;EACA,UAAMwE,EAAE,GAAG,IAAX;;EACA,QAAId,OAAO,CAACE,MAAR,GAAiB,CAArB,EAAwB;EACtBtC,MAAAA,MAAM,CAACmD,IAAP,CAAYZ,MAAM,CAACtB,MAAD,EAAUV,KAAD,IAAW6B,OAAO,CAACpB,OAAR,CAAgBT,KAAhB,IAAyB,CAA7C,CAAlB,EAAmE6C,OAAnE,CAA4E9C,CAAD,IAAO;;EAEhF,eAAO4C,EAAE,CAACzE,cAAH,CAAkByE,EAAE,CAACxE,MAArB,EAA6B4B,CAA7B,CAAP;EACD,OAHD;EAIAN,MAAAA,MAAM,CAACmD,IAAP,CAAYZ,MAAM,CAACU,MAAD,EAAUI,KAAD,IAAWjB,OAAO,CAACpB,OAAR,CAAgBqC,KAAhB,IAAyB,CAA7C,CAAlB,EAAmED,OAAnE,CAA4E9C,CAAD,IAAO;;EAEhF,eAAO4C,EAAE,CAACrE,WAAH,CAAeqE,EAAE,CAACxE,MAAlB,EAA0B4B,CAA1B,CAAP;EACD,OAHD;EAID;;EACD,UAAMgD,KAAK,GAAGtD,MAAM,CAACC,MAAP,CAAcS,IAAd,EAAoBO,MAApB,EAA4BgC,MAA5B,CAAd;EACA,QAAIM,EAAE,GAAI,QAAO,KAAK7E,MAAO;IAC7B,KAAKwD,YAAL,CAAkBoB,KAAlB,EAAyB;MAAEnB,QAAF;MAAYC,OAAZ;MAAqBC,SAAS,EAAE;KAAzD,CAAmE;EADnE;EAGA,WAAOkB,EAAP;EACD;;EAED,SAAOnC,gBAAP,CAAwBH,MAAxB,EAAgCuC,MAAM,GAAG,IAAzC,EAA+CtE,KAAK,GAAG,IAAvD,EAA6D;EAC3D,QAAIsE,MAAJ,EAAYvC,MAAM,CAACwC,GAAP;EACZ,UAAMC,SAAS,GAAGzC,MAAM,CAAC0C,KAAP,EAAlB;EACA,UAAM9C,OAAO,GAAG,CAAC;EACf3B,MAAAA,KAAK,EAAEA,KAAK,CAACT,cAAN,CAAqBS,KAAK,CAACR,MAA3B,EAAmCgF,SAAnC,EAA8CxE,KADtC;EAEfE,MAAAA,EAAE,EAAEsE;EAFW,KAAD,CAAhB;;EAIA,QAAIzC,MAAM,CAACqB,MAAP,GAAgB,CAApB,EAAuB;EACrBzB,MAAAA,OAAO,CAAC,CAAD,CAAP,CAAWA,OAAX,GAAqB,KAAKO,gBAAL,CAAsBH,MAAtB,EAA8B,KAA9B,EAAqC/B,KAAK,CAACT,cAAN,CAAqBS,KAAK,CAACR,MAA3B,EAAmCgF,SAAnC,EAA8CxE,KAAnF,CAArB;EACD;;EACD,WAAO2B,OAAP;EACD;;EA7LiC;;EAgMpC,SAAS0B,MAAT,CAAgBqB,IAAhB,EAAsBC,GAAtB,EAA2B;EACzB,QAAMC,GAAG,GAAG,EAAZ;;EACA,OAAK,IAAIC,CAAT,IAAcH,IAAd,EAAoB;EAClB,QAAIC,GAAG,CAACE,CAAD,CAAP,EAAYD,GAAG,CAACC,CAAD,CAAH,GAASH,IAAI,CAACG,CAAD,CAAb;EACb;;EACD,SAAOD,GAAP;EACD;;EAEDzF,KAAK,CAACI,cAAN,GAAuB,EAAvB;EACAJ,KAAK,CAACO,WAAN,GAAoB,EAApB;EACAP,KAAK,CAACM,OAAN,GAAgB,EAAhB;EACAN,KAAK,CAACQ,WAAN,GAAoB,EAApB;EAEA,SAAc,GAAGR,KAAjB;;ECjNA,MAAM;EAAE2F,WAAAA;EAAF,IAAc7F,OAApB;;EAEA,MAAM8F,gBAAN,CAAuB;EACrBrB,EAAAA,WAAW,CAAC7D,MAAD,EAAS;EAClB,SAAKmF,OAAL,GAAenF,MAAf;EACA,SAAKoF,YAAL,GAAoB,EAApB;EACD;;EAEDC,EAAAA,OAAO,CAACC,GAAD,EAAMC,KAAN,EAAaC,OAAO,GAAG,EAAvB,EAA2B;EAChC,SAAKJ,YAAL,CAAkBf,OAAlB,CAA2BoB,CAAD,IAAO;EAC/BA,MAAAA,CAAC,CAACH,GAAD,EAAME,OAAN,CAAD;EACD,KAFD;;EAIA,WAAOP,SAAO,CAAC;EACbjF,MAAAA,MAAM,EAAE,KAAKmF,OADA;EAEbO,MAAAA,MAAM,EAAEH,KAFK;EAGbI,MAAAA,YAAY,EAAEH;EAHD,KAAD,CAAd;EAKD;;EAEDI,EAAAA,GAAG,CAACd,GAAD,EAAM;EACP,SAAKM,YAAL,CAAkBzB,IAAlB,CAAuBmB,GAAvB;EACD;;EApBoB;;EAuBvB,oBAAc,GAAGI,gBAAjB;;;;;;ECtBA,SAASW,UAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;EAAEC,EAAAA,MAAM,GAAG,EAAX;EAAeC,EAAAA,QAAQ,GAAG;EAA1B,CAA9B,EAA8D;EAC5D,QAAMC,KAAK,GAAG,EAAd;EAEAC,EAAAA,EAAE,CACCC,WADH,CACeL,GADf,EAEGvC,MAFH,CAEU6C,IAAI,IACVC,IAAI,CAACC,OAAL,CAAaF,IAAb,MAAuB,KAAvB,IACAL,MAAM,CAAC/D,OAAP,CAAeoE,IAAf,IAAuB,CAJ3B,EAMGhC,OANH,CAMYgC,IAAD,IAAU;EACjB,UAAMG,MAAM,GAAGC,eAAAA,CAAQH,IAAI,CAAClE,IAAL,CAAU2D,GAAV,EAAeM,IAAf,CAARI,CAAf;EACA,QAAIC,SAAS,GAAGF,MAAM,CAACP,QAAP,IAAmB,EAAnC;EACA,WAAOO,MAAM,CAACP,QAAd;EACA,QAAI,OAAOS,SAAP,KAAqB,QAAzB,EAAmCA,SAAS,GAAG,CAACA,SAAD,CAAZ;EAEnCA,IAAAA,SAAS,CAACrC,OAAV,CAAmBsC,KAAD,IAAW;EAC3B,WAAK,IAAIC,MAAT,IAAmBJ,MAAnB,EAA2B;EACzB,cAAMK,YAAY,GAAGL,MAAM,CAACI,MAAD,CAA3B;;EACA,aAAK,IAAIE,CAAT,IAAcD,YAAd,EAA4B;EAC1Bf,UAAAA,GAAG,CAACc,MAAD,CAAH,CAAYX,QAAQ,GAAGU,KAAX,GAAmBG,CAA/B,EAAkCD,YAAY,CAACC,CAAD,CAA9C;EACAZ,UAAAA,KAAK,CAACvC,IAAN,CAAWsC,QAAQ,GAAGU,KAAX,GAAmBG,CAA9B;EACD;EACF;EACF,KARD;EASD,GArBH;EAuBA,SAAOZ,KAAP;EACD;;EAED,cAAc,GAAGL,UAAjB;;EC9BA,IAAIkB,KAAK,GAAGC,QAAQ,CAAC,MAAD,EAAS,CAAT,CAApB;;EAEA,UAAc,GAAGC,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACA,MAAP,GAAgBA,MAAjD;;EAEA,SAASA,MAAT,CAAiBE,CAAjB,EAAoBC,IAApB,EAA0BC,CAA1B,EAA6BC,IAA7B,EAAmC;EAC/B,MAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC;EAC5BC,IAAAA,CAAC,GAAGD,IAAJ;EACAA,IAAAA,IAAI,GAAG,EAAP;EACH,GAHD,MAIK,IAAI,CAACA,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;EACxCA,IAAAA,IAAI,GAAG;EAAEG,MAAAA,IAAI,EAAEH;EAAR,KAAP;EACH;;EAED,MAAIG,IAAI,GAAGH,IAAI,CAACG,IAAhB;EACA,MAAIC,GAAG,GAAGJ,IAAI,CAACjB,EAAL,IAAWA,EAArB;;EAEA,MAAIoB,IAAI,KAAKE,SAAb,EAAwB;EACpBF,IAAAA,IAAI,GAAGR,KAAK,GAAI,CAACW,OAAO,CAACC,KAAR,EAAjB;EACH;;EACD,MAAI,CAACL,IAAL,EAAWA,IAAI,GAAG,IAAP;;EAEX,MAAIM,EAAE,GAAGP,CAAC,IAAI,YAAY,EAA1B;;EACAF,EAAAA,CAAC,GAAGb,IAAI,CAACjB,OAAL,CAAa8B,CAAb,CAAJ;EAEAK,EAAAA,GAAG,CAACK,KAAJ,CAAUV,CAAV,EAAaI,IAAb,EAAmB,UAAUO,EAAV,EAAc;EAC7B,QAAI,CAACA,EAAL,EAAS;EACLR,MAAAA,IAAI,GAAGA,IAAI,IAAIH,CAAf;EACA,aAAOS,EAAE,CAAC,IAAD,EAAON,IAAP,CAAT;EACH;;EACD,YAAQQ,EAAE,CAACC,IAAX;EACI,WAAK,QAAL;EACId,QAAAA,MAAM,CAACX,IAAI,CAAC0B,OAAL,CAAab,CAAb,CAAD,EAAkBC,IAAlB,EAAwB,UAAUU,EAAV,EAAcR,IAAd,EAAoB;EAC9C,cAAIQ,EAAJ,EAAQF,EAAE,CAACE,EAAD,EAAKR,IAAL,CAAF,CAAR,KACKL,MAAM,CAACE,CAAD,EAAIC,IAAJ,EAAUQ,EAAV,EAAcN,IAAd,CAAN;EACR,SAHK,CAAN;EAIA;;;;;EAKJ;EACIE,QAAAA,GAAG,CAACS,IAAJ,CAASd,CAAT,EAAY,UAAUe,GAAV,EAAeD,IAAf,EAAqB;;;EAG7B,cAAIC,GAAG,IAAI,CAACD,IAAI,CAACE,WAAL,EAAZ,EAAgCP,EAAE,CAACE,EAAD,EAAKR,IAAL,CAAF,CAAhC,KACKM,EAAE,CAAC,IAAD,EAAON,IAAP,CAAF;EACR,SALD;EAMA;EAlBR;EAoBH,GAzBD;EA0BH;;EAEDL,MAAM,CAACmB,IAAP,GAAc,SAASA,IAAT,CAAejB,CAAf,EAAkBC,IAAlB,EAAwBE,IAAxB,EAA8B;EACxC,MAAI,CAACF,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;EACnCA,IAAAA,IAAI,GAAG;EAAEG,MAAAA,IAAI,EAAEH;EAAR,KAAP;EACH;;EAED,MAAIG,IAAI,GAAGH,IAAI,CAACG,IAAhB;EACA,MAAIC,GAAG,GAAGJ,IAAI,CAACjB,EAAL,IAAWA,EAArB;;EAEA,MAAIoB,IAAI,KAAKE,SAAb,EAAwB;EACpBF,IAAAA,IAAI,GAAGR,KAAK,GAAI,CAACW,OAAO,CAACC,KAAR,EAAjB;EACH;;EACD,MAAI,CAACL,IAAL,EAAWA,IAAI,GAAG,IAAP;EAEXH,EAAAA,CAAC,GAAGb,IAAI,CAACjB,OAAL,CAAa8B,CAAb,CAAJ;;EAEA,MAAI;EACAK,IAAAA,GAAG,CAACa,SAAJ,CAAclB,CAAd,EAAiBI,IAAjB;EACAD,IAAAA,IAAI,GAAGA,IAAI,IAAIH,CAAf;EACH,GAHD,CAIA,OAAOmB,IAAP,EAAa;EACT,YAAQA,IAAI,CAACP,IAAb;EACI,WAAK,QAAL;EACIT,QAAAA,IAAI,GAAGc,IAAI,CAAC9B,IAAI,CAAC0B,OAAL,CAAab,CAAb,CAAD,EAAkBC,IAAlB,EAAwBE,IAAxB,CAAX;EACAc,QAAAA,IAAI,CAACjB,CAAD,EAAIC,IAAJ,EAAUE,IAAV,CAAJ;EACA;;;;;EAKJ;EACI,YAAIW,IAAJ;;EACA,YAAI;EACAA,UAAAA,IAAI,GAAGT,GAAG,CAACe,QAAJ,CAAapB,CAAb,CAAP;EACH,SAFD,CAGA,OAAOqB,IAAP,EAAa;EACT,gBAAMF,IAAN;EACH;;EACD,YAAI,CAACL,IAAI,CAACE,WAAL,EAAL,EAAyB,MAAMG,IAAN;EACzB;EAlBR;EAoBH;;EAED,SAAOhB,IAAP;EACH,CA3CD;;ECtDA,MAAM;EAAEmB,EAAAA;EAAF,IAA2BrJ,YAAjC;;EAKA,SAASsJ,UAAT,CAAoBC,EAApB,EAAwBxH,SAAxB,EAAmC;EACjC,MAAIpB,GAAG,GAAG,EAAV;;EACA,OAAK,IAAIqB,CAAT,IAAcuH,EAAd,EAAkB;EAChB,UAAMC,IAAI,GAAGD,EAAE,CAACvH,CAAD,CAAf;EACA,UAAMO,IAAI,GAAGiH,IAAI,CAACjH,IAAL,GAAa,IAAGiH,IAAI,CAACjH,IAAK,GAA1B,GAA+B,EAA5C;EACA5B,IAAAA,GAAG,CAAC4D,IAAJ,CAAU,GAAEvC,CAAE,GAAEO,IAAK,KAAIiH,IAAI,CAACtI,UAAW,EAAzC;EACAa,IAAAA,SAAS,CAACC,CAAD,CAAT,GAAewH,IAAI,CAACvJ,QAApB;EACD;;EACD,SAAOU,GAAG,CAACqC,IAAJ,CAAS,MAAT,CAAP;EACD;;EAED,SAASyG,sBAAT,CAAgCC,MAAhC,EAAwC;EAAExE,EAAAA,KAAK,GAAG,EAAV;EAAciB,EAAAA,KAAK,GAAG,EAAtB;EAA0BwD,EAAAA,QAAQ,GAAG,EAArC;EAAyCC,EAAAA,UAAU,GAAG,IAAtD;EAA4DC,EAAAA,UAAU,GAAG;EAAzE,IAAmG,EAA3I,EAA+I;EAC7I,QAAMC,QAAQ,GAAG,EAAjB;EAAA,QAAqB/H,SAAS,GAAG,EAAjC;;EACA,OAAI,IAAIgI,SAAR,IAAqBL,MAArB,EAA6B;EAC3BI,IAAAA,QAAQ,CAACvF,IAAT,CAAcmF,MAAM,CAACK,SAAD,CAAN,CAAkBtI,QAAhC;EACAI,IAAAA,MAAM,CAACC,MAAP,CAAcC,SAAd,EAAyB2H,MAAM,CAACK,SAAD,CAAN,CAAkBhI,SAA3C;EACAF,IAAAA,MAAM,CAACC,MAAP,CAAcqE,KAAd,EAAqBuD,MAAM,CAACK,SAAD,CAAN,CAAkBhI,SAAlB,CAA4BE,KAAjD;EACAJ,IAAAA,MAAM,CAACC,MAAP,CAAc6H,QAAd,EAAwBD,MAAM,CAACK,SAAD,CAAN,CAAkBhI,SAAlB,CAA4BG,QAApD;EACD;;EACDL,EAAAA,MAAM,CAACC,MAAP,CAAcC,SAAS,CAACE,KAAxB,EAA+BkE,KAA/B;EACAtE,EAAAA,MAAM,CAACC,MAAP,CAAcC,SAAS,CAACG,QAAxB,EAAkCyH,QAAlC;EAEA,QAAMK,IAAI,GAAG,EAAb;EAAA,QAAiBC,IAAI,GAAG,EAAxB;EAEA,QAAMC,OAAO,GAAI;IACfZ,UAAU,CAACvH,SAAS,CAACE,KAAX,EAAkB+H,IAAlB,CAAwB;;;;IAIlCV,UAAU,CAACvH,SAAS,CAACG,QAAX,EAAqB+H,IAArB,CAA2B;;;;;EAKvC/E,KAAM;CAVN;EAaA4E,EAAAA,QAAQ,CAACvF,IAAT,CAAc2F,OAAd;EACAnI,EAAAA,SAAS,CAACE,KAAV,GAAkB+H,IAAlB;EACAjI,EAAAA,SAAS,CAACG,QAAV,GAAqB+H,IAArB;;EAEA,MAAIL,UAAJ,EAAgB;EACdC,IAAAA,UAAU,GAAG3C,IAAI,CAACjB,OAAL,CAAa4D,UAAb,CAAb;EACA/B,IAAAA,MAAM,CAACZ,IAAI,CAAC0B,OAAL,CAAaiB,UAAb,CAAD,CAAN;EACA,UAAMM,OAAO,GAAG,iFAAhB;EACApD,IAAAA,EAAE,CAACqD,aAAH,CAAiBP,UAAjB,EAA6BM,OAAO,GAAGL,QAAQ,CAAC9G,IAAT,CAAc,MAAd,CAAvC;EACD;;EAED,SAAOqG,oBAAoB,CAAC;EAC1BS,IAAAA,QAD0B;EAE1B/H,IAAAA;EAF0B,GAAD,CAA3B;EAID;;EAED,0BAAc,GAAG0H,sBAAjB;;EC3DA,SAASrF,QAAT,CAAgBqB,IAAhB,EAAsBC,GAAtB,EAA2B;EACzB,QAAMC,GAAG,GAAG,EAAZ;;EACA,OAAK,IAAIC,CAAT,IAAcH,IAAd,EAAoB;EAClB,QAAIC,GAAG,CAACE,CAAD,CAAP,EAAYD,GAAG,CAACC,CAAD,CAAH,GAASH,IAAI,CAACG,CAAD,CAAb;EACb;;EACD,SAAOD,GAAP;EACD;;EAED,SAAS0E,gBAAT,CAA0BnE,GAA1B,EAA+B;EAAEjC,EAAAA,OAAO,GAAG;EAAZ,IAAmB,EAAlD,EAAsD;EACpD,MAAI1B,IAAI,GAAG,EAAX;EACAV,EAAAA,MAAM,CAACC,MAAP,CAAcS,IAAd,EAAoB2D,GAAG,CAACC,KAAxB,EAA+BD,GAAG,CAACoE,IAAnC,EAAyCpE,GAAG,CAACqE,MAA7C;EAEA,MAAItG,OAAO,CAACE,MAAR,GAAiB,CAArB,EAAwB5B,IAAI,GAAG6B,QAAM,CAAC7B,IAAD,EAAQI,GAAD,IAASsB,OAAO,CAACpB,OAAR,CAAgBF,GAAhB,KAAwB,CAAxC,CAAb;;EAExB,OAAK,IAAIA,GAAT,IAAgBJ,IAAhB,EAAsB;EACpB,QAAI;EACFA,MAAAA,IAAI,CAACI,GAAD,CAAJ,GAAY6H,IAAI,CAACC,KAAL,CAAWlI,IAAI,CAACI,GAAD,CAAf,CAAZ;EACD,KAFD,CAEE,OAAMgC,CAAN,EAAS;EAEV;EACF;;EAED,QAAMhE,GAAG,GAAG6J,IAAI,CAACE,SAAL,CAAenI,IAAf,EAAqBoI,KAArB,CAA2B,CAA3B,EAA8B,CAAC,CAA/B,EAAkCC,OAAlC,CAA0C,gBAA1C,EAA2D,KAA3D,CAAZ;EACA,SAAOjK,GAAG,GAAI,IAAGA,GAAI,GAAX,GAAgB,EAA1B;EACD;;EAED,oBAAc,GAAG0J,gBAAjB;;EC1BA,MAAMQ,QAAQ,GAAG,EAAjB;EACAA,QAAQ,CAAC3K,KAAT,GAAiBF,KAAjB;EACA6K,QAAQ,CAAC/E,gBAAT,GAA4BgF,gBAA5B;EACAD,QAAQ,CAACpE,UAAT,GAAsBsE,UAAtB;EACAF,QAAQ,CAACpB,sBAAT,GAAkCuB,sBAAlC;EACAH,QAAQ,CAACR,gBAAT,GAA4BY,gBAA5B;EAEA,aAAc,GAAGJ,QAAjB;;;;;;;;;;;"}