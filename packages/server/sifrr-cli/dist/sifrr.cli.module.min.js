/*! Sifrr.Cli v0.0.4 - sifrr project | MIT licensed | https://github.com/sifrr/sifrr */
import e from"fs";import r from"path";import t from"mkdirp";var n={elementGenerate:n=>{const o=n.name;((n,o,i=!1)=>(t.sync(r.dirname(n),e=>{if(e)throw e}),e.existsSync(n)&&!i?(process.stderr.write(`File already exists at ${n}`),process.exit(1),!1):(e.writeFileSync(n,o,e=>{if(e)throw e}),process.stdout.write(`File was saved at '${n}'!`),!0)))(r.resolve(n.path,`./${o.split("-").join("/")}.js`),((e,r)=>`window.Sifrr = window.Sifrr || {};\nwindow.Sifrr.Dom = window.Sifrr.Dom || require('@sifrr/dom');\nconst Sifrr = window.Sifrr;\n\nconst template = Sifrr.Dom.template\`\x3c!-- Content --\x3e\`\n\nclass ${e} extends Sifrr.Dom.Element${r?`.extends(${r})`:""} {\n  onConnect() {\n\n  }\n\n  onDisconnect() {\n\n  }\n}\n${e}.defaultState = {};\nSifrr.Dom.register(${e}${r?", { extends: '/* tag of html to extend, eg. tr */' }":""});\n`)(o.replace(/-([a-z])/g,e=>e[1].toUpperCase()).replace(/^([a-z])/,e=>e[0].toUpperCase()),n.extends),"true"===n.force)}},o=n.elementGenerate;export default n;export{o as elementGenerate};
/*! (c) @aadityataparia */
